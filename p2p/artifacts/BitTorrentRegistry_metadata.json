{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "initialOwner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_fileRegistry",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_verifier",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "EnforcedPause",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ExpectedPause",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "OwnableInvalidOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "OwnableUnauthorizedAccount",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ReentrancyGuardReentrantCall",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "Paused",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "peerId",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "anonymousId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"name": "PeerRegistered",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "peerId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newReputation",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"name": "PeerReputationUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "infoHash",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "pieceIndex",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "pieceHash",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"name": "PieceVerified",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "torrentHash",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "peer",
						"type": "address"
					}
				],
				"name": "SwarmJoined",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "torrentHash",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "peer",
						"type": "address"
					}
				],
				"name": "SwarmLeft",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "torrentHash",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "TorrentAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "infoHash",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "fileCommitment",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "size",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"name": "TorrentRegistered",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "torrentHash",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "remover",
						"type": "address"
					}
				],
				"name": "TorrentRemoved",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "Unpaused",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "MAX_PIECE_SIZE",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "MIN_REPUTATION_SCORE",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "REPUTATION_DECREASE",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "REPUTATION_INCREASE",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "torrentHash",
						"type": "bytes32"
					},
					{
						"internalType": "bytes",
						"name": "metadata",
						"type": "bytes"
					}
				],
				"name": "addTorrent",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "fileRegistry",
				"outputs": [
					{
						"internalType": "contract IFileRegistry",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "peer",
						"type": "address"
					}
				],
				"name": "getPeerStats",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "peerId",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "reputation",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "uploadCount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "downloadCount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "lastSeen",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "isActive",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "infoHash",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "pieceIndex",
						"type": "uint256"
					}
				],
				"name": "getPieceHash",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "torrentHash",
						"type": "bytes32"
					}
				],
				"name": "getSwarmPeers",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "infoHash",
						"type": "bytes32"
					}
				],
				"name": "getTorrent",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "fileCommitment",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "size",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "pieceCount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "pieceSize",
						"type": "uint256"
					},
					{
						"internalType": "bytes32",
						"name": "piecesRoot",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "isPrivate",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "isEncrypted",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "torrentHash",
						"type": "bytes32"
					}
				],
				"name": "getTorrentMetadata",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "torrentHash",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "peer",
						"type": "address"
					}
				],
				"name": "isPeerInSwarm",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "torrentHash",
						"type": "bytes32"
					}
				],
				"name": "joinSwarm",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "torrentHash",
						"type": "bytes32"
					}
				],
				"name": "leaveSwarm",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pause",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "paused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "peerAnonymousIds",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "peers",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "peerId",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "reputation",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "uploadCount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "downloadCount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "lastSeen",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "isActive",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "proof",
						"type": "bytes"
					}
				],
				"name": "registerPeer",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "infoHash",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "fileCommitment",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "size",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "pieceSize",
						"type": "uint256"
					},
					{
						"internalType": "bytes32",
						"name": "piecesRoot",
						"type": "bytes32"
					},
					{
						"internalType": "bytes",
						"name": "proof",
						"type": "bytes"
					}
				],
				"name": "registerTorrent",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "torrentHash",
						"type": "bytes32"
					}
				],
				"name": "removeTorrent",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "torrentPeerCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "torrents",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "infoHash",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "fileCommitment",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "size",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "pieceCount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "pieceSize",
						"type": "uint256"
					},
					{
						"internalType": "bytes32",
						"name": "piecesRoot",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "isPrivate",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "isEncrypted",
						"type": "bool"
					},
					{
						"internalType": "bytes32",
						"name": "encryptionProof",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "unpause",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "verifier",
				"outputs": [
					{
						"internalType": "contract IVerifier",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "infoHash",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "pieceIndex",
						"type": "uint256"
					},
					{
						"internalType": "bytes32",
						"name": "pieceHash",
						"type": "bytes32"
					},
					{
						"internalType": "bytes",
						"name": "proof",
						"type": "bytes"
					}
				],
				"name": "verifyPiece",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "Handles torrent tracking and peer management with privacy features",
			"errors": {
				"EnforcedPause()": [
					{
						"details": "The operation failed because the contract is paused."
					}
				],
				"ExpectedPause()": [
					{
						"details": "The operation failed because the contract is not paused."
					}
				],
				"OwnableInvalidOwner(address)": [
					{
						"details": "The owner is not a valid owner account. (eg. `address(0)`)"
					}
				],
				"OwnableUnauthorizedAccount(address)": [
					{
						"details": "The caller account is not authorized to perform an operation."
					}
				],
				"ReentrancyGuardReentrantCall()": [
					{
						"details": "Unauthorized reentrant call."
					}
				]
			},
			"events": {
				"Paused(address)": {
					"details": "Emitted when the pause is triggered by `account`."
				},
				"Unpaused(address)": {
					"details": "Emitted when the pause is lifted by `account`."
				}
			},
			"kind": "dev",
			"methods": {
				"addTorrent(bytes32,bytes)": {
					"params": {
						"metadata": "Torrent metadata",
						"torrentHash": "Torrent hash"
					}
				},
				"constructor": {
					"params": {
						"_fileRegistry": "Address of FileRegistry contract",
						"_verifier": "Address of Verifier contract",
						"initialOwner": "Initial contract owner"
					}
				},
				"getPeerStats(address)": {
					"params": {
						"peer": "Peer address"
					}
				},
				"getPieceHash(bytes32,uint256)": {
					"params": {
						"infoHash": "Torrent info hash",
						"pieceIndex": "Piece index"
					}
				},
				"getSwarmPeers(bytes32)": {
					"params": {
						"torrentHash": "Torrent hash"
					}
				},
				"getTorrent(bytes32)": {
					"params": {
						"infoHash": "Torrent info hash"
					}
				},
				"getTorrentMetadata(bytes32)": {
					"params": {
						"torrentHash": "Torrent hash"
					}
				},
				"isPeerInSwarm(bytes32,address)": {
					"params": {
						"peer": "Peer address",
						"torrentHash": "Torrent hash"
					}
				},
				"joinSwarm(bytes32)": {
					"params": {
						"torrentHash": "Torrent hash"
					}
				},
				"leaveSwarm(bytes32)": {
					"params": {
						"torrentHash": "Torrent hash"
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"paused()": {
					"details": "Returns true if the contract is paused, and false otherwise."
				},
				"registerTorrent(bytes32,bytes32,uint256,uint256,bytes32,bytes)": {
					"params": {
						"proof": "ZK proof for peer anonymity"
					}
				},
				"removeTorrent(bytes32)": {
					"params": {
						"torrentHash": "Torrent hash"
					}
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"verifyPiece(bytes32,uint256,bytes32,bytes)": {
					"params": {
						"infoHash": "Torrent info hash",
						"pieceHash": "Hash of piece data",
						"pieceIndex": "Piece index",
						"proof": "ZK proof for piece"
					}
				}
			},
			"title": "BitTorrentRegistry",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"addTorrent(bytes32,bytes)": {
					"notice": "Add a new torrent to the registry"
				},
				"constructor": {
					"notice": "Constructor"
				},
				"getPeerStats(address)": {
					"notice": "Get peer details"
				},
				"getPieceHash(bytes32,uint256)": {
					"notice": "Get piece hash"
				},
				"getSwarmPeers(bytes32)": {
					"notice": "Get peers in torrent swarm"
				},
				"getTorrent(bytes32)": {
					"notice": "Get torrent details"
				},
				"getTorrentMetadata(bytes32)": {
					"notice": "Get torrent metadata"
				},
				"isPeerInSwarm(bytes32,address)": {
					"notice": "Check if peer is in swarm"
				},
				"joinSwarm(bytes32)": {
					"notice": "Join a torrent swarm"
				},
				"leaveSwarm(bytes32)": {
					"notice": "Leave a torrent swarm"
				},
				"registerTorrent(bytes32,bytes32,uint256,uint256,bytes32,bytes)": {
					"notice": "Register as a peer"
				},
				"removeTorrent(bytes32)": {
					"notice": "Remove a torrent"
				},
				"verifyPiece(bytes32,uint256,bytes32,bytes)": {
					"notice": "Verify piece hash"
				}
			},
			"notice": "Manages BitTorrent integration for decentralized file sharing",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"p2p/BitTorrentRegistry.sol": "BitTorrentRegistry"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
				"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"@openzeppelin/contracts/utils/Pausable.sol": {
			"keccak256": "0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd",
			"license": "MIT",
			"urls": [
				"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc",
				"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc"
			]
		},
		"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
			"keccak256": "0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3",
			"license": "MIT",
			"urls": [
				"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a",
				"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA"
			]
		},
		"interfaces/IBitTorrent.sol": {
			"keccak256": "0x173e15507ae09094cb399900613aae7145f3ce7d70376b381eafd93baf7b8f51",
			"license": "MIT",
			"urls": [
				"bzz-raw://a64292bc08f8c1d87013fa6d60aea90154c3098a0503f3e7deba4769901a4368",
				"dweb:/ipfs/QmcrQqq5VazxfHwKTDC6qCWUjmLxU2uyZsQFfQKGnqypHL"
			]
		},
		"interfaces/IFileRegistry.sol": {
			"keccak256": "0xc297a4bc330ebf98fba5feaf2add262e9e702c69e36d2521d5e7c54858fb939a",
			"license": "MIT",
			"urls": [
				"bzz-raw://ee40936e054234974ed297210d9a5cf7e49956224a4465e5661594bd17a4884d",
				"dweb:/ipfs/QmeALYE6VxiLuBSb75BLwbXpXBm7JQd7aXtkcF5mbxRCzx"
			]
		},
		"interfaces/IVerifier.sol": {
			"keccak256": "0x7366eb0586930533175cf1c84ccaf1708d36b6ee386c8dbede6dc06183b0d890",
			"license": "MIT",
			"urls": [
				"bzz-raw://4212a727ff847289ccfb40ffdd1d9cc51d41768913a1b0bbe38f670f4266bc74",
				"dweb:/ipfs/QmZr2PZMjNtqDz8aR55jB3vHDkGawJ2PtJUNv3uhorPVeB"
			]
		},
		"p2p/BitTorrentRegistry.sol": {
			"keccak256": "0x0ceeec69c6d288ddebc4896e3ba500368ae1e3dc36ba17787db3f1a73678b9f9",
			"license": "MIT",
			"urls": [
				"bzz-raw://174d2c6843fc6051fab95ab1ea015c19835ba9072c32d625dce14a6158dacd04",
				"dweb:/ipfs/QmVQAnJFVGuUdQh86bExWZfMrUJwDWi1YAR3AYUQ6LtEio"
			]
		}
	},
	"version": 1
}