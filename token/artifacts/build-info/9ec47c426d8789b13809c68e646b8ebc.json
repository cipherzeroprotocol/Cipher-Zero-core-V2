{
	"id": "9ec47c426d8789b13809c68e646b8ebc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"token/TokenVesting.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.26;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\n\n/**\n * @title TokenVesting\n * @notice Manages token vesting schedules for CipherZeroToken\n * @dev Supports multiple beneficiaries with different vesting schedules\n */\ncontract TokenVesting is Ownable, ReentrancyGuard, Pausable {\n    using Math for uint256;\n\n    // Vesting schedule structure\n    struct VestingSchedule {\n        uint256 totalAmount;     // Total amount of tokens to vest\n        uint256 releasedAmount;  // Amount of tokens released so far\n        uint256 startTime;       // Start time of the vesting period\n        uint256 duration;        // Duration of the vesting period\n        uint256 cliffDuration;   // Cliff period duration\n        uint256 slicePeriod;     // Period between vesting releases\n        bool revocable;         // Whether the schedule can be revoked\n        bool revoked;           // Whether the schedule has been revoked\n    }\n\n    // Schedule types\n    enum ScheduleType {\n        TEAM,           // Team and advisors\n        ECOSYSTEM,      // Ecosystem development\n        COMMUNITY,      // Community rewards\n        PRIVATE_SALE,   // Private sale participants\n        PUBLIC_SALE     // Public sale participants\n    }\n\n    // State variables\n    IERC20 public token;\n    \n    mapping(address => VestingSchedule[]) public vestingSchedules;\n    mapping(address => uint256) public vestingScheduleCount;\n    mapping(ScheduleType => uint256) public totalVestedByType;\n    mapping(ScheduleType => uint256) public maxVestingByType;\n    \n    uint256 public vestingSchedulesCount;\n    address public treasury;\n\n    // Events\n    event VestingScheduleCreated(\n        address indexed beneficiary,\n        uint256 indexed scheduleId,\n        ScheduleType scheduleType,\n        uint256 amount\n    );\n\n    event VestingScheduleRevoked(\n        address indexed beneficiary,\n        uint256 indexed scheduleId,\n        uint256 refundAmount\n    );\n\n    event TokensReleased(\n        address indexed beneficiary,\n        uint256 indexed scheduleId,\n        uint256 amount\n    );\n\n    event TreasuryUpdated(\n        address indexed oldTreasury,\n        address indexed newTreasury\n    );\n\n    /**\n     * @notice Constructor\n     * @param initialOwner Initial owner address\n     * @param _token CipherZeroToken address\n     * @param _treasury Treasury address\n     */\n    constructor(\n        address initialOwner,\n        address _token,\n        address _treasury\n    ) Ownable(initialOwner) {\n        require(_token != address(0), \"Invalid token address\");\n        require(_treasury != address(0), \"Invalid treasury address\");\n        \n        token = IERC20(_token);\n        treasury = _treasury;\n\n        // Initialize max vesting amounts by type\n        maxVestingByType[ScheduleType.TEAM] = 150_000_000 * 10**18;        // 15%\n        maxVestingByType[ScheduleType.ECOSYSTEM] = 250_000_000 * 10**18;   // 25%\n        maxVestingByType[ScheduleType.COMMUNITY] = 50_000_000 * 10**18;    // 5%\n        maxVestingByType[ScheduleType.PRIVATE_SALE] = 200_000_000 * 10**18; // 20%\n        maxVestingByType[ScheduleType.PUBLIC_SALE] = 200_000_000 * 10**18;  // 20%\n    }\n\n    /**\n     * @notice Create a new vesting schedule\n     */\n    function createVestingSchedule(\n        address beneficiary,\n        ScheduleType scheduleType,\n        uint256 amount,\n        uint256 startTime,\n        uint256 duration,\n        uint256 cliffDuration,\n        uint256 slicePeriod,\n        bool revocable\n    ) external onlyOwner {\n        require(beneficiary != address(0), \"Invalid beneficiary\");\n        require(amount > 0, \"Amount must be > 0\");\n        require(duration > 0, \"Duration must be > 0\");\n        require(slicePeriod > 0, \"Slice period must be > 0\");\n        require(duration >= cliffDuration, \"Invalid cliff\");\n        require(startTime >= block.timestamp, \"Start time < now\");\n        \n        // Check vesting cap for schedule type\n        require(\n            totalVestedByType[scheduleType] + amount <= maxVestingByType[scheduleType],\n            \"Exceeds max vesting\"\n        );\n\n        // Transfer tokens to contract\n        require(\n            token.transferFrom(msg.sender, address(this), amount),\n            \"Transfer failed\"\n        );\n\n        // Create schedule\n        vestingSchedules[beneficiary].push(VestingSchedule({\n            totalAmount: amount,\n            releasedAmount: 0,\n            startTime: startTime,\n            duration: duration,\n            cliffDuration: cliffDuration,\n            slicePeriod: slicePeriod,\n            revocable: revocable,\n            revoked: false\n        }));\n\n        // Update counters\n        vestingScheduleCount[beneficiary]++;\n        vestingSchedulesCount++;\n        totalVestedByType[scheduleType] = totalVestedByType[scheduleType] + amount;\n\n        emit VestingScheduleCreated(\n            beneficiary,\n            vestingScheduleCount[beneficiary] - 1,\n            scheduleType,\n            amount\n        );\n    }\n\n    /**\n     * @notice Release vested tokens for a schedule\n     */\n    function release(uint256 scheduleId) external nonReentrant {\n        VestingSchedule storage schedule = vestingSchedules[msg.sender][scheduleId];\n        require(schedule.totalAmount > 0, \"No such schedule\");\n        require(!schedule.revoked, \"Schedule revoked\");\n\n        uint256 vestedAmount = _computeVestedAmount(schedule);\n        uint256 releasableAmount = vestedAmount - schedule.releasedAmount;\n        require(releasableAmount > 0, \"No tokens to release\");\n\n        // Update released amount\n        schedule.releasedAmount = schedule.releasedAmount + releasableAmount;\n\n        // Transfer tokens\n        require(\n            token.transfer(msg.sender, releasableAmount),\n            \"Transfer failed\"\n        );\n\n        emit TokensReleased(msg.sender, scheduleId, releasableAmount);\n    }\n\n    /**\n     * @notice Revoke a vesting schedule\n     */\n    function revoke(\n        address beneficiary,\n        uint256 scheduleId\n    ) external onlyOwner {\n        VestingSchedule storage schedule = vestingSchedules[beneficiary][scheduleId];\n        require(schedule.totalAmount > 0, \"No such schedule\");\n        require(schedule.revocable, \"Not revocable\");\n        require(!schedule.revoked, \"Already revoked\");\n\n        // Calculate vested amount before revocation\n        uint256 vestedAmount = _computeVestedAmount(schedule);\n        uint256 refundAmount = schedule.totalAmount - vestedAmount;\n\n        // Mark as revoked\n        schedule.revoked = true;\n\n        // Transfer remaining tokens to treasury\n        if (refundAmount > 0) {\n            require(\n                token.transfer(treasury, refundAmount),\n                \"Transfer failed\"\n            );\n        }\n\n        emit VestingScheduleRevoked(beneficiary, scheduleId, refundAmount);\n    }\n\n    /**\n     * @notice Compute vested amount for a schedule\n     */\n    function _computeVestedAmount(\n        VestingSchedule memory schedule\n    ) internal view returns (uint256) {\n        if (block.timestamp < schedule.startTime) {\n            return 0;\n        }\n\n        if (block.timestamp < schedule.startTime + schedule.cliffDuration) {\n            return 0;\n        }\n\n        if (block.timestamp >= schedule.startTime + schedule.duration) {\n            return schedule.totalAmount;\n        }\n\n        uint256 timeFromStart = block.timestamp - schedule.startTime;\n        uint256 secondsPerSlice = schedule.slicePeriod;\n        uint256 vestedSlices = timeFromStart / secondsPerSlice;\n        uint256 vestedSeconds = vestedSlices * secondsPerSlice;\n\n        uint256 vestedAmount = (schedule.totalAmount * vestedSeconds) / schedule.duration;\n\n        return vestedAmount;\n    }\n\n    // View functions remain unchanged...\n    function getVestingSchedule(\n        address beneficiary,\n        uint256 scheduleId\n    ) external view returns (\n        uint256 totalAmount,\n        uint256 releasedAmount,\n        uint256 startTime,\n        uint256 duration,\n        uint256 cliffDuration,\n        uint256 slicePeriod,\n        bool revocable,\n        bool revoked\n    ) {\n        VestingSchedule memory schedule = vestingSchedules[beneficiary][scheduleId];\n        return (\n            schedule.totalAmount,\n            schedule.releasedAmount,\n            schedule.startTime,\n            schedule.duration,\n            schedule.cliffDuration,\n            schedule.slicePeriod,\n            schedule.revocable,\n            schedule.revoked\n        );\n    }\n\n    function computeReleasableAmount(\n        address beneficiary,\n        uint256 scheduleId\n    ) external view returns (uint256) {\n        VestingSchedule memory schedule = vestingSchedules[beneficiary][scheduleId];\n        return _computeVestedAmount(schedule) - schedule.releasedAmount;\n    }\n\n    /**\n     * @notice Update treasury address\n     */\n    function updateTreasury(address newTreasury) external onlyOwner {\n        require(newTreasury != address(0), \"Invalid address\");\n        address oldTreasury = treasury;\n        treasury = newTreasury;\n        emit TreasuryUpdated(oldTreasury, newTreasury);\n    }\n\n    // Emergency functions\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n}"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Panic.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Panic.sol": {
				"Panic": {
					"abi": [],
					"devdoc": {
						"details": "Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ARRAY_OUT_OF_BOUNDS": {
								"details": "array out of bounds access"
							},
							"ASSERT": {
								"details": "used by the assert() builtin"
							},
							"DIVISION_BY_ZERO": {
								"details": "division or modulo by zero"
							},
							"EMPTY_ARRAY_POP": {
								"details": "empty array pop"
							},
							"ENUM_CONVERSION_ERROR": {
								"details": "enum conversion error"
							},
							"GENERIC": {
								"details": "generic / unspecified error"
							},
							"INVALID_INTERNAL_FUNCTION": {
								"details": "calling invalid internal function"
							},
							"RESOURCE_ERROR": {
								"details": "resource error (too large allocation or too large array)"
							},
							"STORAGE_ENCODING_ERROR": {
								"details": "invalid encoding in storage"
							},
							"UNDER_OVERFLOW": {
								"details": "arithmetic underflow or overflow"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Panic.sol\":657:1972  library Panic {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Panic.sol\":657:1972  library Panic {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f55ff6bf7552944e02bc2e758597beaadbcf6c3c3213e4e251fce95e8c3dd88b64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f55ff6bf7552944e02bc2e758597beaadbcf6c3c3213e4e251fce95e8c3dd88b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PUSH0 0xF6 0xBF PUSH22 0x52944E02BC2E758597BEAADBCF6C3C3213E4E251FCE9 MCOPY DUP13 RETURNDATASIZE 0xD8 DUP12 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "657:1315:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f55ff6bf7552944e02bc2e758597beaadbcf6c3c3213e4e251fce95e8c3dd88b64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PUSH0 0xF6 0xBF PUSH22 0x52944E02BC2E758597BEAADBCF6C3C3213E4E251FCE9 MCOPY DUP13 RETURNDATASIZE 0xD8 DUP12 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "657:1315:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"panic(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f55ff6bf7552944e02bc2e758597beaadbcf6c3c3213e4e251fce95e8c3dd88b64736f6c634300081a0033",
									".code": [
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"token/TokenVesting.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 316,
								"contract": "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 435,
								"contract": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":281:28307  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":281:28307  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122097eb3e8b9911582e522d3f41ab1db4b7b47f1eeabeabcc4dd92d878384fd569564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122097eb3e8b9911582e522d3f41ab1db4b7b47f1eeabeabcc4dd92d878384fd569564736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0xEB RETURNDATACOPY DUP12 SWAP10 GT PC 0x2E MSTORE 0x2D EXTCODEHASH COINBASE 0xAB SAR 0xB4 0xB7 0xB4 PUSH32 0x1EEABEABCC4DD92D878384FD569564736F6C634300081A003300000000000000 ",
							"sourceMap": "281:28026:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122097eb3e8b9911582e522d3f41ab1db4b7b47f1eeabeabcc4dd92d878384fd569564736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0xEB RETURNDATACOPY DUP12 SWAP10 GT PC 0x2E MSTORE 0x2D EXTCODEHASH COINBASE 0xAB SAR 0xB4 0xB7 0xB4 PUSH32 0x1EEABEABCC4DD92D878384FD569564736F6C634300081A003300000000000000 ",
							"sourceMap": "281:28026:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_zeroBytes(bytes memory)": "infinite",
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"invMod(uint256,uint256)": "infinite",
								"invModPrime(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"modExp(bytes memory,bytes memory,bytes memory)": "infinite",
								"modExp(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"ternary(bool,uint256,uint256)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryModExp(bytes memory,bytes memory,bytes memory)": "infinite",
								"tryModExp(uint256,uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122097eb3e8b9911582e522d3f41ab1db4b7b47f1eeabeabcc4dd92d878384fd569564736f6c634300081a0033",
									".code": [
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"token/TokenVesting.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"SafeCast": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntToUint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintToInt",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"errors": {
							"SafeCastOverflowedIntDowncast(uint8,int256)": [
								{
									"details": "Value doesn't fit in an int of `bits` size."
								}
							],
							"SafeCastOverflowedIntToUint(int256)": [
								{
									"details": "An int value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintDowncast(uint8,uint256)": [
								{
									"details": "Value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintToInt(uint256)": [
								{
									"details": "An uint value doesn't fit in an int of `bits` size."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":769:34942  library SafeCast {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":769:34942  library SafeCast {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205d4e812b64f9a3acb1592292515eb6e851b13f0d0571d796380fee560c22512c64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205d4e812b64f9a3acb1592292515eb6e851b13f0d0571d796380fee560c22512c64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TSTORE 0x4E DUP2 0x2B PUSH5 0xF9A3ACB159 0x22 SWAP3 MLOAD MCOPY 0xB6 0xE8 MLOAD 0xB1 EXTCODEHASH 0xD SDIV PUSH18 0xD796380FEE560C22512C64736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "769:34173:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205d4e812b64f9a3acb1592292515eb6e851b13f0d0571d796380fee560c22512c64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TSTORE 0x4E DUP2 0x2B PUSH5 0xF9A3ACB159 0x22 SWAP3 MLOAD MCOPY 0xB6 0xE8 MLOAD 0xB1 EXTCODEHASH 0xD SDIV PUSH18 0xD796380FEE560C22512C64736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "769:34173:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"toInt104(int256)": "infinite",
								"toInt112(int256)": "infinite",
								"toInt120(int256)": "infinite",
								"toInt128(int256)": "infinite",
								"toInt136(int256)": "infinite",
								"toInt144(int256)": "infinite",
								"toInt152(int256)": "infinite",
								"toInt16(int256)": "infinite",
								"toInt160(int256)": "infinite",
								"toInt168(int256)": "infinite",
								"toInt176(int256)": "infinite",
								"toInt184(int256)": "infinite",
								"toInt192(int256)": "infinite",
								"toInt200(int256)": "infinite",
								"toInt208(int256)": "infinite",
								"toInt216(int256)": "infinite",
								"toInt224(int256)": "infinite",
								"toInt232(int256)": "infinite",
								"toInt24(int256)": "infinite",
								"toInt240(int256)": "infinite",
								"toInt248(int256)": "infinite",
								"toInt256(uint256)": "infinite",
								"toInt32(int256)": "infinite",
								"toInt40(int256)": "infinite",
								"toInt48(int256)": "infinite",
								"toInt56(int256)": "infinite",
								"toInt64(int256)": "infinite",
								"toInt72(int256)": "infinite",
								"toInt8(int256)": "infinite",
								"toInt80(int256)": "infinite",
								"toInt88(int256)": "infinite",
								"toInt96(int256)": "infinite",
								"toUint(bool)": "infinite",
								"toUint104(uint256)": "infinite",
								"toUint112(uint256)": "infinite",
								"toUint120(uint256)": "infinite",
								"toUint128(uint256)": "infinite",
								"toUint136(uint256)": "infinite",
								"toUint144(uint256)": "infinite",
								"toUint152(uint256)": "infinite",
								"toUint16(uint256)": "infinite",
								"toUint160(uint256)": "infinite",
								"toUint168(uint256)": "infinite",
								"toUint176(uint256)": "infinite",
								"toUint184(uint256)": "infinite",
								"toUint192(uint256)": "infinite",
								"toUint200(uint256)": "infinite",
								"toUint208(uint256)": "infinite",
								"toUint216(uint256)": "infinite",
								"toUint224(uint256)": "infinite",
								"toUint232(uint256)": "infinite",
								"toUint24(uint256)": "infinite",
								"toUint240(uint256)": "infinite",
								"toUint248(uint256)": "infinite",
								"toUint256(int256)": "infinite",
								"toUint32(uint256)": "infinite",
								"toUint40(uint256)": "infinite",
								"toUint48(uint256)": "infinite",
								"toUint56(uint256)": "infinite",
								"toUint64(uint256)": "infinite",
								"toUint72(uint256)": "infinite",
								"toUint8(uint256)": "infinite",
								"toUint80(uint256)": "infinite",
								"toUint88(uint256)": "infinite",
								"toUint96(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205d4e812b64f9a3acb1592292515eb6e851b13f0d0571d796380fee560c22512c64736f6c634300081a0033",
									".code": [
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"token/TokenVesting.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"token/TokenVesting.sol": {
				"TokenVesting": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_treasury",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "scheduleId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensReleased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldTreasury",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newTreasury",
									"type": "address"
								}
							],
							"name": "TreasuryUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "scheduleId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum TokenVesting.ScheduleType",
									"name": "scheduleType",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "VestingScheduleCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "scheduleId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "refundAmount",
									"type": "uint256"
								}
							],
							"name": "VestingScheduleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "scheduleId",
									"type": "uint256"
								}
							],
							"name": "computeReleasableAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"internalType": "enum TokenVesting.ScheduleType",
									"name": "scheduleType",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "cliffDuration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "slicePeriod",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "revocable",
									"type": "bool"
								}
							],
							"name": "createVestingSchedule",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "scheduleId",
									"type": "uint256"
								}
							],
							"name": "getVestingSchedule",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "releasedAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "cliffDuration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "slicePeriod",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "revocable",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "revoked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum TokenVesting.ScheduleType",
									"name": "",
									"type": "uint8"
								}
							],
							"name": "maxVestingByType",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "scheduleId",
									"type": "uint256"
								}
							],
							"name": "release",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "scheduleId",
									"type": "uint256"
								}
							],
							"name": "revoke",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum TokenVesting.ScheduleType",
									"name": "",
									"type": "uint8"
								}
							],
							"name": "totalVestedByType",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasury",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newTreasury",
									"type": "address"
								}
							],
							"name": "updateTreasury",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "vestingScheduleCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "vestingSchedules",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "releasedAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "cliffDuration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "slicePeriod",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "revocable",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "revoked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vestingSchedulesCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Supports multiple beneficiaries with different vesting schedules",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"_token": "CipherZeroToken address",
									"_treasury": "Treasury address",
									"initialOwner": "Initial owner address"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "TokenVesting",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"token/TokenVesting.sol\":503:9544  contract TokenVesting is Ownable, ReentrancyGuard, Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"token/TokenVesting.sol\":2637:3432  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"token/TokenVesting.sol\":2744:2756  initialOwner */\n  dup3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2061:2068  _status */\n  dup1\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2061:2082  _status = NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1241:1246  false */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1231:1238  _paused */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1231:1246  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"token/TokenVesting.sol\":2794:2795  0 */\n  0x00\n    /* \"token/TokenVesting.sol\":2776:2796  _token != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"token/TokenVesting.sol\":2776:2782  _token */\n  dup3\n    /* \"token/TokenVesting.sol\":2776:2796  _token != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"token/TokenVesting.sol\":2768:2822  require(_token != address(0), \"Invalid token address\") */\n  tag_17\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_18\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_17:\n    /* \"token/TokenVesting.sol\":2861:2862  0 */\n  0x00\n    /* \"token/TokenVesting.sol\":2840:2863  _treasury != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"token/TokenVesting.sol\":2840:2849  _treasury */\n  dup2\n    /* \"token/TokenVesting.sol\":2840:2863  _treasury != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"token/TokenVesting.sol\":2832:2892  require(_treasury != address(0), \"Invalid treasury address\") */\n  tag_20\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_21\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_20:\n    /* \"token/TokenVesting.sol\":2926:2932  _token */\n  dup2\n    /* \"token/TokenVesting.sol\":2911:2916  token */\n  0x02\n  0x01\n    /* \"token/TokenVesting.sol\":2911:2933  token = IERC20(_token) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"token/TokenVesting.sol\":2954:2963  _treasury */\n  dup1\n    /* \"token/TokenVesting.sol\":2943:2951  treasury */\n  0x08\n  0x00\n    /* \"token/TokenVesting.sol\":2943:2963  treasury = _treasury */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"token/TokenVesting.sol\":3062:3082  150_000_000 * 10**18 */\n  0x7c13bc4b2c133c56000000\n    /* \"token/TokenVesting.sol\":3024:3040  maxVestingByType */\n  0x06\n    /* \"token/TokenVesting.sol\":3024:3059  maxVestingByType[ScheduleType.TEAM] */\n  0x00\n    /* \"token/TokenVesting.sol\":3041:3058  ScheduleType.TEAM */\n  dup1\n    /* \"token/TokenVesting.sol\":3024:3059  maxVestingByType[ScheduleType.TEAM] */\n  0x04\n  dup2\n  gt\n  iszero\n  tag_23\n  jumpi\n  tag_24\n  tag_25\n  jump\t// in\ntag_24:\ntag_23:\n  0x04\n  dup2\n  gt\n  iszero\n  tag_26\n  jumpi\n  tag_27\n  tag_25\n  jump\t// in\ntag_27:\ntag_26:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"token/TokenVesting.sol\":3024:3082  maxVestingByType[ScheduleType.TEAM] = 150_000_000 * 10**18 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"token/TokenVesting.sol\":3149:3169  250_000_000 * 10**18 */\n  0xcecb8f27f4200f3a000000\n    /* \"token/TokenVesting.sol\":3106:3122  maxVestingByType */\n  0x06\n    /* \"token/TokenVesting.sol\":3106:3146  maxVestingByType[ScheduleType.ECOSYSTEM] */\n  0x00\n    /* \"token/TokenVesting.sol\":3123:3145  ScheduleType.ECOSYSTEM */\n  0x01\n    /* \"token/TokenVesting.sol\":3106:3146  maxVestingByType[ScheduleType.ECOSYSTEM] */\n  0x04\n  dup2\n  gt\n  iszero\n  tag_28\n  jumpi\n  tag_29\n  tag_25\n  jump\t// in\ntag_29:\ntag_28:\n  0x04\n  dup2\n  gt\n  iszero\n  tag_30\n  jumpi\n  tag_31\n  tag_25\n  jump\t// in\ntag_31:\ntag_30:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"token/TokenVesting.sol\":3106:3169  maxVestingByType[ScheduleType.ECOSYSTEM] = 250_000_000 * 10**18 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"token/TokenVesting.sol\":3231:3250  50_000_000 * 10**18 */\n  0x295be96e64066972000000\n    /* \"token/TokenVesting.sol\":3188:3204  maxVestingByType */\n  0x06\n    /* \"token/TokenVesting.sol\":3188:3228  maxVestingByType[ScheduleType.COMMUNITY] */\n  0x00\n    /* \"token/TokenVesting.sol\":3205:3227  ScheduleType.COMMUNITY */\n  0x02\n    /* \"token/TokenVesting.sol\":3188:3228  maxVestingByType[ScheduleType.COMMUNITY] */\n  0x04\n  dup2\n  gt\n  iszero\n  tag_32\n  jumpi\n  tag_33\n  tag_25\n  jump\t// in\ntag_33:\ntag_32:\n  0x04\n  dup2\n  gt\n  iszero\n  tag_34\n  jumpi\n  tag_35\n  tag_25\n  jump\t// in\ntag_35:\ntag_34:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"token/TokenVesting.sol\":3188:3250  maxVestingByType[ScheduleType.COMMUNITY] = 50_000_000 * 10**18 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"token/TokenVesting.sol\":3315:3335  200_000_000 * 10**18 */\n  0xa56fa5b99019a5c8000000\n    /* \"token/TokenVesting.sol\":3269:3285  maxVestingByType */\n  0x06\n    /* \"token/TokenVesting.sol\":3269:3312  maxVestingByType[ScheduleType.PRIVATE_SALE] */\n  0x00\n    /* \"token/TokenVesting.sol\":3286:3311  ScheduleType.PRIVATE_SALE */\n  0x03\n    /* \"token/TokenVesting.sol\":3269:3312  maxVestingByType[ScheduleType.PRIVATE_SALE] */\n  0x04\n  dup2\n  gt\n  iszero\n  tag_36\n  jumpi\n  tag_37\n  tag_25\n  jump\t// in\ntag_37:\ntag_36:\n  0x04\n  dup2\n  gt\n  iszero\n  tag_38\n  jumpi\n  tag_39\n  tag_25\n  jump\t// in\ntag_39:\ntag_38:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"token/TokenVesting.sol\":3269:3335  maxVestingByType[ScheduleType.PRIVATE_SALE] = 200_000_000 * 10**18 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"token/TokenVesting.sol\":3397:3417  200_000_000 * 10**18 */\n  0xa56fa5b99019a5c8000000\n    /* \"token/TokenVesting.sol\":3352:3368  maxVestingByType */\n  0x06\n    /* \"token/TokenVesting.sol\":3352:3394  maxVestingByType[ScheduleType.PUBLIC_SALE] */\n  0x00\n    /* \"token/TokenVesting.sol\":3369:3393  ScheduleType.PUBLIC_SALE */\n  0x04\n    /* \"token/TokenVesting.sol\":3352:3394  maxVestingByType[ScheduleType.PUBLIC_SALE] */\n  dup1\n  dup2\n  gt\n  iszero\n  tag_40\n  jumpi\n  tag_41\n  tag_25\n  jump\t// in\ntag_41:\ntag_40:\n  0x04\n  dup2\n  gt\n  iszero\n  tag_42\n  jumpi\n  tag_43\n  tag_25\n  jump\t// in\ntag_43:\ntag_42:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"token/TokenVesting.sol\":3352:3417  maxVestingByType[ScheduleType.PUBLIC_SALE] = 200_000_000 * 10**18 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"token/TokenVesting.sol\":2637:3432  constructor(... */\n  pop\n  pop\n  pop\n    /* \"token/TokenVesting.sol\":503:9544  contract TokenVesting is Ownable, ReentrancyGuard, Pausable {... */\n  jump(tag_44)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_47:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_49:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_50:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_65\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_49\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_51:\n    /* \"#utility.yul\":641:665   */\n  tag_67\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_50\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_68:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_52:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_70\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_51\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1508   */\ntag_3:\n    /* \"#utility.yul\":933:939   */\n  0x00\n    /* \"#utility.yul\":941:947   */\n  dup1\n    /* \"#utility.yul\":949:955   */\n  0x00\n    /* \"#utility.yul\":998:1000   */\n  0x60\n    /* \"#utility.yul\":986:995   */\n  dup5\n    /* \"#utility.yul\":977:984   */\n  dup7\n    /* \"#utility.yul\":973:996   */\n  sub\n    /* \"#utility.yul\":969:1001   */\n  slt\n    /* \"#utility.yul\":966:1085   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":1004:1083   */\n  tag_73\n  tag_47\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":966:1085   */\ntag_72:\n    /* \"#utility.yul\":1124:1125   */\n  0x00\n    /* \"#utility.yul\":1149:1213   */\n  tag_74\n    /* \"#utility.yul\":1205:1212   */\n  dup7\n    /* \"#utility.yul\":1196:1202   */\n  dup3\n    /* \"#utility.yul\":1185:1194   */\n  dup8\n    /* \"#utility.yul\":1181:1203   */\n  add\n    /* \"#utility.yul\":1149:1213   */\n  tag_52\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":1139:1213   */\n  swap4\n  pop\n    /* \"#utility.yul\":1095:1223   */\n  pop\n    /* \"#utility.yul\":1262:1264   */\n  0x20\n    /* \"#utility.yul\":1288:1352   */\n  tag_75\n    /* \"#utility.yul\":1344:1351   */\n  dup7\n    /* \"#utility.yul\":1335:1341   */\n  dup3\n    /* \"#utility.yul\":1324:1333   */\n  dup8\n    /* \"#utility.yul\":1320:1342   */\n  add\n    /* \"#utility.yul\":1288:1352   */\n  tag_52\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":1278:1352   */\n  swap3\n  pop\n    /* \"#utility.yul\":1233:1362   */\n  pop\n    /* \"#utility.yul\":1401:1403   */\n  0x40\n    /* \"#utility.yul\":1427:1491   */\n  tag_76\n    /* \"#utility.yul\":1483:1490   */\n  dup7\n    /* \"#utility.yul\":1474:1480   */\n  dup3\n    /* \"#utility.yul\":1463:1472   */\n  dup8\n    /* \"#utility.yul\":1459:1481   */\n  add\n    /* \"#utility.yul\":1427:1491   */\n  tag_52\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":1417:1491   */\n  swap2\n  pop\n    /* \"#utility.yul\":1372:1501   */\n  pop\n    /* \"#utility.yul\":845:1508   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1514:1632   */\ntag_53:\n    /* \"#utility.yul\":1601:1625   */\n  tag_78\n    /* \"#utility.yul\":1619:1624   */\n  dup2\n    /* \"#utility.yul\":1601:1625   */\n  tag_50\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":1596:1599   */\n  dup3\n    /* \"#utility.yul\":1589:1626   */\n  mstore\n    /* \"#utility.yul\":1514:1632   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1638:1860   */\ntag_11:\n    /* \"#utility.yul\":1731:1735   */\n  0x00\n    /* \"#utility.yul\":1769:1771   */\n  0x20\n    /* \"#utility.yul\":1758:1767   */\n  dup3\n    /* \"#utility.yul\":1754:1772   */\n  add\n    /* \"#utility.yul\":1746:1772   */\n  swap1\n  pop\n    /* \"#utility.yul\":1782:1853   */\n  tag_80\n    /* \"#utility.yul\":1850:1851   */\n  0x00\n    /* \"#utility.yul\":1839:1848   */\n  dup4\n    /* \"#utility.yul\":1835:1852   */\n  add\n    /* \"#utility.yul\":1826:1832   */\n  dup5\n    /* \"#utility.yul\":1782:1853   */\n  tag_53\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":1638:1860   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1866:2035   */\ntag_54:\n    /* \"#utility.yul\":1950:1961   */\n  0x00\n    /* \"#utility.yul\":1984:1990   */\n  dup3\n    /* \"#utility.yul\":1979:1982   */\n  dup3\n    /* \"#utility.yul\":1972:1991   */\n  mstore\n    /* \"#utility.yul\":2024:2028   */\n  0x20\n    /* \"#utility.yul\":2019:2022   */\n  dup3\n    /* \"#utility.yul\":2015:2029   */\n  add\n    /* \"#utility.yul\":2000:2029   */\n  swap1\n  pop\n    /* \"#utility.yul\":1866:2035   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2041:2212   */\ntag_55:\n    /* \"#utility.yul\":2181:2204   */\n  0x496e76616c696420746f6b656e20616464726573730000000000000000000000\n    /* \"#utility.yul\":2177:2178   */\n  0x00\n    /* \"#utility.yul\":2169:2175   */\n  dup3\n    /* \"#utility.yul\":2165:2179   */\n  add\n    /* \"#utility.yul\":2158:2205   */\n  mstore\n    /* \"#utility.yul\":2041:2212   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2218:2584   */\ntag_56:\n    /* \"#utility.yul\":2360:2363   */\n  0x00\n    /* \"#utility.yul\":2381:2448   */\n  tag_84\n    /* \"#utility.yul\":2445:2447   */\n  0x15\n    /* \"#utility.yul\":2440:2443   */\n  dup4\n    /* \"#utility.yul\":2381:2448   */\n  tag_54\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":2374:2448   */\n  swap2\n  pop\n    /* \"#utility.yul\":2457:2550   */\n  tag_85\n    /* \"#utility.yul\":2546:2549   */\n  dup3\n    /* \"#utility.yul\":2457:2550   */\n  tag_55\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":2575:2577   */\n  0x20\n    /* \"#utility.yul\":2570:2573   */\n  dup3\n    /* \"#utility.yul\":2566:2578   */\n  add\n    /* \"#utility.yul\":2559:2578   */\n  swap1\n  pop\n    /* \"#utility.yul\":2218:2584   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2590:3009   */\ntag_19:\n    /* \"#utility.yul\":2756:2760   */\n  0x00\n    /* \"#utility.yul\":2794:2796   */\n  0x20\n    /* \"#utility.yul\":2783:2792   */\n  dup3\n    /* \"#utility.yul\":2779:2797   */\n  add\n    /* \"#utility.yul\":2771:2797   */\n  swap1\n  pop\n    /* \"#utility.yul\":2843:2852   */\n  dup2\n    /* \"#utility.yul\":2837:2841   */\n  dup2\n    /* \"#utility.yul\":2833:2853   */\n  sub\n    /* \"#utility.yul\":2829:2830   */\n  0x00\n    /* \"#utility.yul\":2818:2827   */\n  dup4\n    /* \"#utility.yul\":2814:2831   */\n  add\n    /* \"#utility.yul\":2807:2854   */\n  mstore\n    /* \"#utility.yul\":2871:3002   */\n  tag_87\n    /* \"#utility.yul\":2997:3001   */\n  dup2\n    /* \"#utility.yul\":2871:3002   */\n  tag_56\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":2863:3002   */\n  swap1\n  pop\n    /* \"#utility.yul\":2590:3009   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3015:3189   */\ntag_57:\n    /* \"#utility.yul\":3155:3181   */\n  0x496e76616c696420747265617375727920616464726573730000000000000000\n    /* \"#utility.yul\":3151:3152   */\n  0x00\n    /* \"#utility.yul\":3143:3149   */\n  dup3\n    /* \"#utility.yul\":3139:3153   */\n  add\n    /* \"#utility.yul\":3132:3182   */\n  mstore\n    /* \"#utility.yul\":3015:3189   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3195:3561   */\ntag_58:\n    /* \"#utility.yul\":3337:3340   */\n  0x00\n    /* \"#utility.yul\":3358:3425   */\n  tag_90\n    /* \"#utility.yul\":3422:3424   */\n  0x18\n    /* \"#utility.yul\":3417:3420   */\n  dup4\n    /* \"#utility.yul\":3358:3425   */\n  tag_54\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3351:3425   */\n  swap2\n  pop\n    /* \"#utility.yul\":3434:3527   */\n  tag_91\n    /* \"#utility.yul\":3523:3526   */\n  dup3\n    /* \"#utility.yul\":3434:3527   */\n  tag_57\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":3552:3554   */\n  0x20\n    /* \"#utility.yul\":3547:3550   */\n  dup3\n    /* \"#utility.yul\":3543:3555   */\n  add\n    /* \"#utility.yul\":3536:3555   */\n  swap1\n  pop\n    /* \"#utility.yul\":3195:3561   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3567:3986   */\ntag_22:\n    /* \"#utility.yul\":3733:3737   */\n  0x00\n    /* \"#utility.yul\":3771:3773   */\n  0x20\n    /* \"#utility.yul\":3760:3769   */\n  dup3\n    /* \"#utility.yul\":3756:3774   */\n  add\n    /* \"#utility.yul\":3748:3774   */\n  swap1\n  pop\n    /* \"#utility.yul\":3820:3829   */\n  dup2\n    /* \"#utility.yul\":3814:3818   */\n  dup2\n    /* \"#utility.yul\":3810:3830   */\n  sub\n    /* \"#utility.yul\":3806:3807   */\n  0x00\n    /* \"#utility.yul\":3795:3804   */\n  dup4\n    /* \"#utility.yul\":3791:3808   */\n  add\n    /* \"#utility.yul\":3784:3831   */\n  mstore\n    /* \"#utility.yul\":3848:3979   */\n  tag_93\n    /* \"#utility.yul\":3974:3978   */\n  dup2\n    /* \"#utility.yul\":3848:3979   */\n  tag_58\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":3840:3979   */\n  swap1\n  pop\n    /* \"#utility.yul\":3567:3986   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3992:4172   */\ntag_25:\n    /* \"#utility.yul\":4040:4117   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4037:4038   */\n  0x00\n    /* \"#utility.yul\":4030:4118   */\n  mstore\n    /* \"#utility.yul\":4137:4141   */\n  0x21\n    /* \"#utility.yul\":4134:4135   */\n  0x04\n    /* \"#utility.yul\":4127:4142   */\n  mstore\n    /* \"#utility.yul\":4161:4165   */\n  0x24\n    /* \"#utility.yul\":4158:4159   */\n  0x00\n    /* \"#utility.yul\":4151:4166   */\n  revert\n    /* \"token/TokenVesting.sol\":503:9544  contract TokenVesting is Ownable, ReentrancyGuard, Pausable {... */\ntag_44:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"token/TokenVesting.sol\":503:9544  contract TokenVesting is Ownable, ReentrancyGuard, Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7f51bb1f\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xc741d92f\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xc741d92f\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xeac449d9\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xfc76977f\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x7f51bb1f\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa9bb5c4c\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xbed9757e\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x45626bd6\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x45626bd6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4f86f440\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x61d027b3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x02f622d2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x37bdc99b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x406a99af\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"token/TokenVesting.sol\":1688:1745  mapping(ScheduleType => uint256) public totalVestedByType */\n    tag_3:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"token/TokenVesting.sol\":5328:6129  function release(uint256 scheduleId) external nonReentrant {... */\n    tag_4:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      stop\n        /* \"token/TokenVesting.sol\":9477:9542  function unpause() external onlyOwner {... */\n    tag_5:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      stop\n        /* \"token/TokenVesting.sol\":1751:1807  mapping(ScheduleType => uint256) public maxVestingByType */\n    tag_6:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"token/TokenVesting.sol\":1560:1621  mapping(address => VestingSchedule[]) public vestingSchedules */\n    tag_7:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_45\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"token/TokenVesting.sol\":3499:5254  function createVestingSchedule(... */\n    tag_8:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n    tag_9:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"token/TokenVesting.sol\":1860:1883  address public treasury */\n    tag_10:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      stop\n        /* \"token/TokenVesting.sol\":9115:9377  function updateTreasury(address newTreasury) external onlyOwner {... */\n    tag_12:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      stop\n        /* \"token/TokenVesting.sol\":9410:9471  function pause() external onlyOwner {... */\n    tag_13:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_14:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"token/TokenVesting.sol\":1627:1682  mapping(address => uint256) public vestingScheduleCount */\n    tag_15:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"token/TokenVesting.sol\":8030:8755  function getVestingSchedule(... */\n    tag_16:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_77\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"token/TokenVesting.sol\":1818:1854  uint256 public vestingSchedulesCount */\n    tag_17:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"token/TokenVesting.sol\":6192:7096  function revoke(... */\n    tag_18:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      stop\n        /* \"token/TokenVesting.sol\":1530:1549  IERC20 public token */\n    tag_20:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"token/TokenVesting.sol\":8761:9054  function computeReleasableAmount(... */\n    tag_21:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"token/TokenVesting.sol\":1688:1745  mapping(ScheduleType => uint256) public totalVestedByType */\n    tag_28:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"token/TokenVesting.sol\":5328:6129  function release(uint256 scheduleId) external nonReentrant {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_96\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_97\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_96:\n        /* \"token/TokenVesting.sol\":5397:5429  VestingSchedule storage schedule */\n      0x00\n        /* \"token/TokenVesting.sol\":5432:5448  vestingSchedules */\n      0x03\n        /* \"token/TokenVesting.sol\":5432:5460  vestingSchedules[msg.sender] */\n      0x00\n        /* \"token/TokenVesting.sol\":5449:5459  msg.sender */\n      caller\n        /* \"token/TokenVesting.sol\":5432:5460  vestingSchedules[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"token/TokenVesting.sol\":5461:5471  scheduleId */\n      dup3\n        /* \"token/TokenVesting.sol\":5432:5472  vestingSchedules[msg.sender][scheduleId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_99\n      jumpi\n      tag_100\n      tag_101\n      jump\t// in\n    tag_100:\n    tag_99:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n        /* \"token/TokenVesting.sol\":5397:5472  VestingSchedule storage schedule = vestingSchedules[msg.sender][scheduleId] */\n      swap1\n      pop\n        /* \"token/TokenVesting.sol\":5513:5514  0 */\n      0x00\n        /* \"token/TokenVesting.sol\":5490:5498  schedule */\n      dup2\n        /* \"token/TokenVesting.sol\":5490:5510  schedule.totalAmount */\n      0x00\n      add\n      sload\n        /* \"token/TokenVesting.sol\":5490:5514  schedule.totalAmount > 0 */\n      gt\n        /* \"token/TokenVesting.sol\":5482:5535  require(schedule.totalAmount > 0, \"No such schedule\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \"token/TokenVesting.sol\":5554:5562  schedule */\n      dup1\n        /* \"token/TokenVesting.sol\":5554:5570  schedule.revoked */\n      0x06\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"token/TokenVesting.sol\":5553:5570  !schedule.revoked */\n      iszero\n        /* \"token/TokenVesting.sol\":5545:5591  require(!schedule.revoked, \"Schedule revoked\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"token/TokenVesting.sol\":5602:5622  uint256 vestedAmount */\n      0x00\n        /* \"token/TokenVesting.sol\":5625:5655  _computeVestedAmount(schedule) */\n      tag_109\n        /* \"token/TokenVesting.sol\":5646:5654  schedule */\n      dup3\n        /* \"token/TokenVesting.sol\":5625:5655  _computeVestedAmount(schedule) */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x06\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      0x06\n      dup3\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n        /* \"token/TokenVesting.sol\":5625:5645  _computeVestedAmount */\n      tag_110\n        /* \"token/TokenVesting.sol\":5625:5655  _computeVestedAmount(schedule) */\n      jump\t// in\n    tag_109:\n        /* \"token/TokenVesting.sol\":5602:5655  uint256 vestedAmount = _computeVestedAmount(schedule) */\n      swap1\n      pop\n        /* \"token/TokenVesting.sol\":5665:5689  uint256 releasableAmount */\n      0x00\n        /* \"token/TokenVesting.sol\":5707:5715  schedule */\n      dup3\n        /* \"token/TokenVesting.sol\":5707:5730  schedule.releasedAmount */\n      0x01\n      add\n      sload\n        /* \"token/TokenVesting.sol\":5692:5704  vestedAmount */\n      dup3\n        /* \"token/TokenVesting.sol\":5692:5730  vestedAmount - schedule.releasedAmount */\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"token/TokenVesting.sol\":5665:5730  uint256 releasableAmount = vestedAmount - schedule.releasedAmount */\n      swap1\n      pop\n        /* \"token/TokenVesting.sol\":5767:5768  0 */\n      0x00\n        /* \"token/TokenVesting.sol\":5748:5764  releasableAmount */\n      dup2\n        /* \"token/TokenVesting.sol\":5748:5768  releasableAmount > 0 */\n      gt\n        /* \"token/TokenVesting.sol\":5740:5793  require(releasableAmount > 0, \"No tokens to release\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"token/TokenVesting.sol\":5890:5906  releasableAmount */\n      dup1\n        /* \"token/TokenVesting.sol\":5864:5872  schedule */\n      dup4\n        /* \"token/TokenVesting.sol\":5864:5887  schedule.releasedAmount */\n      0x01\n      add\n      sload\n        /* \"token/TokenVesting.sol\":5864:5906  schedule.releasedAmount + releasableAmount */\n      tag_116\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n        /* \"token/TokenVesting.sol\":5838:5846  schedule */\n      dup4\n        /* \"token/TokenVesting.sol\":5838:5861  schedule.releasedAmount */\n      0x01\n      add\n        /* \"token/TokenVesting.sol\":5838:5906  schedule.releasedAmount = schedule.releasedAmount + releasableAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"token/TokenVesting.sol\":5965:5970  token */\n      0x02\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"token/TokenVesting.sol\":5965:5979  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"token/TokenVesting.sol\":5980:5990  msg.sender */\n      caller\n        /* \"token/TokenVesting.sol\":5992:6008  releasableAmount */\n      dup4\n        /* \"token/TokenVesting.sol\":5965:6009  token.transfer(msg.sender, releasableAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap3\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_121\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_121:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_122\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"token/TokenVesting.sol\":5944:6050  require(... */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"token/TokenVesting.sol\":6093:6103  scheduleId */\n      dup4\n        /* \"token/TokenVesting.sol\":6081:6091  msg.sender */\n      caller\n        /* \"token/TokenVesting.sol\":6066:6122  TokensReleased(msg.sender, scheduleId, releasableAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc5c52c2a9175470464d5ea4429889e7df2ea88630a3d32f4d0d3d2d448656210\n        /* \"token/TokenVesting.sol\":6105:6121  releasableAmount */\n      dup4\n        /* \"token/TokenVesting.sol\":6066:6122  TokensReleased(msg.sender, scheduleId, releasableAmount) */\n      mload(0x40)\n      tag_127\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"token/TokenVesting.sol\":5387:6129  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_128\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2560  _nonReentrantAfter */\n      tag_129\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      jump\t// in\n    tag_128:\n        /* \"token/TokenVesting.sol\":5328:6129  function release(uint256 scheduleId) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"token/TokenVesting.sol\":9477:9542  function unpause() external onlyOwner {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_131:\n        /* \"token/TokenVesting.sol\":9525:9535  _unpause() */\n      tag_134\n        /* \"token/TokenVesting.sol\":9525:9533  _unpause */\n      tag_135\n        /* \"token/TokenVesting.sol\":9525:9535  _unpause() */\n      jump\t// in\n    tag_134:\n        /* \"token/TokenVesting.sol\":9477:9542  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"token/TokenVesting.sol\":1751:1807  mapping(ScheduleType => uint256) public maxVestingByType */\n    tag_39:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"token/TokenVesting.sol\":1560:1621  mapping(address => VestingSchedule[]) public vestingSchedules */\n    tag_44:\n      mstore(0x20, 0x03)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_136\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_136:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      dup1\n      0x06\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x06\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup9\n      jump\t// out\n        /* \"token/TokenVesting.sol\":3499:5254  function createVestingSchedule(... */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_139:\n        /* \"token/TokenVesting.sol\":3821:3822  0 */\n      0x00\n        /* \"token/TokenVesting.sol\":3798:3823  beneficiary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"token/TokenVesting.sol\":3798:3809  beneficiary */\n      dup9\n        /* \"token/TokenVesting.sol\":3798:3823  beneficiary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"token/TokenVesting.sol\":3790:3847  require(beneficiary != address(0), \"Invalid beneficiary\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_141:\n        /* \"token/TokenVesting.sol\":3874:3875  0 */\n      0x00\n        /* \"token/TokenVesting.sol\":3865:3871  amount */\n      dup7\n        /* \"token/TokenVesting.sol\":3865:3875  amount > 0 */\n      gt\n        /* \"token/TokenVesting.sol\":3857:3898  require(amount > 0, \"Amount must be > 0\") */\n      tag_144\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_144:\n        /* \"token/TokenVesting.sol\":3927:3928  0 */\n      0x00\n        /* \"token/TokenVesting.sol\":3916:3924  duration */\n      dup5\n        /* \"token/TokenVesting.sol\":3916:3928  duration > 0 */\n      gt\n        /* \"token/TokenVesting.sol\":3908:3953  require(duration > 0, \"Duration must be > 0\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"token/TokenVesting.sol\":3985:3986  0 */\n      0x00\n        /* \"token/TokenVesting.sol\":3971:3982  slicePeriod */\n      dup3\n        /* \"token/TokenVesting.sol\":3971:3986  slicePeriod > 0 */\n      gt\n        /* \"token/TokenVesting.sol\":3963:4015  require(slicePeriod > 0, \"Slice period must be > 0\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_150:\n        /* \"token/TokenVesting.sol\":4045:4058  cliffDuration */\n      dup3\n        /* \"token/TokenVesting.sol\":4033:4041  duration */\n      dup5\n        /* \"token/TokenVesting.sol\":4033:4058  duration >= cliffDuration */\n      lt\n      iszero\n        /* \"token/TokenVesting.sol\":4025:4076  require(duration >= cliffDuration, \"Invalid cliff\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"token/TokenVesting.sol\":4107:4122  block.timestamp */\n      timestamp\n        /* \"token/TokenVesting.sol\":4094:4103  startTime */\n      dup6\n        /* \"token/TokenVesting.sol\":4094:4122  startTime >= block.timestamp */\n      lt\n      iszero\n        /* \"token/TokenVesting.sol\":4086:4143  require(startTime >= block.timestamp, \"Start time < now\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_157\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_156:\n        /* \"token/TokenVesting.sol\":4274:4290  maxVestingByType */\n      0x06\n        /* \"token/TokenVesting.sol\":4274:4304  maxVestingByType[scheduleType] */\n      0x00\n        /* \"token/TokenVesting.sol\":4291:4303  scheduleType */\n      dup9\n        /* \"token/TokenVesting.sol\":4274:4304  maxVestingByType[scheduleType] */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_159\n      jumpi\n      tag_160\n      tag_161\n      jump\t// in\n    tag_160:\n    tag_159:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_162\n      jumpi\n      tag_163\n      tag_161\n      jump\t// in\n    tag_163:\n    tag_162:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"token/TokenVesting.sol\":4264:4270  amount */\n      dup7\n        /* \"token/TokenVesting.sol\":4230:4247  totalVestedByType */\n      0x05\n        /* \"token/TokenVesting.sol\":4230:4261  totalVestedByType[scheduleType] */\n      0x00\n        /* \"token/TokenVesting.sol\":4248:4260  scheduleType */\n      dup11\n        /* \"token/TokenVesting.sol\":4230:4261  totalVestedByType[scheduleType] */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_164\n      jumpi\n      tag_165\n      tag_161\n      jump\t// in\n    tag_165:\n    tag_164:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_166\n      jumpi\n      tag_167\n      tag_161\n      jump\t// in\n    tag_167:\n    tag_166:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"token/TokenVesting.sol\":4230:4270  totalVestedByType[scheduleType] + amount */\n      tag_168\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_168:\n        /* \"token/TokenVesting.sol\":4230:4304  totalVestedByType[scheduleType] + amount <= maxVestingByType[scheduleType] */\n      gt\n      iszero\n        /* \"token/TokenVesting.sol\":4209:4349  require(... */\n      tag_169\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_169:\n        /* \"token/TokenVesting.sol\":4420:4425  token */\n      0x02\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"token/TokenVesting.sol\":4420:4438  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"token/TokenVesting.sol\":4439:4449  msg.sender */\n      caller\n        /* \"token/TokenVesting.sol\":4459:4463  this */\n      address\n        /* \"token/TokenVesting.sol\":4466:4472  amount */\n      dup10\n        /* \"token/TokenVesting.sol\":4420:4473  token.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_175\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_175:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_176\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_176:\n        /* \"token/TokenVesting.sol\":4399:4514  require(... */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_126\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"token/TokenVesting.sol\":4552:4568  vestingSchedules */\n      0x03\n        /* \"token/TokenVesting.sol\":4552:4581  vestingSchedules[beneficiary] */\n      0x00\n        /* \"token/TokenVesting.sol\":4569:4580  beneficiary */\n      dup10\n        /* \"token/TokenVesting.sol\":4552:4581  vestingSchedules[beneficiary] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"token/TokenVesting.sol\":4587:4886  VestingSchedule({... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"token/TokenVesting.sol\":4630:4636  amount */\n      dup9\n        /* \"token/TokenVesting.sol\":4587:4886  VestingSchedule({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"token/TokenVesting.sol\":4666:4667  0 */\n      0x00\n        /* \"token/TokenVesting.sol\":4587:4886  VestingSchedule({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"token/TokenVesting.sol\":4692:4701  startTime */\n      dup8\n        /* \"token/TokenVesting.sol\":4587:4886  VestingSchedule({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"token/TokenVesting.sol\":4725:4733  duration */\n      dup7\n        /* \"token/TokenVesting.sol\":4587:4886  VestingSchedule({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"token/TokenVesting.sol\":4762:4775  cliffDuration */\n      dup6\n        /* \"token/TokenVesting.sol\":4587:4886  VestingSchedule({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"token/TokenVesting.sol\":4802:4813  slicePeriod */\n      dup5\n        /* \"token/TokenVesting.sol\":4587:4886  VestingSchedule({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"token/TokenVesting.sol\":4838:4847  revocable */\n      dup4\n        /* \"token/TokenVesting.sol\":4587:4886  VestingSchedule({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n        /* \"token/TokenVesting.sol\":4870:4875  false */\n      0x00\n        /* \"token/TokenVesting.sol\":4587:4886  VestingSchedule({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"token/TokenVesting.sol\":4552:4887  vestingSchedules[beneficiary].push(VestingSchedule({... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      sstore\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x06\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xe0\n      dup3\n      add\n      mload\n      dup2\n      0x06\n      add\n      exp(0x0100, 0x01)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n        /* \"token/TokenVesting.sol\":4925:4945  vestingScheduleCount */\n      0x04\n        /* \"token/TokenVesting.sol\":4925:4958  vestingScheduleCount[beneficiary] */\n      0x00\n        /* \"token/TokenVesting.sol\":4946:4957  beneficiary */\n      dup10\n        /* \"token/TokenVesting.sol\":4925:4958  vestingScheduleCount[beneficiary] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"token/TokenVesting.sol\":4925:4960  vestingScheduleCount[beneficiary]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_180\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"token/TokenVesting.sol\":4970:4991  vestingSchedulesCount */\n      0x07\n      0x00\n        /* \"token/TokenVesting.sol\":4970:4993  vestingSchedulesCount++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_182\n      swap1\n      tag_181\n      jump\t// in\n    tag_182:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"token/TokenVesting.sol\":5071:5077  amount */\n      dup6\n        /* \"token/TokenVesting.sol\":5037:5054  totalVestedByType */\n      0x05\n        /* \"token/TokenVesting.sol\":5037:5068  totalVestedByType[scheduleType] */\n      0x00\n        /* \"token/TokenVesting.sol\":5055:5067  scheduleType */\n      dup10\n        /* \"token/TokenVesting.sol\":5037:5068  totalVestedByType[scheduleType] */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_183\n      jumpi\n      tag_184\n      tag_161\n      jump\t// in\n    tag_184:\n    tag_183:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_185\n      jumpi\n      tag_186\n      tag_161\n      jump\t// in\n    tag_186:\n    tag_185:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"token/TokenVesting.sol\":5037:5077  totalVestedByType[scheduleType] + amount */\n      tag_187\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_187:\n        /* \"token/TokenVesting.sol\":5003:5020  totalVestedByType */\n      0x05\n        /* \"token/TokenVesting.sol\":5003:5034  totalVestedByType[scheduleType] */\n      0x00\n        /* \"token/TokenVesting.sol\":5021:5033  scheduleType */\n      dup10\n        /* \"token/TokenVesting.sol\":5003:5034  totalVestedByType[scheduleType] */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_188\n      jumpi\n      tag_189\n      tag_161\n      jump\t// in\n    tag_189:\n    tag_188:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_190\n      jumpi\n      tag_191\n      tag_161\n      jump\t// in\n    tag_191:\n    tag_190:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"token/TokenVesting.sol\":5003:5077  totalVestedByType[scheduleType] = totalVestedByType[scheduleType] + amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"token/TokenVesting.sol\":5190:5191  1 */\n      0x01\n        /* \"token/TokenVesting.sol\":5154:5174  vestingScheduleCount */\n      0x04\n        /* \"token/TokenVesting.sol\":5154:5187  vestingScheduleCount[beneficiary] */\n      0x00\n        /* \"token/TokenVesting.sol\":5175:5186  beneficiary */\n      dup11\n        /* \"token/TokenVesting.sol\":5154:5187  vestingScheduleCount[beneficiary] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"token/TokenVesting.sol\":5154:5191  vestingScheduleCount[beneficiary] - 1 */\n      tag_192\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_192:\n        /* \"token/TokenVesting.sol\":5129:5140  beneficiary */\n      dup9\n        /* \"token/TokenVesting.sol\":5093:5247  VestingScheduleCreated(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x95b841d5d108f82fdbc6acd22e5cc30bf7a7c9ddb0ddfb615d3ee5adc61b0967\n        /* \"token/TokenVesting.sol\":5205:5217  scheduleType */\n      dup10\n        /* \"token/TokenVesting.sol\":5231:5237  amount */\n      dup10\n        /* \"token/TokenVesting.sol\":5093:5247  VestingScheduleCreated(... */\n      mload(0x40)\n      tag_193\n      swap3\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"token/TokenVesting.sol\":3499:5254  function createVestingSchedule(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1897:1901  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1920:1927  _paused */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1913:1927  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"token/TokenVesting.sol\":1860:1883  address public treasury */\n    tag_56:\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_197\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_200\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"token/TokenVesting.sol\":9115:9377  function updateTreasury(address newTreasury) external onlyOwner {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_202\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_202:\n        /* \"token/TokenVesting.sol\":9220:9221  0 */\n      0x00\n        /* \"token/TokenVesting.sol\":9197:9222  newTreasury != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"token/TokenVesting.sol\":9197:9208  newTreasury */\n      dup2\n        /* \"token/TokenVesting.sol\":9197:9222  newTreasury != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"token/TokenVesting.sol\":9189:9242  require(newTreasury != address(0), \"Invalid address\") */\n      tag_204\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap1\n      tag_206\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_204:\n        /* \"token/TokenVesting.sol\":9252:9271  address oldTreasury */\n      0x00\n        /* \"token/TokenVesting.sol\":9274:9282  treasury */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"token/TokenVesting.sol\":9252:9282  address oldTreasury = treasury */\n      swap1\n      pop\n        /* \"token/TokenVesting.sol\":9303:9314  newTreasury */\n      dup2\n        /* \"token/TokenVesting.sol\":9292:9300  treasury */\n      0x08\n      0x00\n        /* \"token/TokenVesting.sol\":9292:9314  treasury = newTreasury */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"token/TokenVesting.sol\":9358:9369  newTreasury */\n      dup2\n        /* \"token/TokenVesting.sol\":9329:9370  TreasuryUpdated(oldTreasury, newTreasury) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"token/TokenVesting.sol\":9345:9356  oldTreasury */\n      dup2\n        /* \"token/TokenVesting.sol\":9329:9370  TreasuryUpdated(oldTreasury, newTreasury) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4ab5be82436d353e61ca18726e984e561f5c1cc7c6d38b29d2553c790434705a\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"token/TokenVesting.sol\":9179:9377  {... */\n      pop\n        /* \"token/TokenVesting.sol\":9115:9377  function updateTreasury(address newTreasury) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"token/TokenVesting.sol\":9410:9471  function pause() external onlyOwner {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_208\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_208:\n        /* \"token/TokenVesting.sol\":9456:9464  _pause() */\n      tag_210\n        /* \"token/TokenVesting.sol\":9456:9462  _pause */\n      tag_211\n        /* \"token/TokenVesting.sol\":9456:9464  _pause() */\n      jump\t// in\n    tag_210:\n        /* \"token/TokenVesting.sol\":9410:9471  function pause() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"token/TokenVesting.sol\":1627:1682  mapping(address => uint256) public vestingScheduleCount */\n    tag_72:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"token/TokenVesting.sol\":8030:8755  function getVestingSchedule(... */\n    tag_76:\n        /* \"token/TokenVesting.sol\":8153:8172  uint256 totalAmount */\n      0x00\n        /* \"token/TokenVesting.sol\":8182:8204  uint256 releasedAmount */\n      dup1\n        /* \"token/TokenVesting.sol\":8214:8231  uint256 startTime */\n      0x00\n        /* \"token/TokenVesting.sol\":8241:8257  uint256 duration */\n      dup1\n        /* \"token/TokenVesting.sol\":8267:8288  uint256 cliffDuration */\n      0x00\n        /* \"token/TokenVesting.sol\":8298:8317  uint256 slicePeriod */\n      dup1\n        /* \"token/TokenVesting.sol\":8327:8341  bool revocable */\n      0x00\n        /* \"token/TokenVesting.sol\":8351:8363  bool revoked */\n      dup1\n        /* \"token/TokenVesting.sol\":8380:8411  VestingSchedule memory schedule */\n      0x00\n        /* \"token/TokenVesting.sol\":8414:8430  vestingSchedules */\n      0x03\n        /* \"token/TokenVesting.sol\":8414:8443  vestingSchedules[beneficiary] */\n      0x00\n        /* \"token/TokenVesting.sol\":8431:8442  beneficiary */\n      dup13\n        /* \"token/TokenVesting.sol\":8414:8443  vestingSchedules[beneficiary] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"token/TokenVesting.sol\":8444:8454  scheduleId */\n      dup11\n        /* \"token/TokenVesting.sol\":8414:8455  vestingSchedules[beneficiary][scheduleId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_214\n      jumpi\n      tag_215\n      tag_101\n      jump\t// in\n    tag_215:\n    tag_214:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n        /* \"token/TokenVesting.sol\":8380:8455  VestingSchedule memory schedule = vestingSchedules[beneficiary][scheduleId] */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x06\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      0x06\n      dup3\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"token/TokenVesting.sol\":8486:8494  schedule */\n      dup1\n        /* \"token/TokenVesting.sol\":8486:8506  schedule.totalAmount */\n      0x00\n      add\n      mload\n        /* \"token/TokenVesting.sol\":8520:8528  schedule */\n      dup2\n        /* \"token/TokenVesting.sol\":8520:8543  schedule.releasedAmount */\n      0x20\n      add\n      mload\n        /* \"token/TokenVesting.sol\":8557:8565  schedule */\n      dup3\n        /* \"token/TokenVesting.sol\":8557:8575  schedule.startTime */\n      0x40\n      add\n      mload\n        /* \"token/TokenVesting.sol\":8589:8597  schedule */\n      dup4\n        /* \"token/TokenVesting.sol\":8589:8606  schedule.duration */\n      0x60\n      add\n      mload\n        /* \"token/TokenVesting.sol\":8620:8628  schedule */\n      dup5\n        /* \"token/TokenVesting.sol\":8620:8642  schedule.cliffDuration */\n      0x80\n      add\n      mload\n        /* \"token/TokenVesting.sol\":8656:8664  schedule */\n      dup6\n        /* \"token/TokenVesting.sol\":8656:8676  schedule.slicePeriod */\n      0xa0\n      add\n      mload\n        /* \"token/TokenVesting.sol\":8690:8698  schedule */\n      dup7\n        /* \"token/TokenVesting.sol\":8690:8708  schedule.revocable */\n      0xc0\n      add\n      mload\n        /* \"token/TokenVesting.sol\":8722:8730  schedule */\n      dup8\n        /* \"token/TokenVesting.sol\":8722:8738  schedule.revoked */\n      0xe0\n      add\n      mload\n        /* \"token/TokenVesting.sol\":8465:8748  return (... */\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      pop\n        /* \"token/TokenVesting.sol\":8030:8755  function getVestingSchedule(... */\n      swap3\n      swap6\n      swap9\n      pop\n      swap3\n      swap6\n      swap9\n      swap1\n      swap4\n      swap7\n      pop\n      jump\t// out\n        /* \"token/TokenVesting.sol\":1818:1854  uint256 public vestingSchedulesCount */\n    tag_79:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"token/TokenVesting.sol\":6192:7096  function revoke(... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_218\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_218:\n        /* \"token/TokenVesting.sol\":6300:6332  VestingSchedule storage schedule */\n      0x00\n        /* \"token/TokenVesting.sol\":6335:6351  vestingSchedules */\n      0x03\n        /* \"token/TokenVesting.sol\":6335:6364  vestingSchedules[beneficiary] */\n      0x00\n        /* \"token/TokenVesting.sol\":6352:6363  beneficiary */\n      dup5\n        /* \"token/TokenVesting.sol\":6335:6364  vestingSchedules[beneficiary] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"token/TokenVesting.sol\":6365:6375  scheduleId */\n      dup3\n        /* \"token/TokenVesting.sol\":6335:6376  vestingSchedules[beneficiary][scheduleId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_220\n      jumpi\n      tag_221\n      tag_101\n      jump\t// in\n    tag_221:\n    tag_220:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n        /* \"token/TokenVesting.sol\":6300:6376  VestingSchedule storage schedule = vestingSchedules[beneficiary][scheduleId] */\n      swap1\n      pop\n        /* \"token/TokenVesting.sol\":6417:6418  0 */\n      0x00\n        /* \"token/TokenVesting.sol\":6394:6402  schedule */\n      dup2\n        /* \"token/TokenVesting.sol\":6394:6414  schedule.totalAmount */\n      0x00\n      add\n      sload\n        /* \"token/TokenVesting.sol\":6394:6418  schedule.totalAmount > 0 */\n      gt\n        /* \"token/TokenVesting.sol\":6386:6439  require(schedule.totalAmount > 0, \"No such schedule\") */\n      tag_223\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap1\n      tag_105\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_223:\n        /* \"token/TokenVesting.sol\":6457:6465  schedule */\n      dup1\n        /* \"token/TokenVesting.sol\":6457:6475  schedule.revocable */\n      0x06\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"token/TokenVesting.sol\":6449:6493  require(schedule.revocable, \"Not revocable\") */\n      tag_225\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_226\n      swap1\n      tag_227\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_225:\n        /* \"token/TokenVesting.sol\":6512:6520  schedule */\n      dup1\n        /* \"token/TokenVesting.sol\":6512:6528  schedule.revoked */\n      0x06\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"token/TokenVesting.sol\":6511:6528  !schedule.revoked */\n      iszero\n        /* \"token/TokenVesting.sol\":6503:6548  require(!schedule.revoked, \"Already revoked\") */\n      tag_228\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap1\n      tag_230\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_228:\n        /* \"token/TokenVesting.sol\":6612:6632  uint256 vestedAmount */\n      0x00\n        /* \"token/TokenVesting.sol\":6635:6665  _computeVestedAmount(schedule) */\n      tag_231\n        /* \"token/TokenVesting.sol\":6656:6664  schedule */\n      dup3\n        /* \"token/TokenVesting.sol\":6635:6665  _computeVestedAmount(schedule) */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x06\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      0x06\n      dup3\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n        /* \"token/TokenVesting.sol\":6635:6655  _computeVestedAmount */\n      tag_110\n        /* \"token/TokenVesting.sol\":6635:6665  _computeVestedAmount(schedule) */\n      jump\t// in\n    tag_231:\n        /* \"token/TokenVesting.sol\":6612:6665  uint256 vestedAmount = _computeVestedAmount(schedule) */\n      swap1\n      pop\n        /* \"token/TokenVesting.sol\":6675:6695  uint256 refundAmount */\n      0x00\n        /* \"token/TokenVesting.sol\":6721:6733  vestedAmount */\n      dup2\n        /* \"token/TokenVesting.sol\":6698:6706  schedule */\n      dup4\n        /* \"token/TokenVesting.sol\":6698:6718  schedule.totalAmount */\n      0x00\n      add\n      sload\n        /* \"token/TokenVesting.sol\":6698:6733  schedule.totalAmount - vestedAmount */\n      tag_232\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_232:\n        /* \"token/TokenVesting.sol\":6675:6733  uint256 refundAmount = schedule.totalAmount - vestedAmount */\n      swap1\n      pop\n        /* \"token/TokenVesting.sol\":6790:6794  true */\n      0x01\n        /* \"token/TokenVesting.sol\":6771:6779  schedule */\n      dup4\n        /* \"token/TokenVesting.sol\":6771:6787  schedule.revoked */\n      0x06\n      add\n      0x01\n        /* \"token/TokenVesting.sol\":6771:6794  schedule.revoked = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"token/TokenVesting.sol\":6873:6874  0 */\n      0x00\n        /* \"token/TokenVesting.sol\":6858:6870  refundAmount */\n      dup2\n        /* \"token/TokenVesting.sol\":6858:6874  refundAmount > 0 */\n      gt\n        /* \"token/TokenVesting.sol\":6854:7013  if (refundAmount > 0) {... */\n      iszero\n      tag_233\n      jumpi\n        /* \"token/TokenVesting.sol\":6915:6920  token */\n      0x02\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"token/TokenVesting.sol\":6915:6929  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"token/TokenVesting.sol\":6930:6938  treasury */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"token/TokenVesting.sol\":6940:6952  refundAmount */\n      dup4\n        /* \"token/TokenVesting.sol\":6915:6953  token.transfer(treasury, refundAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_234\n      swap3\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_234:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_236\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_236:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_237\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_237:\n        /* \"token/TokenVesting.sol\":6890:7002  require(... */\n      tag_238\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_239\n      swap1\n      tag_126\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_238:\n        /* \"token/TokenVesting.sol\":6854:7013  if (refundAmount > 0) {... */\n    tag_233:\n        /* \"token/TokenVesting.sol\":7064:7074  scheduleId */\n      dup4\n        /* \"token/TokenVesting.sol\":7051:7062  beneficiary */\n      dup6\n        /* \"token/TokenVesting.sol\":7028:7089  VestingScheduleRevoked(beneficiary, scheduleId, refundAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5369437781e041afe7013c48748bcb5985473926a60448846c64d514908aa8fc\n        /* \"token/TokenVesting.sol\":7076:7088  refundAmount */\n      dup4\n        /* \"token/TokenVesting.sol\":7028:7089  VestingScheduleRevoked(beneficiary, scheduleId, refundAmount) */\n      mload(0x40)\n      tag_240\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_240:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"token/TokenVesting.sol\":6290:7096  {... */\n      pop\n      pop\n      pop\n        /* \"token/TokenVesting.sol\":6192:7096  function revoke(... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_242\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_244\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_245\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_245:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_246\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_200\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"token/TokenVesting.sol\":1530:1549  IERC20 public token */\n    tag_88:\n      0x02\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"token/TokenVesting.sol\":8761:9054  function computeReleasableAmount(... */\n    tag_93:\n        /* \"token/TokenVesting.sol\":8880:8887  uint256 */\n      0x00\n        /* \"token/TokenVesting.sol\":8899:8930  VestingSchedule memory schedule */\n      dup1\n        /* \"token/TokenVesting.sol\":8933:8949  vestingSchedules */\n      0x03\n        /* \"token/TokenVesting.sol\":8933:8962  vestingSchedules[beneficiary] */\n      0x00\n        /* \"token/TokenVesting.sol\":8950:8961  beneficiary */\n      dup6\n        /* \"token/TokenVesting.sol\":8933:8962  vestingSchedules[beneficiary] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"token/TokenVesting.sol\":8963:8973  scheduleId */\n      dup4\n        /* \"token/TokenVesting.sol\":8933:8974  vestingSchedules[beneficiary][scheduleId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_248\n      jumpi\n      tag_249\n      tag_101\n      jump\t// in\n    tag_249:\n    tag_248:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n        /* \"token/TokenVesting.sol\":8899:8974  VestingSchedule memory schedule = vestingSchedules[beneficiary][scheduleId] */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x06\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      0x06\n      dup3\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"token/TokenVesting.sol\":9024:9032  schedule */\n      dup1\n        /* \"token/TokenVesting.sol\":9024:9047  schedule.releasedAmount */\n      0x20\n      add\n      mload\n        /* \"token/TokenVesting.sol\":8991:9021  _computeVestedAmount(schedule) */\n      tag_251\n        /* \"token/TokenVesting.sol\":9012:9020  schedule */\n      dup3\n        /* \"token/TokenVesting.sol\":8991:9011  _computeVestedAmount */\n      tag_110\n        /* \"token/TokenVesting.sol\":8991:9021  _computeVestedAmount(schedule) */\n      jump\t// in\n    tag_251:\n        /* \"token/TokenVesting.sol\":8991:9047  _computeVestedAmount(schedule) - schedule.releasedAmount */\n      tag_252\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_252:\n        /* \"token/TokenVesting.sol\":8984:9047  return _computeVestedAmount(schedule) - schedule.releasedAmount */\n      swap2\n      pop\n      pop\n        /* \"token/TokenVesting.sol\":8761:9054  function computeReleasableAmount(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2709  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2720  _status == ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n      tag_254\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2743:2773  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      0x3ee5aeb500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n    tag_254:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2858:2865  _status */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2858:2875  _status = ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"token/TokenVesting.sol\":7170:7982  function _computeVestedAmount(... */\n    tag_110:\n        /* \"token/TokenVesting.sol\":7270:7277  uint256 */\n      0x00\n        /* \"token/TokenVesting.sol\":7311:7319  schedule */\n      dup2\n        /* \"token/TokenVesting.sol\":7311:7329  schedule.startTime */\n      0x40\n      add\n      mload\n        /* \"token/TokenVesting.sol\":7293:7308  block.timestamp */\n      timestamp\n        /* \"token/TokenVesting.sol\":7293:7329  block.timestamp < schedule.startTime */\n      lt\n        /* \"token/TokenVesting.sol\":7289:7364  if (block.timestamp < schedule.startTime) {... */\n      iszero\n      tag_256\n      jumpi\n        /* \"token/TokenVesting.sol\":7352:7353  0 */\n      0x00\n        /* \"token/TokenVesting.sol\":7345:7353  return 0 */\n      swap1\n      pop\n      jump(tag_255)\n        /* \"token/TokenVesting.sol\":7289:7364  if (block.timestamp < schedule.startTime) {... */\n    tag_256:\n        /* \"token/TokenVesting.sol\":7417:7425  schedule */\n      dup2\n        /* \"token/TokenVesting.sol\":7417:7439  schedule.cliffDuration */\n      0x80\n      add\n      mload\n        /* \"token/TokenVesting.sol\":7396:7404  schedule */\n      dup3\n        /* \"token/TokenVesting.sol\":7396:7414  schedule.startTime */\n      0x40\n      add\n      mload\n        /* \"token/TokenVesting.sol\":7396:7439  schedule.startTime + schedule.cliffDuration */\n      tag_257\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_257:\n        /* \"token/TokenVesting.sol\":7378:7393  block.timestamp */\n      timestamp\n        /* \"token/TokenVesting.sol\":7378:7439  block.timestamp < schedule.startTime + schedule.cliffDuration */\n      lt\n        /* \"token/TokenVesting.sol\":7374:7474  if (block.timestamp < schedule.startTime + schedule.cliffDuration) {... */\n      iszero\n      tag_258\n      jumpi\n        /* \"token/TokenVesting.sol\":7462:7463  0 */\n      0x00\n        /* \"token/TokenVesting.sol\":7455:7463  return 0 */\n      swap1\n      pop\n      jump(tag_255)\n        /* \"token/TokenVesting.sol\":7374:7474  if (block.timestamp < schedule.startTime + schedule.cliffDuration) {... */\n    tag_258:\n        /* \"token/TokenVesting.sol\":7528:7536  schedule */\n      dup2\n        /* \"token/TokenVesting.sol\":7528:7545  schedule.duration */\n      0x60\n      add\n      mload\n        /* \"token/TokenVesting.sol\":7507:7515  schedule */\n      dup3\n        /* \"token/TokenVesting.sol\":7507:7525  schedule.startTime */\n      0x40\n      add\n      mload\n        /* \"token/TokenVesting.sol\":7507:7545  schedule.startTime + schedule.duration */\n      tag_259\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_259:\n        /* \"token/TokenVesting.sol\":7488:7503  block.timestamp */\n      timestamp\n        /* \"token/TokenVesting.sol\":7488:7545  block.timestamp >= schedule.startTime + schedule.duration */\n      lt\n        /* \"token/TokenVesting.sol\":7484:7599  if (block.timestamp >= schedule.startTime + schedule.duration) {... */\n      tag_260\n      jumpi\n        /* \"token/TokenVesting.sol\":7568:7576  schedule */\n      dup2\n        /* \"token/TokenVesting.sol\":7568:7588  schedule.totalAmount */\n      0x00\n      add\n      mload\n        /* \"token/TokenVesting.sol\":7561:7588  return schedule.totalAmount */\n      swap1\n      pop\n      jump(tag_255)\n        /* \"token/TokenVesting.sol\":7484:7599  if (block.timestamp >= schedule.startTime + schedule.duration) {... */\n    tag_260:\n        /* \"token/TokenVesting.sol\":7609:7630  uint256 timeFromStart */\n      0x00\n        /* \"token/TokenVesting.sol\":7651:7659  schedule */\n      dup3\n        /* \"token/TokenVesting.sol\":7651:7669  schedule.startTime */\n      0x40\n      add\n      mload\n        /* \"token/TokenVesting.sol\":7633:7648  block.timestamp */\n      timestamp\n        /* \"token/TokenVesting.sol\":7633:7669  block.timestamp - schedule.startTime */\n      tag_261\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_261:\n        /* \"token/TokenVesting.sol\":7609:7669  uint256 timeFromStart = block.timestamp - schedule.startTime */\n      swap1\n      pop\n        /* \"token/TokenVesting.sol\":7679:7702  uint256 secondsPerSlice */\n      0x00\n        /* \"token/TokenVesting.sol\":7705:7713  schedule */\n      dup4\n        /* \"token/TokenVesting.sol\":7705:7725  schedule.slicePeriod */\n      0xa0\n      add\n      mload\n        /* \"token/TokenVesting.sol\":7679:7725  uint256 secondsPerSlice = schedule.slicePeriod */\n      swap1\n      pop\n        /* \"token/TokenVesting.sol\":7735:7755  uint256 vestedSlices */\n      0x00\n        /* \"token/TokenVesting.sol\":7774:7789  secondsPerSlice */\n      dup2\n        /* \"token/TokenVesting.sol\":7758:7771  timeFromStart */\n      dup4\n        /* \"token/TokenVesting.sol\":7758:7789  timeFromStart / secondsPerSlice */\n      tag_262\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n    tag_262:\n        /* \"token/TokenVesting.sol\":7735:7789  uint256 vestedSlices = timeFromStart / secondsPerSlice */\n      swap1\n      pop\n        /* \"token/TokenVesting.sol\":7799:7820  uint256 vestedSeconds */\n      0x00\n        /* \"token/TokenVesting.sol\":7838:7853  secondsPerSlice */\n      dup3\n        /* \"token/TokenVesting.sol\":7823:7835  vestedSlices */\n      dup3\n        /* \"token/TokenVesting.sol\":7823:7853  vestedSlices * secondsPerSlice */\n      tag_264\n      swap2\n      swap1\n      tag_265\n      jump\t// in\n    tag_264:\n        /* \"token/TokenVesting.sol\":7799:7853  uint256 vestedSeconds = vestedSlices * secondsPerSlice */\n      swap1\n      pop\n        /* \"token/TokenVesting.sol\":7864:7884  uint256 vestedAmount */\n      0x00\n        /* \"token/TokenVesting.sol\":7928:7936  schedule */\n      dup7\n        /* \"token/TokenVesting.sol\":7928:7945  schedule.duration */\n      0x60\n      add\n      mload\n        /* \"token/TokenVesting.sol\":7911:7924  vestedSeconds */\n      dup3\n        /* \"token/TokenVesting.sol\":7888:7896  schedule */\n      dup9\n        /* \"token/TokenVesting.sol\":7888:7908  schedule.totalAmount */\n      0x00\n      add\n      mload\n        /* \"token/TokenVesting.sol\":7888:7924  schedule.totalAmount * vestedSeconds */\n      tag_266\n      swap2\n      swap1\n      tag_265\n      jump\t// in\n    tag_266:\n        /* \"token/TokenVesting.sol\":7887:7945  (schedule.totalAmount * vestedSeconds) / schedule.duration */\n      tag_267\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n    tag_267:\n        /* \"token/TokenVesting.sol\":7864:7945  uint256 vestedAmount = (schedule.totalAmount * vestedSeconds) / schedule.duration */\n      swap1\n      pop\n        /* \"token/TokenVesting.sol\":7963:7975  vestedAmount */\n      dup1\n        /* \"token/TokenVesting.sol\":7956:7975  return vestedAmount */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"token/TokenVesting.sol\":7170:7982  function _computeVestedAmount(... */\n    tag_255:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3075  _status */\n      dup1\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3089  _status = NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_270\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_271\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_270:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_272\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_272:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_273\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_274\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_271\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_275\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2710:2827  function _unpause() internal virtual whenPaused {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1737  _requirePaused() */\n      tag_277\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1735  _requirePaused */\n      tag_278\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1737  _requirePaused() */\n      jump\t// in\n    tag_277:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2778:2783  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2768:2775  _paused */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2768:2783  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2819  _msgSender() */\n      tag_280\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2817  _msgSender */\n      tag_271\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2819  _msgSender() */\n      jump\t// in\n    tag_280:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_281\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_281:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2710:2827  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2463:2578  function _pause() internal virtual whenNotPaused {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_284\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_285\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_284:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2532:2536  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2529  _paused */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2536  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2551:2571  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2570  _msgSender() */\n      tag_287\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2568  _msgSender */\n      tag_271\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2570  _msgSender() */\n      jump\t// in\n    tag_287:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2551:2571  Paused(_msgSender()) */\n      mload(0x40)\n      tag_288\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_288:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2463:2578  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_271:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2202:2328  function _requirePaused() internal view virtual {... */\n    tag_278:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2265:2273  paused() */\n      tag_291\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2265:2271  paused */\n      tag_52\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2265:2273  paused() */\n      jump\t// in\n    tag_291:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2260:2322  if (!paused()) {... */\n      tag_292\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2296:2311  ExpectedPause() */\n      mload(0x40)\n      0x8dfc202b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2260:2322  if (!paused()) {... */\n    tag_292:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2202:2328  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n    tag_285:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2075  paused() */\n      tag_294\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2073  paused */\n      tag_52\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2075  paused() */\n      jump\t// in\n    tag_294:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n      iszero\n      tag_295\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2098:2113  EnforcedPause() */\n      mload(0x40)\n      0xd93c066500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n    tag_295:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_297:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:450   */\n    tag_299:\n        /* \"#utility.yul\":424:425   */\n      0x05\n        /* \"#utility.yul\":417:422   */\n      dup2\n        /* \"#utility.yul\":414:426   */\n      lt\n        /* \"#utility.yul\":404:444   */\n      tag_360\n      jumpi\n        /* \"#utility.yul\":440:441   */\n      0x00\n        /* \"#utility.yul\":437:438   */\n      dup1\n        /* \"#utility.yul\":430:442   */\n      revert\n        /* \"#utility.yul\":404:444   */\n    tag_360:\n        /* \"#utility.yul\":334:450   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":456:629   */\n    tag_300:\n        /* \"#utility.yul\":519:524   */\n      0x00\n        /* \"#utility.yul\":557:563   */\n      dup2\n        /* \"#utility.yul\":544:564   */\n      calldataload\n        /* \"#utility.yul\":535:564   */\n      swap1\n      pop\n        /* \"#utility.yul\":573:623   */\n      tag_362\n        /* \"#utility.yul\":617:622   */\n      dup2\n        /* \"#utility.yul\":573:623   */\n      tag_299\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":456:629   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":635:998   */\n    tag_27:\n        /* \"#utility.yul\":711:717   */\n      0x00\n        /* \"#utility.yul\":760:762   */\n      0x20\n        /* \"#utility.yul\":748:757   */\n      dup3\n        /* \"#utility.yul\":739:746   */\n      dup5\n        /* \"#utility.yul\":735:758   */\n      sub\n        /* \"#utility.yul\":731:763   */\n      slt\n        /* \"#utility.yul\":728:847   */\n      iszero\n      tag_364\n      jumpi\n        /* \"#utility.yul\":766:845   */\n      tag_365\n      tag_297\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":728:847   */\n    tag_364:\n        /* \"#utility.yul\":886:887   */\n      0x00\n        /* \"#utility.yul\":911:981   */\n      tag_366\n        /* \"#utility.yul\":973:980   */\n      dup5\n        /* \"#utility.yul\":964:970   */\n      dup3\n        /* \"#utility.yul\":953:962   */\n      dup6\n        /* \"#utility.yul\":949:971   */\n      add\n        /* \"#utility.yul\":911:981   */\n      tag_300\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":901:981   */\n      swap2\n      pop\n        /* \"#utility.yul\":857:991   */\n      pop\n        /* \"#utility.yul\":635:998   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1004:1081   */\n    tag_301:\n        /* \"#utility.yul\":1041:1048   */\n      0x00\n        /* \"#utility.yul\":1070:1075   */\n      dup2\n        /* \"#utility.yul\":1059:1075   */\n      swap1\n      pop\n        /* \"#utility.yul\":1004:1081   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1087:1205   */\n    tag_302:\n        /* \"#utility.yul\":1174:1198   */\n      tag_369\n        /* \"#utility.yul\":1192:1197   */\n      dup2\n        /* \"#utility.yul\":1174:1198   */\n      tag_301\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":1169:1172   */\n      dup3\n        /* \"#utility.yul\":1162:1199   */\n      mstore\n        /* \"#utility.yul\":1087:1205   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1211:1433   */\n    tag_30:\n        /* \"#utility.yul\":1304:1308   */\n      0x00\n        /* \"#utility.yul\":1342:1344   */\n      0x20\n        /* \"#utility.yul\":1331:1340   */\n      dup3\n        /* \"#utility.yul\":1327:1345   */\n      add\n        /* \"#utility.yul\":1319:1345   */\n      swap1\n      pop\n        /* \"#utility.yul\":1355:1426   */\n      tag_371\n        /* \"#utility.yul\":1423:1424   */\n      0x00\n        /* \"#utility.yul\":1412:1421   */\n      dup4\n        /* \"#utility.yul\":1408:1425   */\n      add\n        /* \"#utility.yul\":1399:1405   */\n      dup5\n        /* \"#utility.yul\":1355:1426   */\n      tag_302\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":1211:1433   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1439:1561   */\n    tag_303:\n        /* \"#utility.yul\":1512:1536   */\n      tag_373\n        /* \"#utility.yul\":1530:1535   */\n      dup2\n        /* \"#utility.yul\":1512:1536   */\n      tag_301\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":1505:1510   */\n      dup2\n        /* \"#utility.yul\":1502:1537   */\n      eq\n        /* \"#utility.yul\":1492:1555   */\n      tag_374\n      jumpi\n        /* \"#utility.yul\":1551:1552   */\n      0x00\n        /* \"#utility.yul\":1548:1549   */\n      dup1\n        /* \"#utility.yul\":1541:1553   */\n      revert\n        /* \"#utility.yul\":1492:1555   */\n    tag_374:\n        /* \"#utility.yul\":1439:1561   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1567:1706   */\n    tag_304:\n        /* \"#utility.yul\":1613:1618   */\n      0x00\n        /* \"#utility.yul\":1651:1657   */\n      dup2\n        /* \"#utility.yul\":1638:1658   */\n      calldataload\n        /* \"#utility.yul\":1629:1658   */\n      swap1\n      pop\n        /* \"#utility.yul\":1667:1700   */\n      tag_376\n        /* \"#utility.yul\":1694:1699   */\n      dup2\n        /* \"#utility.yul\":1667:1700   */\n      tag_303\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":1567:1706   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1712:2041   */\n    tag_33:\n        /* \"#utility.yul\":1771:1777   */\n      0x00\n        /* \"#utility.yul\":1820:1822   */\n      0x20\n        /* \"#utility.yul\":1808:1817   */\n      dup3\n        /* \"#utility.yul\":1799:1806   */\n      dup5\n        /* \"#utility.yul\":1795:1818   */\n      sub\n        /* \"#utility.yul\":1791:1823   */\n      slt\n        /* \"#utility.yul\":1788:1907   */\n      iszero\n      tag_378\n      jumpi\n        /* \"#utility.yul\":1826:1905   */\n      tag_379\n      tag_297\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":1788:1907   */\n    tag_378:\n        /* \"#utility.yul\":1946:1947   */\n      0x00\n        /* \"#utility.yul\":1971:2024   */\n      tag_380\n        /* \"#utility.yul\":2016:2023   */\n      dup5\n        /* \"#utility.yul\":2007:2013   */\n      dup3\n        /* \"#utility.yul\":1996:2005   */\n      dup6\n        /* \"#utility.yul\":1992:2014   */\n      add\n        /* \"#utility.yul\":1971:2024   */\n      tag_304\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":1961:2024   */\n      swap2\n      pop\n        /* \"#utility.yul\":1917:2034   */\n      pop\n        /* \"#utility.yul\":1712:2041   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2047:2173   */\n    tag_305:\n        /* \"#utility.yul\":2084:2091   */\n      0x00\n        /* \"#utility.yul\":2124:2166   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2117:2122   */\n      dup3\n        /* \"#utility.yul\":2113:2167   */\n      and\n        /* \"#utility.yul\":2102:2167   */\n      swap1\n      pop\n        /* \"#utility.yul\":2047:2173   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2179:2275   */\n    tag_306:\n        /* \"#utility.yul\":2216:2223   */\n      0x00\n        /* \"#utility.yul\":2245:2269   */\n      tag_383\n        /* \"#utility.yul\":2263:2268   */\n      dup3\n        /* \"#utility.yul\":2245:2269   */\n      tag_305\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":2234:2269   */\n      swap1\n      pop\n        /* \"#utility.yul\":2179:2275   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2281:2403   */\n    tag_307:\n        /* \"#utility.yul\":2354:2378   */\n      tag_385\n        /* \"#utility.yul\":2372:2377   */\n      dup2\n        /* \"#utility.yul\":2354:2378   */\n      tag_306\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":2347:2352   */\n      dup2\n        /* \"#utility.yul\":2344:2379   */\n      eq\n        /* \"#utility.yul\":2334:2397   */\n      tag_386\n      jumpi\n        /* \"#utility.yul\":2393:2394   */\n      0x00\n        /* \"#utility.yul\":2390:2391   */\n      dup1\n        /* \"#utility.yul\":2383:2395   */\n      revert\n        /* \"#utility.yul\":2334:2397   */\n    tag_386:\n        /* \"#utility.yul\":2281:2403   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2409:2548   */\n    tag_308:\n        /* \"#utility.yul\":2455:2460   */\n      0x00\n        /* \"#utility.yul\":2493:2499   */\n      dup2\n        /* \"#utility.yul\":2480:2500   */\n      calldataload\n        /* \"#utility.yul\":2471:2500   */\n      swap1\n      pop\n        /* \"#utility.yul\":2509:2542   */\n      tag_388\n        /* \"#utility.yul\":2536:2541   */\n      dup2\n        /* \"#utility.yul\":2509:2542   */\n      tag_307\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":2409:2548   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2554:3028   */\n    tag_43:\n        /* \"#utility.yul\":2622:2628   */\n      0x00\n        /* \"#utility.yul\":2630:2636   */\n      dup1\n        /* \"#utility.yul\":2679:2681   */\n      0x40\n        /* \"#utility.yul\":2667:2676   */\n      dup4\n        /* \"#utility.yul\":2658:2665   */\n      dup6\n        /* \"#utility.yul\":2654:2677   */\n      sub\n        /* \"#utility.yul\":2650:2682   */\n      slt\n        /* \"#utility.yul\":2647:2766   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":2685:2764   */\n      tag_391\n      tag_297\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":2647:2766   */\n    tag_390:\n        /* \"#utility.yul\":2805:2806   */\n      0x00\n        /* \"#utility.yul\":2830:2883   */\n      tag_392\n        /* \"#utility.yul\":2875:2882   */\n      dup6\n        /* \"#utility.yul\":2866:2872   */\n      dup3\n        /* \"#utility.yul\":2855:2864   */\n      dup7\n        /* \"#utility.yul\":2851:2873   */\n      add\n        /* \"#utility.yul\":2830:2883   */\n      tag_308\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":2820:2883   */\n      swap3\n      pop\n        /* \"#utility.yul\":2776:2893   */\n      pop\n        /* \"#utility.yul\":2932:2934   */\n      0x20\n        /* \"#utility.yul\":2958:3011   */\n      tag_393\n        /* \"#utility.yul\":3003:3010   */\n      dup6\n        /* \"#utility.yul\":2994:3000   */\n      dup3\n        /* \"#utility.yul\":2983:2992   */\n      dup7\n        /* \"#utility.yul\":2979:3001   */\n      add\n        /* \"#utility.yul\":2958:3011   */\n      tag_304\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":2948:3011   */\n      swap2\n      pop\n        /* \"#utility.yul\":2903:3021   */\n      pop\n        /* \"#utility.yul\":2554:3028   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3034:3124   */\n    tag_309:\n        /* \"#utility.yul\":3068:3075   */\n      0x00\n        /* \"#utility.yul\":3111:3116   */\n      dup2\n        /* \"#utility.yul\":3104:3117   */\n      iszero\n        /* \"#utility.yul\":3097:3118   */\n      iszero\n        /* \"#utility.yul\":3086:3118   */\n      swap1\n      pop\n        /* \"#utility.yul\":3034:3124   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3130:3239   */\n    tag_310:\n        /* \"#utility.yul\":3211:3232   */\n      tag_396\n        /* \"#utility.yul\":3226:3231   */\n      dup2\n        /* \"#utility.yul\":3211:3232   */\n      tag_309\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":3206:3209   */\n      dup3\n        /* \"#utility.yul\":3199:3233   */\n      mstore\n        /* \"#utility.yul\":3130:3239   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3245:4218   */\n    tag_46:\n        /* \"#utility.yul\":3522:3526   */\n      0x00\n        /* \"#utility.yul\":3560:3563   */\n      0x0100\n        /* \"#utility.yul\":3549:3558   */\n      dup3\n        /* \"#utility.yul\":3545:3564   */\n      add\n        /* \"#utility.yul\":3537:3564   */\n      swap1\n      pop\n        /* \"#utility.yul\":3574:3645   */\n      tag_398\n        /* \"#utility.yul\":3642:3643   */\n      0x00\n        /* \"#utility.yul\":3631:3640   */\n      dup4\n        /* \"#utility.yul\":3627:3644   */\n      add\n        /* \"#utility.yul\":3618:3624   */\n      dup12\n        /* \"#utility.yul\":3574:3645   */\n      tag_302\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":3655:3727   */\n      tag_399\n        /* \"#utility.yul\":3723:3725   */\n      0x20\n        /* \"#utility.yul\":3712:3721   */\n      dup4\n        /* \"#utility.yul\":3708:3726   */\n      add\n        /* \"#utility.yul\":3699:3705   */\n      dup11\n        /* \"#utility.yul\":3655:3727   */\n      tag_302\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":3737:3809   */\n      tag_400\n        /* \"#utility.yul\":3805:3807   */\n      0x40\n        /* \"#utility.yul\":3794:3803   */\n      dup4\n        /* \"#utility.yul\":3790:3808   */\n      add\n        /* \"#utility.yul\":3781:3787   */\n      dup10\n        /* \"#utility.yul\":3737:3809   */\n      tag_302\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":3819:3891   */\n      tag_401\n        /* \"#utility.yul\":3887:3889   */\n      0x60\n        /* \"#utility.yul\":3876:3885   */\n      dup4\n        /* \"#utility.yul\":3872:3890   */\n      add\n        /* \"#utility.yul\":3863:3869   */\n      dup9\n        /* \"#utility.yul\":3819:3891   */\n      tag_302\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":3901:3974   */\n      tag_402\n        /* \"#utility.yul\":3969:3972   */\n      0x80\n        /* \"#utility.yul\":3958:3967   */\n      dup4\n        /* \"#utility.yul\":3954:3973   */\n      add\n        /* \"#utility.yul\":3945:3951   */\n      dup8\n        /* \"#utility.yul\":3901:3974   */\n      tag_302\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":3984:4057   */\n      tag_403\n        /* \"#utility.yul\":4052:4055   */\n      0xa0\n        /* \"#utility.yul\":4041:4050   */\n      dup4\n        /* \"#utility.yul\":4037:4056   */\n      add\n        /* \"#utility.yul\":4028:4034   */\n      dup7\n        /* \"#utility.yul\":3984:4057   */\n      tag_302\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":4067:4134   */\n      tag_404\n        /* \"#utility.yul\":4129:4132   */\n      0xc0\n        /* \"#utility.yul\":4118:4127   */\n      dup4\n        /* \"#utility.yul\":4114:4133   */\n      add\n        /* \"#utility.yul\":4105:4111   */\n      dup6\n        /* \"#utility.yul\":4067:4134   */\n      tag_310\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":4144:4211   */\n      tag_405\n        /* \"#utility.yul\":4206:4209   */\n      0xe0\n        /* \"#utility.yul\":4195:4204   */\n      dup4\n        /* \"#utility.yul\":4191:4210   */\n      add\n        /* \"#utility.yul\":4182:4188   */\n      dup5\n        /* \"#utility.yul\":4144:4211   */\n      tag_310\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":3245:4218   */\n      swap10\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4224:4340   */\n    tag_311:\n        /* \"#utility.yul\":4294:4315   */\n      tag_407\n        /* \"#utility.yul\":4309:4314   */\n      dup2\n        /* \"#utility.yul\":4294:4315   */\n      tag_309\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":4287:4292   */\n      dup2\n        /* \"#utility.yul\":4284:4316   */\n      eq\n        /* \"#utility.yul\":4274:4334   */\n      tag_408\n      jumpi\n        /* \"#utility.yul\":4330:4331   */\n      0x00\n        /* \"#utility.yul\":4327:4328   */\n      dup1\n        /* \"#utility.yul\":4320:4332   */\n      revert\n        /* \"#utility.yul\":4274:4334   */\n    tag_408:\n        /* \"#utility.yul\":4224:4340   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4346:4479   */\n    tag_312:\n        /* \"#utility.yul\":4389:4394   */\n      0x00\n        /* \"#utility.yul\":4427:4433   */\n      dup2\n        /* \"#utility.yul\":4414:4434   */\n      calldataload\n        /* \"#utility.yul\":4405:4434   */\n      swap1\n      pop\n        /* \"#utility.yul\":4443:4473   */\n      tag_410\n        /* \"#utility.yul\":4467:4472   */\n      dup2\n        /* \"#utility.yul\":4443:4473   */\n      tag_311\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":4346:4479   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4485:5862   */\n    tag_49:\n        /* \"#utility.yul\":4621:4627   */\n      0x00\n        /* \"#utility.yul\":4629:4635   */\n      dup1\n        /* \"#utility.yul\":4637:4643   */\n      0x00\n        /* \"#utility.yul\":4645:4651   */\n      dup1\n        /* \"#utility.yul\":4653:4659   */\n      0x00\n        /* \"#utility.yul\":4661:4667   */\n      dup1\n        /* \"#utility.yul\":4669:4675   */\n      0x00\n        /* \"#utility.yul\":4677:4683   */\n      dup1\n        /* \"#utility.yul\":4726:4729   */\n      0x0100\n        /* \"#utility.yul\":4714:4723   */\n      dup10\n        /* \"#utility.yul\":4705:4712   */\n      dup12\n        /* \"#utility.yul\":4701:4724   */\n      sub\n        /* \"#utility.yul\":4697:4730   */\n      slt\n        /* \"#utility.yul\":4694:4814   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":4733:4812   */\n      tag_413\n      tag_297\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":4694:4814   */\n    tag_412:\n        /* \"#utility.yul\":4853:4854   */\n      0x00\n        /* \"#utility.yul\":4878:4931   */\n      tag_414\n        /* \"#utility.yul\":4923:4930   */\n      dup12\n        /* \"#utility.yul\":4914:4920   */\n      dup3\n        /* \"#utility.yul\":4903:4912   */\n      dup13\n        /* \"#utility.yul\":4899:4921   */\n      add\n        /* \"#utility.yul\":4878:4931   */\n      tag_308\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":4868:4931   */\n      swap9\n      pop\n        /* \"#utility.yul\":4824:4941   */\n      pop\n        /* \"#utility.yul\":4980:4982   */\n      0x20\n        /* \"#utility.yul\":5006:5076   */\n      tag_415\n        /* \"#utility.yul\":5068:5075   */\n      dup12\n        /* \"#utility.yul\":5059:5065   */\n      dup3\n        /* \"#utility.yul\":5048:5057   */\n      dup13\n        /* \"#utility.yul\":5044:5066   */\n      add\n        /* \"#utility.yul\":5006:5076   */\n      tag_300\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":4996:5076   */\n      swap8\n      pop\n        /* \"#utility.yul\":4951:5086   */\n      pop\n        /* \"#utility.yul\":5125:5127   */\n      0x40\n        /* \"#utility.yul\":5151:5204   */\n      tag_416\n        /* \"#utility.yul\":5196:5203   */\n      dup12\n        /* \"#utility.yul\":5187:5193   */\n      dup3\n        /* \"#utility.yul\":5176:5185   */\n      dup13\n        /* \"#utility.yul\":5172:5194   */\n      add\n        /* \"#utility.yul\":5151:5204   */\n      tag_304\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":5141:5204   */\n      swap7\n      pop\n        /* \"#utility.yul\":5096:5214   */\n      pop\n        /* \"#utility.yul\":5253:5255   */\n      0x60\n        /* \"#utility.yul\":5279:5332   */\n      tag_417\n        /* \"#utility.yul\":5324:5331   */\n      dup12\n        /* \"#utility.yul\":5315:5321   */\n      dup3\n        /* \"#utility.yul\":5304:5313   */\n      dup13\n        /* \"#utility.yul\":5300:5322   */\n      add\n        /* \"#utility.yul\":5279:5332   */\n      tag_304\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":5269:5332   */\n      swap6\n      pop\n        /* \"#utility.yul\":5224:5342   */\n      pop\n        /* \"#utility.yul\":5381:5384   */\n      0x80\n        /* \"#utility.yul\":5408:5461   */\n      tag_418\n        /* \"#utility.yul\":5453:5460   */\n      dup12\n        /* \"#utility.yul\":5444:5450   */\n      dup3\n        /* \"#utility.yul\":5433:5442   */\n      dup13\n        /* \"#utility.yul\":5429:5451   */\n      add\n        /* \"#utility.yul\":5408:5461   */\n      tag_304\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":5398:5461   */\n      swap5\n      pop\n        /* \"#utility.yul\":5352:5471   */\n      pop\n        /* \"#utility.yul\":5510:5513   */\n      0xa0\n        /* \"#utility.yul\":5537:5590   */\n      tag_419\n        /* \"#utility.yul\":5582:5589   */\n      dup12\n        /* \"#utility.yul\":5573:5579   */\n      dup3\n        /* \"#utility.yul\":5562:5571   */\n      dup13\n        /* \"#utility.yul\":5558:5580   */\n      add\n        /* \"#utility.yul\":5537:5590   */\n      tag_304\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":5527:5590   */\n      swap4\n      pop\n        /* \"#utility.yul\":5481:5600   */\n      pop\n        /* \"#utility.yul\":5639:5642   */\n      0xc0\n        /* \"#utility.yul\":5666:5719   */\n      tag_420\n        /* \"#utility.yul\":5711:5718   */\n      dup12\n        /* \"#utility.yul\":5702:5708   */\n      dup3\n        /* \"#utility.yul\":5691:5700   */\n      dup13\n        /* \"#utility.yul\":5687:5709   */\n      add\n        /* \"#utility.yul\":5666:5719   */\n      tag_304\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":5656:5719   */\n      swap3\n      pop\n        /* \"#utility.yul\":5610:5729   */\n      pop\n        /* \"#utility.yul\":5768:5771   */\n      0xe0\n        /* \"#utility.yul\":5795:5845   */\n      tag_421\n        /* \"#utility.yul\":5837:5844   */\n      dup12\n        /* \"#utility.yul\":5828:5834   */\n      dup3\n        /* \"#utility.yul\":5817:5826   */\n      dup13\n        /* \"#utility.yul\":5813:5835   */\n      add\n        /* \"#utility.yul\":5795:5845   */\n      tag_312\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":5785:5845   */\n      swap2\n      pop\n        /* \"#utility.yul\":5739:5855   */\n      pop\n        /* \"#utility.yul\":4485:5862   */\n      swap3\n      swap6\n      swap9\n      pop\n      swap3\n      swap6\n      swap9\n      swap1\n      swap4\n      swap7\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5868:6078   */\n    tag_54:\n        /* \"#utility.yul\":5955:5959   */\n      0x00\n        /* \"#utility.yul\":5993:5995   */\n      0x20\n        /* \"#utility.yul\":5982:5991   */\n      dup3\n        /* \"#utility.yul\":5978:5996   */\n      add\n        /* \"#utility.yul\":5970:5996   */\n      swap1\n      pop\n        /* \"#utility.yul\":6006:6071   */\n      tag_423\n        /* \"#utility.yul\":6068:6069   */\n      0x00\n        /* \"#utility.yul\":6057:6066   */\n      dup4\n        /* \"#utility.yul\":6053:6070   */\n      add\n        /* \"#utility.yul\":6044:6050   */\n      dup5\n        /* \"#utility.yul\":6006:6071   */\n      tag_310\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":5868:6078   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6084:6202   */\n    tag_313:\n        /* \"#utility.yul\":6171:6195   */\n      tag_425\n        /* \"#utility.yul\":6189:6194   */\n      dup2\n        /* \"#utility.yul\":6171:6195   */\n      tag_306\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":6166:6169   */\n      dup3\n        /* \"#utility.yul\":6159:6196   */\n      mstore\n        /* \"#utility.yul\":6084:6202   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6208:6430   */\n    tag_58:\n        /* \"#utility.yul\":6301:6305   */\n      0x00\n        /* \"#utility.yul\":6339:6341   */\n      0x20\n        /* \"#utility.yul\":6328:6337   */\n      dup3\n        /* \"#utility.yul\":6324:6342   */\n      add\n        /* \"#utility.yul\":6316:6342   */\n      swap1\n      pop\n        /* \"#utility.yul\":6352:6423   */\n      tag_427\n        /* \"#utility.yul\":6420:6421   */\n      0x00\n        /* \"#utility.yul\":6409:6418   */\n      dup4\n        /* \"#utility.yul\":6405:6422   */\n      add\n        /* \"#utility.yul\":6396:6402   */\n      dup5\n        /* \"#utility.yul\":6352:6423   */\n      tag_313\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":6208:6430   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6436:6765   */\n    tag_63:\n        /* \"#utility.yul\":6495:6501   */\n      0x00\n        /* \"#utility.yul\":6544:6546   */\n      0x20\n        /* \"#utility.yul\":6532:6541   */\n      dup3\n        /* \"#utility.yul\":6523:6530   */\n      dup5\n        /* \"#utility.yul\":6519:6542   */\n      sub\n        /* \"#utility.yul\":6515:6547   */\n      slt\n        /* \"#utility.yul\":6512:6631   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":6550:6629   */\n      tag_430\n      tag_297\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":6512:6631   */\n    tag_429:\n        /* \"#utility.yul\":6670:6671   */\n      0x00\n        /* \"#utility.yul\":6695:6748   */\n      tag_431\n        /* \"#utility.yul\":6740:6747   */\n      dup5\n        /* \"#utility.yul\":6731:6737   */\n      dup3\n        /* \"#utility.yul\":6720:6729   */\n      dup6\n        /* \"#utility.yul\":6716:6738   */\n      add\n        /* \"#utility.yul\":6695:6748   */\n      tag_308\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":6685:6748   */\n      swap2\n      pop\n        /* \"#utility.yul\":6641:6758   */\n      pop\n        /* \"#utility.yul\":6436:6765   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6771:6831   */\n    tag_314:\n        /* \"#utility.yul\":6799:6802   */\n      0x00\n        /* \"#utility.yul\":6820:6825   */\n      dup2\n        /* \"#utility.yul\":6813:6825   */\n      swap1\n      pop\n        /* \"#utility.yul\":6771:6831   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6837:6979   */\n    tag_315:\n        /* \"#utility.yul\":6887:6896   */\n      0x00\n        /* \"#utility.yul\":6920:6973   */\n      tag_434\n        /* \"#utility.yul\":6938:6972   */\n      tag_435\n        /* \"#utility.yul\":6947:6971   */\n      tag_436\n        /* \"#utility.yul\":6965:6970   */\n      dup5\n        /* \"#utility.yul\":6947:6971   */\n      tag_305\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":6938:6972   */\n      tag_314\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":6920:6973   */\n      tag_305\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":6907:6973   */\n      swap1\n      pop\n        /* \"#utility.yul\":6837:6979   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6985:7111   */\n    tag_316:\n        /* \"#utility.yul\":7035:7044   */\n      0x00\n        /* \"#utility.yul\":7068:7105   */\n      tag_438\n        /* \"#utility.yul\":7099:7104   */\n      dup3\n        /* \"#utility.yul\":7068:7105   */\n      tag_315\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":7055:7105   */\n      swap1\n      pop\n        /* \"#utility.yul\":6985:7111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7117:7257   */\n    tag_317:\n        /* \"#utility.yul\":7181:7190   */\n      0x00\n        /* \"#utility.yul\":7214:7251   */\n      tag_440\n        /* \"#utility.yul\":7245:7250   */\n      dup3\n        /* \"#utility.yul\":7214:7251   */\n      tag_316\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":7201:7251   */\n      swap1\n      pop\n        /* \"#utility.yul\":7117:7257   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7263:7422   */\n    tag_318:\n        /* \"#utility.yul\":7364:7415   */\n      tag_442\n        /* \"#utility.yul\":7409:7414   */\n      dup2\n        /* \"#utility.yul\":7364:7415   */\n      tag_317\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":7359:7362   */\n      dup3\n        /* \"#utility.yul\":7352:7416   */\n      mstore\n        /* \"#utility.yul\":7263:7422   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7428:7678   */\n    tag_90:\n        /* \"#utility.yul\":7535:7539   */\n      0x00\n        /* \"#utility.yul\":7573:7575   */\n      0x20\n        /* \"#utility.yul\":7562:7571   */\n      dup3\n        /* \"#utility.yul\":7558:7576   */\n      add\n        /* \"#utility.yul\":7550:7576   */\n      swap1\n      pop\n        /* \"#utility.yul\":7586:7671   */\n      tag_444\n        /* \"#utility.yul\":7668:7669   */\n      0x00\n        /* \"#utility.yul\":7657:7666   */\n      dup4\n        /* \"#utility.yul\":7653:7670   */\n      add\n        /* \"#utility.yul\":7644:7650   */\n      dup5\n        /* \"#utility.yul\":7586:7671   */\n      tag_318\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":7428:7678   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7684:7864   */\n    tag_101:\n        /* \"#utility.yul\":7732:7809   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7729:7730   */\n      0x00\n        /* \"#utility.yul\":7722:7810   */\n      mstore\n        /* \"#utility.yul\":7829:7833   */\n      0x32\n        /* \"#utility.yul\":7826:7827   */\n      0x04\n        /* \"#utility.yul\":7819:7834   */\n      mstore\n        /* \"#utility.yul\":7853:7857   */\n      0x24\n        /* \"#utility.yul\":7850:7851   */\n      0x00\n        /* \"#utility.yul\":7843:7858   */\n      revert\n        /* \"#utility.yul\":7870:8039   */\n    tag_319:\n        /* \"#utility.yul\":7954:7965   */\n      0x00\n        /* \"#utility.yul\":7988:7994   */\n      dup3\n        /* \"#utility.yul\":7983:7986   */\n      dup3\n        /* \"#utility.yul\":7976:7995   */\n      mstore\n        /* \"#utility.yul\":8028:8032   */\n      0x20\n        /* \"#utility.yul\":8023:8026   */\n      dup3\n        /* \"#utility.yul\":8019:8033   */\n      add\n        /* \"#utility.yul\":8004:8033   */\n      swap1\n      pop\n        /* \"#utility.yul\":7870:8039   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8045:8211   */\n    tag_320:\n        /* \"#utility.yul\":8185:8203   */\n      0x4e6f2073756368207363686564756c6500000000000000000000000000000000\n        /* \"#utility.yul\":8181:8182   */\n      0x00\n        /* \"#utility.yul\":8173:8179   */\n      dup3\n        /* \"#utility.yul\":8169:8183   */\n      add\n        /* \"#utility.yul\":8162:8204   */\n      mstore\n        /* \"#utility.yul\":8045:8211   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8217:8583   */\n    tag_321:\n        /* \"#utility.yul\":8359:8362   */\n      0x00\n        /* \"#utility.yul\":8380:8447   */\n      tag_449\n        /* \"#utility.yul\":8444:8446   */\n      0x10\n        /* \"#utility.yul\":8439:8442   */\n      dup4\n        /* \"#utility.yul\":8380:8447   */\n      tag_319\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":8373:8447   */\n      swap2\n      pop\n        /* \"#utility.yul\":8456:8549   */\n      tag_450\n        /* \"#utility.yul\":8545:8548   */\n      dup3\n        /* \"#utility.yul\":8456:8549   */\n      tag_320\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":8574:8576   */\n      0x20\n        /* \"#utility.yul\":8569:8572   */\n      dup3\n        /* \"#utility.yul\":8565:8577   */\n      add\n        /* \"#utility.yul\":8558:8577   */\n      swap1\n      pop\n        /* \"#utility.yul\":8217:8583   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8589:9008   */\n    tag_105:\n        /* \"#utility.yul\":8755:8759   */\n      0x00\n        /* \"#utility.yul\":8793:8795   */\n      0x20\n        /* \"#utility.yul\":8782:8791   */\n      dup3\n        /* \"#utility.yul\":8778:8796   */\n      add\n        /* \"#utility.yul\":8770:8796   */\n      swap1\n      pop\n        /* \"#utility.yul\":8842:8851   */\n      dup2\n        /* \"#utility.yul\":8836:8840   */\n      dup2\n        /* \"#utility.yul\":8832:8852   */\n      sub\n        /* \"#utility.yul\":8828:8829   */\n      0x00\n        /* \"#utility.yul\":8817:8826   */\n      dup4\n        /* \"#utility.yul\":8813:8830   */\n      add\n        /* \"#utility.yul\":8806:8853   */\n      mstore\n        /* \"#utility.yul\":8870:9001   */\n      tag_452\n        /* \"#utility.yul\":8996:9000   */\n      dup2\n        /* \"#utility.yul\":8870:9001   */\n      tag_321\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":8862:9001   */\n      swap1\n      pop\n        /* \"#utility.yul\":8589:9008   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9014:9180   */\n    tag_322:\n        /* \"#utility.yul\":9154:9172   */\n      0x5363686564756c65207265766f6b656400000000000000000000000000000000\n        /* \"#utility.yul\":9150:9151   */\n      0x00\n        /* \"#utility.yul\":9142:9148   */\n      dup3\n        /* \"#utility.yul\":9138:9152   */\n      add\n        /* \"#utility.yul\":9131:9173   */\n      mstore\n        /* \"#utility.yul\":9014:9180   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9186:9552   */\n    tag_323:\n        /* \"#utility.yul\":9328:9331   */\n      0x00\n        /* \"#utility.yul\":9349:9416   */\n      tag_455\n        /* \"#utility.yul\":9413:9415   */\n      0x10\n        /* \"#utility.yul\":9408:9411   */\n      dup4\n        /* \"#utility.yul\":9349:9416   */\n      tag_319\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":9342:9416   */\n      swap2\n      pop\n        /* \"#utility.yul\":9425:9518   */\n      tag_456\n        /* \"#utility.yul\":9514:9517   */\n      dup3\n        /* \"#utility.yul\":9425:9518   */\n      tag_322\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":9543:9545   */\n      0x20\n        /* \"#utility.yul\":9538:9541   */\n      dup3\n        /* \"#utility.yul\":9534:9546   */\n      add\n        /* \"#utility.yul\":9527:9546   */\n      swap1\n      pop\n        /* \"#utility.yul\":9186:9552   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9558:9977   */\n    tag_108:\n        /* \"#utility.yul\":9724:9728   */\n      0x00\n        /* \"#utility.yul\":9762:9764   */\n      0x20\n        /* \"#utility.yul\":9751:9760   */\n      dup3\n        /* \"#utility.yul\":9747:9765   */\n      add\n        /* \"#utility.yul\":9739:9765   */\n      swap1\n      pop\n        /* \"#utility.yul\":9811:9820   */\n      dup2\n        /* \"#utility.yul\":9805:9809   */\n      dup2\n        /* \"#utility.yul\":9801:9821   */\n      sub\n        /* \"#utility.yul\":9797:9798   */\n      0x00\n        /* \"#utility.yul\":9786:9795   */\n      dup4\n        /* \"#utility.yul\":9782:9799   */\n      add\n        /* \"#utility.yul\":9775:9822   */\n      mstore\n        /* \"#utility.yul\":9839:9970   */\n      tag_458\n        /* \"#utility.yul\":9965:9969   */\n      dup2\n        /* \"#utility.yul\":9839:9970   */\n      tag_323\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":9831:9970   */\n      swap1\n      pop\n        /* \"#utility.yul\":9558:9977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9983:10163   */\n    tag_324:\n        /* \"#utility.yul\":10031:10108   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10028:10029   */\n      0x00\n        /* \"#utility.yul\":10021:10109   */\n      mstore\n        /* \"#utility.yul\":10128:10132   */\n      0x11\n        /* \"#utility.yul\":10125:10126   */\n      0x04\n        /* \"#utility.yul\":10118:10133   */\n      mstore\n        /* \"#utility.yul\":10152:10156   */\n      0x24\n        /* \"#utility.yul\":10149:10150   */\n      0x00\n        /* \"#utility.yul\":10142:10157   */\n      revert\n        /* \"#utility.yul\":10169:10363   */\n    tag_112:\n        /* \"#utility.yul\":10209:10213   */\n      0x00\n        /* \"#utility.yul\":10229:10249   */\n      tag_461\n        /* \"#utility.yul\":10247:10248   */\n      dup3\n        /* \"#utility.yul\":10229:10249   */\n      tag_301\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":10224:10249   */\n      swap2\n      pop\n        /* \"#utility.yul\":10263:10283   */\n      tag_462\n        /* \"#utility.yul\":10281:10282   */\n      dup4\n        /* \"#utility.yul\":10263:10283   */\n      tag_301\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":10258:10283   */\n      swap3\n      pop\n        /* \"#utility.yul\":10307:10308   */\n      dup3\n        /* \"#utility.yul\":10304:10305   */\n      dup3\n        /* \"#utility.yul\":10300:10309   */\n      sub\n        /* \"#utility.yul\":10292:10309   */\n      swap1\n      pop\n        /* \"#utility.yul\":10331:10332   */\n      dup2\n        /* \"#utility.yul\":10325:10329   */\n      dup2\n        /* \"#utility.yul\":10322:10333   */\n      gt\n        /* \"#utility.yul\":10319:10356   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":10336:10354   */\n      tag_464\n      tag_324\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":10319:10356   */\n    tag_463:\n        /* \"#utility.yul\":10169:10363   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10369:10539   */\n    tag_325:\n        /* \"#utility.yul\":10509:10531   */\n      0x4e6f20746f6b656e7320746f2072656c65617365000000000000000000000000\n        /* \"#utility.yul\":10505:10506   */\n      0x00\n        /* \"#utility.yul\":10497:10503   */\n      dup3\n        /* \"#utility.yul\":10493:10507   */\n      add\n        /* \"#utility.yul\":10486:10532   */\n      mstore\n        /* \"#utility.yul\":10369:10539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10545:10911   */\n    tag_326:\n        /* \"#utility.yul\":10687:10690   */\n      0x00\n        /* \"#utility.yul\":10708:10775   */\n      tag_467\n        /* \"#utility.yul\":10772:10774   */\n      0x14\n        /* \"#utility.yul\":10767:10770   */\n      dup4\n        /* \"#utility.yul\":10708:10775   */\n      tag_319\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":10701:10775   */\n      swap2\n      pop\n        /* \"#utility.yul\":10784:10877   */\n      tag_468\n        /* \"#utility.yul\":10873:10876   */\n      dup3\n        /* \"#utility.yul\":10784:10877   */\n      tag_325\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":10902:10904   */\n      0x20\n        /* \"#utility.yul\":10897:10900   */\n      dup3\n        /* \"#utility.yul\":10893:10905   */\n      add\n        /* \"#utility.yul\":10886:10905   */\n      swap1\n      pop\n        /* \"#utility.yul\":10545:10911   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10917:11336   */\n    tag_115:\n        /* \"#utility.yul\":11083:11087   */\n      0x00\n        /* \"#utility.yul\":11121:11123   */\n      0x20\n        /* \"#utility.yul\":11110:11119   */\n      dup3\n        /* \"#utility.yul\":11106:11124   */\n      add\n        /* \"#utility.yul\":11098:11124   */\n      swap1\n      pop\n        /* \"#utility.yul\":11170:11179   */\n      dup2\n        /* \"#utility.yul\":11164:11168   */\n      dup2\n        /* \"#utility.yul\":11160:11180   */\n      sub\n        /* \"#utility.yul\":11156:11157   */\n      0x00\n        /* \"#utility.yul\":11145:11154   */\n      dup4\n        /* \"#utility.yul\":11141:11158   */\n      add\n        /* \"#utility.yul\":11134:11181   */\n      mstore\n        /* \"#utility.yul\":11198:11329   */\n      tag_470\n        /* \"#utility.yul\":11324:11328   */\n      dup2\n        /* \"#utility.yul\":11198:11329   */\n      tag_326\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":11190:11329   */\n      swap1\n      pop\n        /* \"#utility.yul\":10917:11336   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11342:11533   */\n    tag_117:\n        /* \"#utility.yul\":11382:11385   */\n      0x00\n        /* \"#utility.yul\":11401:11421   */\n      tag_472\n        /* \"#utility.yul\":11419:11420   */\n      dup3\n        /* \"#utility.yul\":11401:11421   */\n      tag_301\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":11396:11421   */\n      swap2\n      pop\n        /* \"#utility.yul\":11435:11455   */\n      tag_473\n        /* \"#utility.yul\":11453:11454   */\n      dup4\n        /* \"#utility.yul\":11435:11455   */\n      tag_301\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":11430:11455   */\n      swap3\n      pop\n        /* \"#utility.yul\":11478:11479   */\n      dup3\n        /* \"#utility.yul\":11475:11476   */\n      dup3\n        /* \"#utility.yul\":11471:11480   */\n      add\n        /* \"#utility.yul\":11464:11480   */\n      swap1\n      pop\n        /* \"#utility.yul\":11499:11502   */\n      dup1\n        /* \"#utility.yul\":11496:11497   */\n      dup3\n        /* \"#utility.yul\":11493:11503   */\n      gt\n        /* \"#utility.yul\":11490:11526   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":11506:11524   */\n      tag_475\n      tag_324\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":11490:11526   */\n    tag_474:\n        /* \"#utility.yul\":11342:11533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11539:11871   */\n    tag_119:\n        /* \"#utility.yul\":11660:11664   */\n      0x00\n        /* \"#utility.yul\":11698:11700   */\n      0x40\n        /* \"#utility.yul\":11687:11696   */\n      dup3\n        /* \"#utility.yul\":11683:11701   */\n      add\n        /* \"#utility.yul\":11675:11701   */\n      swap1\n      pop\n        /* \"#utility.yul\":11711:11782   */\n      tag_477\n        /* \"#utility.yul\":11779:11780   */\n      0x00\n        /* \"#utility.yul\":11768:11777   */\n      dup4\n        /* \"#utility.yul\":11764:11781   */\n      add\n        /* \"#utility.yul\":11755:11761   */\n      dup6\n        /* \"#utility.yul\":11711:11782   */\n      tag_313\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":11792:11864   */\n      tag_478\n        /* \"#utility.yul\":11860:11862   */\n      0x20\n        /* \"#utility.yul\":11849:11858   */\n      dup4\n        /* \"#utility.yul\":11845:11863   */\n      add\n        /* \"#utility.yul\":11836:11842   */\n      dup5\n        /* \"#utility.yul\":11792:11864   */\n      tag_302\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":11539:11871   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11877:12014   */\n    tag_327:\n        /* \"#utility.yul\":11931:11936   */\n      0x00\n        /* \"#utility.yul\":11962:11968   */\n      dup2\n        /* \"#utility.yul\":11956:11969   */\n      mload\n        /* \"#utility.yul\":11947:11969   */\n      swap1\n      pop\n        /* \"#utility.yul\":11978:12008   */\n      tag_480\n        /* \"#utility.yul\":12002:12007   */\n      dup2\n        /* \"#utility.yul\":11978:12008   */\n      tag_311\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":11877:12014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12020:12365   */\n    tag_123:\n        /* \"#utility.yul\":12087:12093   */\n      0x00\n        /* \"#utility.yul\":12136:12138   */\n      0x20\n        /* \"#utility.yul\":12124:12133   */\n      dup3\n        /* \"#utility.yul\":12115:12122   */\n      dup5\n        /* \"#utility.yul\":12111:12134   */\n      sub\n        /* \"#utility.yul\":12107:12139   */\n      slt\n        /* \"#utility.yul\":12104:12223   */\n      iszero\n      tag_482\n      jumpi\n        /* \"#utility.yul\":12142:12221   */\n      tag_483\n      tag_297\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":12104:12223   */\n    tag_482:\n        /* \"#utility.yul\":12262:12263   */\n      0x00\n        /* \"#utility.yul\":12287:12348   */\n      tag_484\n        /* \"#utility.yul\":12340:12347   */\n      dup5\n        /* \"#utility.yul\":12331:12337   */\n      dup3\n        /* \"#utility.yul\":12320:12329   */\n      dup6\n        /* \"#utility.yul\":12316:12338   */\n      add\n        /* \"#utility.yul\":12287:12348   */\n      tag_327\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":12277:12348   */\n      swap2\n      pop\n        /* \"#utility.yul\":12233:12358   */\n      pop\n        /* \"#utility.yul\":12020:12365   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12371:12536   */\n    tag_328:\n        /* \"#utility.yul\":12511:12528   */\n      0x5472616e73666572206661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":12507:12508   */\n      0x00\n        /* \"#utility.yul\":12499:12505   */\n      dup3\n        /* \"#utility.yul\":12495:12509   */\n      add\n        /* \"#utility.yul\":12488:12529   */\n      mstore\n        /* \"#utility.yul\":12371:12536   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12542:12908   */\n    tag_329:\n        /* \"#utility.yul\":12684:12687   */\n      0x00\n        /* \"#utility.yul\":12705:12772   */\n      tag_487\n        /* \"#utility.yul\":12769:12771   */\n      0x0f\n        /* \"#utility.yul\":12764:12767   */\n      dup4\n        /* \"#utility.yul\":12705:12772   */\n      tag_319\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":12698:12772   */\n      swap2\n      pop\n        /* \"#utility.yul\":12781:12874   */\n      tag_488\n        /* \"#utility.yul\":12870:12873   */\n      dup3\n        /* \"#utility.yul\":12781:12874   */\n      tag_328\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":12899:12901   */\n      0x20\n        /* \"#utility.yul\":12894:12897   */\n      dup3\n        /* \"#utility.yul\":12890:12902   */\n      add\n        /* \"#utility.yul\":12883:12902   */\n      swap1\n      pop\n        /* \"#utility.yul\":12542:12908   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12914:13333   */\n    tag_126:\n        /* \"#utility.yul\":13080:13084   */\n      0x00\n        /* \"#utility.yul\":13118:13120   */\n      0x20\n        /* \"#utility.yul\":13107:13116   */\n      dup3\n        /* \"#utility.yul\":13103:13121   */\n      add\n        /* \"#utility.yul\":13095:13121   */\n      swap1\n      pop\n        /* \"#utility.yul\":13167:13176   */\n      dup2\n        /* \"#utility.yul\":13161:13165   */\n      dup2\n        /* \"#utility.yul\":13157:13177   */\n      sub\n        /* \"#utility.yul\":13153:13154   */\n      0x00\n        /* \"#utility.yul\":13142:13151   */\n      dup4\n        /* \"#utility.yul\":13138:13155   */\n      add\n        /* \"#utility.yul\":13131:13178   */\n      mstore\n        /* \"#utility.yul\":13195:13326   */\n      tag_490\n        /* \"#utility.yul\":13321:13325   */\n      dup2\n        /* \"#utility.yul\":13195:13326   */\n      tag_329\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":13187:13326   */\n      swap1\n      pop\n        /* \"#utility.yul\":12914:13333   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13339:13508   */\n    tag_330:\n        /* \"#utility.yul\":13479:13500   */\n      0x496e76616c69642062656e656669636961727900000000000000000000000000\n        /* \"#utility.yul\":13475:13476   */\n      0x00\n        /* \"#utility.yul\":13467:13473   */\n      dup3\n        /* \"#utility.yul\":13463:13477   */\n      add\n        /* \"#utility.yul\":13456:13501   */\n      mstore\n        /* \"#utility.yul\":13339:13508   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13514:13880   */\n    tag_331:\n        /* \"#utility.yul\":13656:13659   */\n      0x00\n        /* \"#utility.yul\":13677:13744   */\n      tag_493\n        /* \"#utility.yul\":13741:13743   */\n      0x13\n        /* \"#utility.yul\":13736:13739   */\n      dup4\n        /* \"#utility.yul\":13677:13744   */\n      tag_319\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":13670:13744   */\n      swap2\n      pop\n        /* \"#utility.yul\":13753:13846   */\n      tag_494\n        /* \"#utility.yul\":13842:13845   */\n      dup3\n        /* \"#utility.yul\":13753:13846   */\n      tag_330\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":13871:13873   */\n      0x20\n        /* \"#utility.yul\":13866:13869   */\n      dup3\n        /* \"#utility.yul\":13862:13874   */\n      add\n        /* \"#utility.yul\":13855:13874   */\n      swap1\n      pop\n        /* \"#utility.yul\":13514:13880   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13886:14305   */\n    tag_143:\n        /* \"#utility.yul\":14052:14056   */\n      0x00\n        /* \"#utility.yul\":14090:14092   */\n      0x20\n        /* \"#utility.yul\":14079:14088   */\n      dup3\n        /* \"#utility.yul\":14075:14093   */\n      add\n        /* \"#utility.yul\":14067:14093   */\n      swap1\n      pop\n        /* \"#utility.yul\":14139:14148   */\n      dup2\n        /* \"#utility.yul\":14133:14137   */\n      dup2\n        /* \"#utility.yul\":14129:14149   */\n      sub\n        /* \"#utility.yul\":14125:14126   */\n      0x00\n        /* \"#utility.yul\":14114:14123   */\n      dup4\n        /* \"#utility.yul\":14110:14127   */\n      add\n        /* \"#utility.yul\":14103:14150   */\n      mstore\n        /* \"#utility.yul\":14167:14298   */\n      tag_496\n        /* \"#utility.yul\":14293:14297   */\n      dup2\n        /* \"#utility.yul\":14167:14298   */\n      tag_331\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":14159:14298   */\n      swap1\n      pop\n        /* \"#utility.yul\":13886:14305   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14311:14479   */\n    tag_332:\n        /* \"#utility.yul\":14451:14471   */\n      0x416d6f756e74206d757374206265203e20300000000000000000000000000000\n        /* \"#utility.yul\":14447:14448   */\n      0x00\n        /* \"#utility.yul\":14439:14445   */\n      dup3\n        /* \"#utility.yul\":14435:14449   */\n      add\n        /* \"#utility.yul\":14428:14472   */\n      mstore\n        /* \"#utility.yul\":14311:14479   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14485:14851   */\n    tag_333:\n        /* \"#utility.yul\":14627:14630   */\n      0x00\n        /* \"#utility.yul\":14648:14715   */\n      tag_499\n        /* \"#utility.yul\":14712:14714   */\n      0x12\n        /* \"#utility.yul\":14707:14710   */\n      dup4\n        /* \"#utility.yul\":14648:14715   */\n      tag_319\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":14641:14715   */\n      swap2\n      pop\n        /* \"#utility.yul\":14724:14817   */\n      tag_500\n        /* \"#utility.yul\":14813:14816   */\n      dup3\n        /* \"#utility.yul\":14724:14817   */\n      tag_332\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":14842:14844   */\n      0x20\n        /* \"#utility.yul\":14837:14840   */\n      dup3\n        /* \"#utility.yul\":14833:14845   */\n      add\n        /* \"#utility.yul\":14826:14845   */\n      swap1\n      pop\n        /* \"#utility.yul\":14485:14851   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14857:15276   */\n    tag_146:\n        /* \"#utility.yul\":15023:15027   */\n      0x00\n        /* \"#utility.yul\":15061:15063   */\n      0x20\n        /* \"#utility.yul\":15050:15059   */\n      dup3\n        /* \"#utility.yul\":15046:15064   */\n      add\n        /* \"#utility.yul\":15038:15064   */\n      swap1\n      pop\n        /* \"#utility.yul\":15110:15119   */\n      dup2\n        /* \"#utility.yul\":15104:15108   */\n      dup2\n        /* \"#utility.yul\":15100:15120   */\n      sub\n        /* \"#utility.yul\":15096:15097   */\n      0x00\n        /* \"#utility.yul\":15085:15094   */\n      dup4\n        /* \"#utility.yul\":15081:15098   */\n      add\n        /* \"#utility.yul\":15074:15121   */\n      mstore\n        /* \"#utility.yul\":15138:15269   */\n      tag_502\n        /* \"#utility.yul\":15264:15268   */\n      dup2\n        /* \"#utility.yul\":15138:15269   */\n      tag_333\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":15130:15269   */\n      swap1\n      pop\n        /* \"#utility.yul\":14857:15276   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15282:15452   */\n    tag_334:\n        /* \"#utility.yul\":15422:15444   */\n      0x4475726174696f6e206d757374206265203e2030000000000000000000000000\n        /* \"#utility.yul\":15418:15419   */\n      0x00\n        /* \"#utility.yul\":15410:15416   */\n      dup3\n        /* \"#utility.yul\":15406:15420   */\n      add\n        /* \"#utility.yul\":15399:15445   */\n      mstore\n        /* \"#utility.yul\":15282:15452   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15458:15824   */\n    tag_335:\n        /* \"#utility.yul\":15600:15603   */\n      0x00\n        /* \"#utility.yul\":15621:15688   */\n      tag_505\n        /* \"#utility.yul\":15685:15687   */\n      0x14\n        /* \"#utility.yul\":15680:15683   */\n      dup4\n        /* \"#utility.yul\":15621:15688   */\n      tag_319\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":15614:15688   */\n      swap2\n      pop\n        /* \"#utility.yul\":15697:15790   */\n      tag_506\n        /* \"#utility.yul\":15786:15789   */\n      dup3\n        /* \"#utility.yul\":15697:15790   */\n      tag_334\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":15815:15817   */\n      0x20\n        /* \"#utility.yul\":15810:15813   */\n      dup3\n        /* \"#utility.yul\":15806:15818   */\n      add\n        /* \"#utility.yul\":15799:15818   */\n      swap1\n      pop\n        /* \"#utility.yul\":15458:15824   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15830:16249   */\n    tag_149:\n        /* \"#utility.yul\":15996:16000   */\n      0x00\n        /* \"#utility.yul\":16034:16036   */\n      0x20\n        /* \"#utility.yul\":16023:16032   */\n      dup3\n        /* \"#utility.yul\":16019:16037   */\n      add\n        /* \"#utility.yul\":16011:16037   */\n      swap1\n      pop\n        /* \"#utility.yul\":16083:16092   */\n      dup2\n        /* \"#utility.yul\":16077:16081   */\n      dup2\n        /* \"#utility.yul\":16073:16093   */\n      sub\n        /* \"#utility.yul\":16069:16070   */\n      0x00\n        /* \"#utility.yul\":16058:16067   */\n      dup4\n        /* \"#utility.yul\":16054:16071   */\n      add\n        /* \"#utility.yul\":16047:16094   */\n      mstore\n        /* \"#utility.yul\":16111:16242   */\n      tag_508\n        /* \"#utility.yul\":16237:16241   */\n      dup2\n        /* \"#utility.yul\":16111:16242   */\n      tag_335\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":16103:16242   */\n      swap1\n      pop\n        /* \"#utility.yul\":15830:16249   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16255:16429   */\n    tag_336:\n        /* \"#utility.yul\":16395:16421   */\n      0x536c69636520706572696f64206d757374206265203e20300000000000000000\n        /* \"#utility.yul\":16391:16392   */\n      0x00\n        /* \"#utility.yul\":16383:16389   */\n      dup3\n        /* \"#utility.yul\":16379:16393   */\n      add\n        /* \"#utility.yul\":16372:16422   */\n      mstore\n        /* \"#utility.yul\":16255:16429   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16435:16801   */\n    tag_337:\n        /* \"#utility.yul\":16577:16580   */\n      0x00\n        /* \"#utility.yul\":16598:16665   */\n      tag_511\n        /* \"#utility.yul\":16662:16664   */\n      0x18\n        /* \"#utility.yul\":16657:16660   */\n      dup4\n        /* \"#utility.yul\":16598:16665   */\n      tag_319\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":16591:16665   */\n      swap2\n      pop\n        /* \"#utility.yul\":16674:16767   */\n      tag_512\n        /* \"#utility.yul\":16763:16766   */\n      dup3\n        /* \"#utility.yul\":16674:16767   */\n      tag_336\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":16792:16794   */\n      0x20\n        /* \"#utility.yul\":16787:16790   */\n      dup3\n        /* \"#utility.yul\":16783:16795   */\n      add\n        /* \"#utility.yul\":16776:16795   */\n      swap1\n      pop\n        /* \"#utility.yul\":16435:16801   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16807:17226   */\n    tag_152:\n        /* \"#utility.yul\":16973:16977   */\n      0x00\n        /* \"#utility.yul\":17011:17013   */\n      0x20\n        /* \"#utility.yul\":17000:17009   */\n      dup3\n        /* \"#utility.yul\":16996:17014   */\n      add\n        /* \"#utility.yul\":16988:17014   */\n      swap1\n      pop\n        /* \"#utility.yul\":17060:17069   */\n      dup2\n        /* \"#utility.yul\":17054:17058   */\n      dup2\n        /* \"#utility.yul\":17050:17070   */\n      sub\n        /* \"#utility.yul\":17046:17047   */\n      0x00\n        /* \"#utility.yul\":17035:17044   */\n      dup4\n        /* \"#utility.yul\":17031:17048   */\n      add\n        /* \"#utility.yul\":17024:17071   */\n      mstore\n        /* \"#utility.yul\":17088:17219   */\n      tag_514\n        /* \"#utility.yul\":17214:17218   */\n      dup2\n        /* \"#utility.yul\":17088:17219   */\n      tag_337\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":17080:17219   */\n      swap1\n      pop\n        /* \"#utility.yul\":16807:17226   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17232:17395   */\n    tag_338:\n        /* \"#utility.yul\":17372:17387   */\n      0x496e76616c696420636c69666600000000000000000000000000000000000000\n        /* \"#utility.yul\":17368:17369   */\n      0x00\n        /* \"#utility.yul\":17360:17366   */\n      dup3\n        /* \"#utility.yul\":17356:17370   */\n      add\n        /* \"#utility.yul\":17349:17388   */\n      mstore\n        /* \"#utility.yul\":17232:17395   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17401:17767   */\n    tag_339:\n        /* \"#utility.yul\":17543:17546   */\n      0x00\n        /* \"#utility.yul\":17564:17631   */\n      tag_517\n        /* \"#utility.yul\":17628:17630   */\n      0x0d\n        /* \"#utility.yul\":17623:17626   */\n      dup4\n        /* \"#utility.yul\":17564:17631   */\n      tag_319\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":17557:17631   */\n      swap2\n      pop\n        /* \"#utility.yul\":17640:17733   */\n      tag_518\n        /* \"#utility.yul\":17729:17732   */\n      dup3\n        /* \"#utility.yul\":17640:17733   */\n      tag_338\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":17758:17760   */\n      0x20\n        /* \"#utility.yul\":17753:17756   */\n      dup3\n        /* \"#utility.yul\":17749:17761   */\n      add\n        /* \"#utility.yul\":17742:17761   */\n      swap1\n      pop\n        /* \"#utility.yul\":17401:17767   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17773:18192   */\n    tag_155:\n        /* \"#utility.yul\":17939:17943   */\n      0x00\n        /* \"#utility.yul\":17977:17979   */\n      0x20\n        /* \"#utility.yul\":17966:17975   */\n      dup3\n        /* \"#utility.yul\":17962:17980   */\n      add\n        /* \"#utility.yul\":17954:17980   */\n      swap1\n      pop\n        /* \"#utility.yul\":18026:18035   */\n      dup2\n        /* \"#utility.yul\":18020:18024   */\n      dup2\n        /* \"#utility.yul\":18016:18036   */\n      sub\n        /* \"#utility.yul\":18012:18013   */\n      0x00\n        /* \"#utility.yul\":18001:18010   */\n      dup4\n        /* \"#utility.yul\":17997:18014   */\n      add\n        /* \"#utility.yul\":17990:18037   */\n      mstore\n        /* \"#utility.yul\":18054:18185   */\n      tag_520\n        /* \"#utility.yul\":18180:18184   */\n      dup2\n        /* \"#utility.yul\":18054:18185   */\n      tag_339\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":18046:18185   */\n      swap1\n      pop\n        /* \"#utility.yul\":17773:18192   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18198:18364   */\n    tag_340:\n        /* \"#utility.yul\":18338:18356   */\n      0x53746172742074696d65203c206e6f7700000000000000000000000000000000\n        /* \"#utility.yul\":18334:18335   */\n      0x00\n        /* \"#utility.yul\":18326:18332   */\n      dup3\n        /* \"#utility.yul\":18322:18336   */\n      add\n        /* \"#utility.yul\":18315:18357   */\n      mstore\n        /* \"#utility.yul\":18198:18364   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18370:18736   */\n    tag_341:\n        /* \"#utility.yul\":18512:18515   */\n      0x00\n        /* \"#utility.yul\":18533:18600   */\n      tag_523\n        /* \"#utility.yul\":18597:18599   */\n      0x10\n        /* \"#utility.yul\":18592:18595   */\n      dup4\n        /* \"#utility.yul\":18533:18600   */\n      tag_319\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":18526:18600   */\n      swap2\n      pop\n        /* \"#utility.yul\":18609:18702   */\n      tag_524\n        /* \"#utility.yul\":18698:18701   */\n      dup3\n        /* \"#utility.yul\":18609:18702   */\n      tag_340\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":18727:18729   */\n      0x20\n        /* \"#utility.yul\":18722:18725   */\n      dup3\n        /* \"#utility.yul\":18718:18730   */\n      add\n        /* \"#utility.yul\":18711:18730   */\n      swap1\n      pop\n        /* \"#utility.yul\":18370:18736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18742:19161   */\n    tag_158:\n        /* \"#utility.yul\":18908:18912   */\n      0x00\n        /* \"#utility.yul\":18946:18948   */\n      0x20\n        /* \"#utility.yul\":18935:18944   */\n      dup3\n        /* \"#utility.yul\":18931:18949   */\n      add\n        /* \"#utility.yul\":18923:18949   */\n      swap1\n      pop\n        /* \"#utility.yul\":18995:19004   */\n      dup2\n        /* \"#utility.yul\":18989:18993   */\n      dup2\n        /* \"#utility.yul\":18985:19005   */\n      sub\n        /* \"#utility.yul\":18981:18982   */\n      0x00\n        /* \"#utility.yul\":18970:18979   */\n      dup4\n        /* \"#utility.yul\":18966:18983   */\n      add\n        /* \"#utility.yul\":18959:19006   */\n      mstore\n        /* \"#utility.yul\":19023:19154   */\n      tag_526\n        /* \"#utility.yul\":19149:19153   */\n      dup2\n        /* \"#utility.yul\":19023:19154   */\n      tag_341\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":19015:19154   */\n      swap1\n      pop\n        /* \"#utility.yul\":18742:19161   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19167:19347   */\n    tag_161:\n        /* \"#utility.yul\":19215:19292   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19212:19213   */\n      0x00\n        /* \"#utility.yul\":19205:19293   */\n      mstore\n        /* \"#utility.yul\":19312:19316   */\n      0x21\n        /* \"#utility.yul\":19309:19310   */\n      0x04\n        /* \"#utility.yul\":19302:19317   */\n      mstore\n        /* \"#utility.yul\":19336:19340   */\n      0x24\n        /* \"#utility.yul\":19333:19334   */\n      0x00\n        /* \"#utility.yul\":19326:19341   */\n      revert\n        /* \"#utility.yul\":19353:19522   */\n    tag_342:\n        /* \"#utility.yul\":19493:19514   */\n      0x45786365656473206d61782076657374696e6700000000000000000000000000\n        /* \"#utility.yul\":19489:19490   */\n      0x00\n        /* \"#utility.yul\":19481:19487   */\n      dup3\n        /* \"#utility.yul\":19477:19491   */\n      add\n        /* \"#utility.yul\":19470:19515   */\n      mstore\n        /* \"#utility.yul\":19353:19522   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19528:19894   */\n    tag_343:\n        /* \"#utility.yul\":19670:19673   */\n      0x00\n        /* \"#utility.yul\":19691:19758   */\n      tag_530\n        /* \"#utility.yul\":19755:19757   */\n      0x13\n        /* \"#utility.yul\":19750:19753   */\n      dup4\n        /* \"#utility.yul\":19691:19758   */\n      tag_319\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":19684:19758   */\n      swap2\n      pop\n        /* \"#utility.yul\":19767:19860   */\n      tag_531\n        /* \"#utility.yul\":19856:19859   */\n      dup3\n        /* \"#utility.yul\":19767:19860   */\n      tag_342\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":19885:19887   */\n      0x20\n        /* \"#utility.yul\":19880:19883   */\n      dup3\n        /* \"#utility.yul\":19876:19888   */\n      add\n        /* \"#utility.yul\":19869:19888   */\n      swap1\n      pop\n        /* \"#utility.yul\":19528:19894   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19900:20319   */\n    tag_171:\n        /* \"#utility.yul\":20066:20070   */\n      0x00\n        /* \"#utility.yul\":20104:20106   */\n      0x20\n        /* \"#utility.yul\":20093:20102   */\n      dup3\n        /* \"#utility.yul\":20089:20107   */\n      add\n        /* \"#utility.yul\":20081:20107   */\n      swap1\n      pop\n        /* \"#utility.yul\":20153:20162   */\n      dup2\n        /* \"#utility.yul\":20147:20151   */\n      dup2\n        /* \"#utility.yul\":20143:20163   */\n      sub\n        /* \"#utility.yul\":20139:20140   */\n      0x00\n        /* \"#utility.yul\":20128:20137   */\n      dup4\n        /* \"#utility.yul\":20124:20141   */\n      add\n        /* \"#utility.yul\":20117:20164   */\n      mstore\n        /* \"#utility.yul\":20181:20312   */\n      tag_533\n        /* \"#utility.yul\":20307:20311   */\n      dup2\n        /* \"#utility.yul\":20181:20312   */\n      tag_343\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":20173:20312   */\n      swap1\n      pop\n        /* \"#utility.yul\":19900:20319   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20325:20767   */\n    tag_173:\n        /* \"#utility.yul\":20474:20478   */\n      0x00\n        /* \"#utility.yul\":20512:20514   */\n      0x60\n        /* \"#utility.yul\":20501:20510   */\n      dup3\n        /* \"#utility.yul\":20497:20515   */\n      add\n        /* \"#utility.yul\":20489:20515   */\n      swap1\n      pop\n        /* \"#utility.yul\":20525:20596   */\n      tag_535\n        /* \"#utility.yul\":20593:20594   */\n      0x00\n        /* \"#utility.yul\":20582:20591   */\n      dup4\n        /* \"#utility.yul\":20578:20595   */\n      add\n        /* \"#utility.yul\":20569:20575   */\n      dup7\n        /* \"#utility.yul\":20525:20596   */\n      tag_313\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":20606:20678   */\n      tag_536\n        /* \"#utility.yul\":20674:20676   */\n      0x20\n        /* \"#utility.yul\":20663:20672   */\n      dup4\n        /* \"#utility.yul\":20659:20677   */\n      add\n        /* \"#utility.yul\":20650:20656   */\n      dup6\n        /* \"#utility.yul\":20606:20678   */\n      tag_313\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":20688:20760   */\n      tag_537\n        /* \"#utility.yul\":20756:20758   */\n      0x40\n        /* \"#utility.yul\":20745:20754   */\n      dup4\n        /* \"#utility.yul\":20741:20759   */\n      add\n        /* \"#utility.yul\":20732:20738   */\n      dup5\n        /* \"#utility.yul\":20688:20760   */\n      tag_302\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":20325:20767   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20773:21006   */\n    tag_181:\n        /* \"#utility.yul\":20812:20815   */\n      0x00\n        /* \"#utility.yul\":20835:20859   */\n      tag_539\n        /* \"#utility.yul\":20853:20858   */\n      dup3\n        /* \"#utility.yul\":20835:20859   */\n      tag_301\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":20826:20859   */\n      swap2\n      pop\n        /* \"#utility.yul\":20881:20947   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":20874:20879   */\n      dup3\n        /* \"#utility.yul\":20871:20948   */\n      sub\n        /* \"#utility.yul\":20868:20971   */\n      tag_540\n      jumpi\n        /* \"#utility.yul\":20951:20969   */\n      tag_541\n      tag_324\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":20868:20971   */\n    tag_540:\n        /* \"#utility.yul\":20998:20999   */\n      0x01\n        /* \"#utility.yul\":20991:20996   */\n      dup3\n        /* \"#utility.yul\":20987:21000   */\n      add\n        /* \"#utility.yul\":20980:21000   */\n      swap1\n      pop\n        /* \"#utility.yul\":20773:21006   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21012:21134   */\n    tag_344:\n        /* \"#utility.yul\":21102:21103   */\n      0x05\n        /* \"#utility.yul\":21095:21100   */\n      dup2\n        /* \"#utility.yul\":21092:21104   */\n      lt\n        /* \"#utility.yul\":21082:21128   */\n      tag_543\n      jumpi\n        /* \"#utility.yul\":21108:21126   */\n      tag_544\n      tag_161\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":21082:21128   */\n    tag_543:\n        /* \"#utility.yul\":21012:21134   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21140:21285   */\n    tag_345:\n        /* \"#utility.yul\":21194:21201   */\n      0x00\n        /* \"#utility.yul\":21223:21228   */\n      dup2\n        /* \"#utility.yul\":21212:21228   */\n      swap1\n      pop\n        /* \"#utility.yul\":21229:21279   */\n      tag_546\n        /* \"#utility.yul\":21273:21278   */\n      dup3\n        /* \"#utility.yul\":21229:21279   */\n      tag_344\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":21140:21285   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21291:21436   */\n    tag_346:\n        /* \"#utility.yul\":21356:21365   */\n      0x00\n        /* \"#utility.yul\":21389:21430   */\n      tag_548\n        /* \"#utility.yul\":21424:21429   */\n      dup3\n        /* \"#utility.yul\":21389:21430   */\n      tag_345\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":21376:21430   */\n      swap1\n      pop\n        /* \"#utility.yul\":21291:21436   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21442:21603   */\n    tag_347:\n        /* \"#utility.yul\":21544:21596   */\n      tag_550\n        /* \"#utility.yul\":21590:21595   */\n      dup2\n        /* \"#utility.yul\":21544:21596   */\n      tag_346\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":21539:21542   */\n      dup3\n        /* \"#utility.yul\":21532:21597   */\n      mstore\n        /* \"#utility.yul\":21442:21603   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21609:21971   */\n    tag_194:\n        /* \"#utility.yul\":21745:21749   */\n      0x00\n        /* \"#utility.yul\":21783:21785   */\n      0x40\n        /* \"#utility.yul\":21772:21781   */\n      dup3\n        /* \"#utility.yul\":21768:21786   */\n      add\n        /* \"#utility.yul\":21760:21786   */\n      swap1\n      pop\n        /* \"#utility.yul\":21796:21882   */\n      tag_552\n        /* \"#utility.yul\":21879:21880   */\n      0x00\n        /* \"#utility.yul\":21868:21877   */\n      dup4\n        /* \"#utility.yul\":21864:21881   */\n      add\n        /* \"#utility.yul\":21855:21861   */\n      dup6\n        /* \"#utility.yul\":21796:21882   */\n      tag_347\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":21892:21964   */\n      tag_553\n        /* \"#utility.yul\":21960:21962   */\n      0x20\n        /* \"#utility.yul\":21949:21958   */\n      dup4\n        /* \"#utility.yul\":21945:21963   */\n      add\n        /* \"#utility.yul\":21936:21942   */\n      dup5\n        /* \"#utility.yul\":21892:21964   */\n      tag_302\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":21609:21971   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21977:22142   */\n    tag_348:\n        /* \"#utility.yul\":22117:22134   */\n      0x496e76616c696420616464726573730000000000000000000000000000000000\n        /* \"#utility.yul\":22113:22114   */\n      0x00\n        /* \"#utility.yul\":22105:22111   */\n      dup3\n        /* \"#utility.yul\":22101:22115   */\n      add\n        /* \"#utility.yul\":22094:22135   */\n      mstore\n        /* \"#utility.yul\":21977:22142   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22148:22514   */\n    tag_349:\n        /* \"#utility.yul\":22290:22293   */\n      0x00\n        /* \"#utility.yul\":22311:22378   */\n      tag_556\n        /* \"#utility.yul\":22375:22377   */\n      0x0f\n        /* \"#utility.yul\":22370:22373   */\n      dup4\n        /* \"#utility.yul\":22311:22378   */\n      tag_319\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":22304:22378   */\n      swap2\n      pop\n        /* \"#utility.yul\":22387:22480   */\n      tag_557\n        /* \"#utility.yul\":22476:22479   */\n      dup3\n        /* \"#utility.yul\":22387:22480   */\n      tag_348\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":22505:22507   */\n      0x20\n        /* \"#utility.yul\":22500:22503   */\n      dup3\n        /* \"#utility.yul\":22496:22508   */\n      add\n        /* \"#utility.yul\":22489:22508   */\n      swap1\n      pop\n        /* \"#utility.yul\":22148:22514   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22520:22939   */\n    tag_206:\n        /* \"#utility.yul\":22686:22690   */\n      0x00\n        /* \"#utility.yul\":22724:22726   */\n      0x20\n        /* \"#utility.yul\":22713:22722   */\n      dup3\n        /* \"#utility.yul\":22709:22727   */\n      add\n        /* \"#utility.yul\":22701:22727   */\n      swap1\n      pop\n        /* \"#utility.yul\":22773:22782   */\n      dup2\n        /* \"#utility.yul\":22767:22771   */\n      dup2\n        /* \"#utility.yul\":22763:22783   */\n      sub\n        /* \"#utility.yul\":22759:22760   */\n      0x00\n        /* \"#utility.yul\":22748:22757   */\n      dup4\n        /* \"#utility.yul\":22744:22761   */\n      add\n        /* \"#utility.yul\":22737:22784   */\n      mstore\n        /* \"#utility.yul\":22801:22932   */\n      tag_559\n        /* \"#utility.yul\":22927:22931   */\n      dup2\n        /* \"#utility.yul\":22801:22932   */\n      tag_349\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":22793:22932   */\n      swap1\n      pop\n        /* \"#utility.yul\":22520:22939   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22945:23108   */\n    tag_350:\n        /* \"#utility.yul\":23085:23100   */\n      0x4e6f74207265766f6361626c6500000000000000000000000000000000000000\n        /* \"#utility.yul\":23081:23082   */\n      0x00\n        /* \"#utility.yul\":23073:23079   */\n      dup3\n        /* \"#utility.yul\":23069:23083   */\n      add\n        /* \"#utility.yul\":23062:23101   */\n      mstore\n        /* \"#utility.yul\":22945:23108   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23114:23480   */\n    tag_351:\n        /* \"#utility.yul\":23256:23259   */\n      0x00\n        /* \"#utility.yul\":23277:23344   */\n      tag_562\n        /* \"#utility.yul\":23341:23343   */\n      0x0d\n        /* \"#utility.yul\":23336:23339   */\n      dup4\n        /* \"#utility.yul\":23277:23344   */\n      tag_319\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":23270:23344   */\n      swap2\n      pop\n        /* \"#utility.yul\":23353:23446   */\n      tag_563\n        /* \"#utility.yul\":23442:23445   */\n      dup3\n        /* \"#utility.yul\":23353:23446   */\n      tag_350\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":23471:23473   */\n      0x20\n        /* \"#utility.yul\":23466:23469   */\n      dup3\n        /* \"#utility.yul\":23462:23474   */\n      add\n        /* \"#utility.yul\":23455:23474   */\n      swap1\n      pop\n        /* \"#utility.yul\":23114:23480   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23486:23905   */\n    tag_227:\n        /* \"#utility.yul\":23652:23656   */\n      0x00\n        /* \"#utility.yul\":23690:23692   */\n      0x20\n        /* \"#utility.yul\":23679:23688   */\n      dup3\n        /* \"#utility.yul\":23675:23693   */\n      add\n        /* \"#utility.yul\":23667:23693   */\n      swap1\n      pop\n        /* \"#utility.yul\":23739:23748   */\n      dup2\n        /* \"#utility.yul\":23733:23737   */\n      dup2\n        /* \"#utility.yul\":23729:23749   */\n      sub\n        /* \"#utility.yul\":23725:23726   */\n      0x00\n        /* \"#utility.yul\":23714:23723   */\n      dup4\n        /* \"#utility.yul\":23710:23727   */\n      add\n        /* \"#utility.yul\":23703:23750   */\n      mstore\n        /* \"#utility.yul\":23767:23898   */\n      tag_565\n        /* \"#utility.yul\":23893:23897   */\n      dup2\n        /* \"#utility.yul\":23767:23898   */\n      tag_351\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":23759:23898   */\n      swap1\n      pop\n        /* \"#utility.yul\":23486:23905   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23911:24076   */\n    tag_352:\n        /* \"#utility.yul\":24051:24068   */\n      0x416c7265616479207265766f6b65640000000000000000000000000000000000\n        /* \"#utility.yul\":24047:24048   */\n      0x00\n        /* \"#utility.yul\":24039:24045   */\n      dup3\n        /* \"#utility.yul\":24035:24049   */\n      add\n        /* \"#utility.yul\":24028:24069   */\n      mstore\n        /* \"#utility.yul\":23911:24076   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24082:24448   */\n    tag_353:\n        /* \"#utility.yul\":24224:24227   */\n      0x00\n        /* \"#utility.yul\":24245:24312   */\n      tag_568\n        /* \"#utility.yul\":24309:24311   */\n      0x0f\n        /* \"#utility.yul\":24304:24307   */\n      dup4\n        /* \"#utility.yul\":24245:24312   */\n      tag_319\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":24238:24312   */\n      swap2\n      pop\n        /* \"#utility.yul\":24321:24414   */\n      tag_569\n        /* \"#utility.yul\":24410:24413   */\n      dup3\n        /* \"#utility.yul\":24321:24414   */\n      tag_352\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":24439:24441   */\n      0x20\n        /* \"#utility.yul\":24434:24437   */\n      dup3\n        /* \"#utility.yul\":24430:24442   */\n      add\n        /* \"#utility.yul\":24423:24442   */\n      swap1\n      pop\n        /* \"#utility.yul\":24082:24448   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24454:24873   */\n    tag_230:\n        /* \"#utility.yul\":24620:24624   */\n      0x00\n        /* \"#utility.yul\":24658:24660   */\n      0x20\n        /* \"#utility.yul\":24647:24656   */\n      dup3\n        /* \"#utility.yul\":24643:24661   */\n      add\n        /* \"#utility.yul\":24635:24661   */\n      swap1\n      pop\n        /* \"#utility.yul\":24707:24716   */\n      dup2\n        /* \"#utility.yul\":24701:24705   */\n      dup2\n        /* \"#utility.yul\":24697:24717   */\n      sub\n        /* \"#utility.yul\":24693:24694   */\n      0x00\n        /* \"#utility.yul\":24682:24691   */\n      dup4\n        /* \"#utility.yul\":24678:24695   */\n      add\n        /* \"#utility.yul\":24671:24718   */\n      mstore\n        /* \"#utility.yul\":24735:24866   */\n      tag_571\n        /* \"#utility.yul\":24861:24865   */\n      dup2\n        /* \"#utility.yul\":24735:24866   */\n      tag_353\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":24727:24866   */\n      swap1\n      pop\n        /* \"#utility.yul\":24454:24873   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24879:25059   */\n    tag_354:\n        /* \"#utility.yul\":24927:25004   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24924:24925   */\n      0x00\n        /* \"#utility.yul\":24917:25005   */\n      mstore\n        /* \"#utility.yul\":25024:25028   */\n      0x12\n        /* \"#utility.yul\":25021:25022   */\n      0x04\n        /* \"#utility.yul\":25014:25029   */\n      mstore\n        /* \"#utility.yul\":25048:25052   */\n      0x24\n        /* \"#utility.yul\":25045:25046   */\n      0x00\n        /* \"#utility.yul\":25038:25053   */\n      revert\n        /* \"#utility.yul\":25065:25250   */\n    tag_263:\n        /* \"#utility.yul\":25105:25106   */\n      0x00\n        /* \"#utility.yul\":25122:25142   */\n      tag_574\n        /* \"#utility.yul\":25140:25141   */\n      dup3\n        /* \"#utility.yul\":25122:25142   */\n      tag_301\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":25117:25142   */\n      swap2\n      pop\n        /* \"#utility.yul\":25156:25176   */\n      tag_575\n        /* \"#utility.yul\":25174:25175   */\n      dup4\n        /* \"#utility.yul\":25156:25176   */\n      tag_301\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":25151:25176   */\n      swap3\n      pop\n        /* \"#utility.yul\":25195:25196   */\n      dup3\n        /* \"#utility.yul\":25185:25220   */\n      tag_576\n      jumpi\n        /* \"#utility.yul\":25200:25218   */\n      tag_577\n      tag_354\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":25185:25220   */\n    tag_576:\n        /* \"#utility.yul\":25242:25243   */\n      dup3\n        /* \"#utility.yul\":25239:25240   */\n      dup3\n        /* \"#utility.yul\":25235:25244   */\n      div\n        /* \"#utility.yul\":25230:25244   */\n      swap1\n      pop\n        /* \"#utility.yul\":25065:25250   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25256:25666   */\n    tag_265:\n        /* \"#utility.yul\":25296:25303   */\n      0x00\n        /* \"#utility.yul\":25319:25339   */\n      tag_579\n        /* \"#utility.yul\":25337:25338   */\n      dup3\n        /* \"#utility.yul\":25319:25339   */\n      tag_301\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":25314:25339   */\n      swap2\n      pop\n        /* \"#utility.yul\":25353:25373   */\n      tag_580\n        /* \"#utility.yul\":25371:25372   */\n      dup4\n        /* \"#utility.yul\":25353:25373   */\n      tag_301\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":25348:25373   */\n      swap3\n      pop\n        /* \"#utility.yul\":25408:25409   */\n      dup3\n        /* \"#utility.yul\":25405:25406   */\n      dup3\n        /* \"#utility.yul\":25401:25410   */\n      mul\n        /* \"#utility.yul\":25430:25460   */\n      tag_581\n        /* \"#utility.yul\":25448:25459   */\n      dup2\n        /* \"#utility.yul\":25430:25460   */\n      tag_301\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":25419:25460   */\n      swap2\n      pop\n        /* \"#utility.yul\":25609:25610   */\n      dup3\n        /* \"#utility.yul\":25600:25607   */\n      dup3\n        /* \"#utility.yul\":25596:25611   */\n      div\n        /* \"#utility.yul\":25593:25594   */\n      dup5\n        /* \"#utility.yul\":25590:25612   */\n      eq\n        /* \"#utility.yul\":25570:25571   */\n      dup4\n        /* \"#utility.yul\":25563:25572   */\n      iszero\n        /* \"#utility.yul\":25543:25626   */\n      or\n        /* \"#utility.yul\":25520:25659   */\n      tag_582\n      jumpi\n        /* \"#utility.yul\":25639:25657   */\n      tag_583\n      tag_324\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":25520:25659   */\n    tag_582:\n        /* \"#utility.yul\":25304:25666   */\n      pop\n        /* \"#utility.yul\":25256:25666   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a1bc69375d4019d8e9697e4eb7089a62746138c0abf55022d0c54d3997eda08264736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_341": {
									"entryPoint": null,
									"id": 341,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_4063": {
									"entryPoint": null,
									"id": 4063,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_446": {
									"entryPoint": null,
									"id": 446,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 915,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1182,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_address_fromMemory": {
									"entryPoint": 1202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1378,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1143,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 1546,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1108,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f": {
									"entryPoint": 1442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743": {
									"entryPoint": 1338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4175:9",
										"nodeType": "YulBlock",
										"src": "0:4175:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "379:81:9",
													"nodeType": "YulBlock",
													"src": "379:81:9",
													"statements": [
														{
															"nativeSrc": "389:65:9",
															"nodeType": "YulAssignment",
															"src": "389:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:9",
																		"nodeType": "YulLiteral",
																		"src": "411:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:9"
																},
																"nativeSrc": "400:54:9",
																"nodeType": "YulFunctionCall",
																"src": "400:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:9",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:9",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:126:9"
											},
											{
												"body": {
													"nativeSrc": "511:51:9",
													"nodeType": "YulBlock",
													"src": "511:51:9",
													"statements": [
														{
															"nativeSrc": "521:35:9",
															"nodeType": "YulAssignment",
															"src": "521:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:9"
																},
																"nativeSrc": "532:24:9",
																"nodeType": "YulFunctionCall",
																"src": "532:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:9",
														"nodeType": "YulTypedName",
														"src": "493:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:9",
														"nodeType": "YulTypedName",
														"src": "503:7:9",
														"type": ""
													}
												],
												"src": "466:96:9"
											},
											{
												"body": {
													"nativeSrc": "611:79:9",
													"nodeType": "YulBlock",
													"src": "611:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:9",
																"nodeType": "YulBlock",
																"src": "668:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:9",
																					"nodeType": "YulLiteral",
																					"src": "677:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:9",
																					"nodeType": "YulLiteral",
																					"src": "680:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:9"
																			},
																			"nativeSrc": "670:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:9"
																		},
																		"nativeSrc": "670:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:9"
																				},
																				"nativeSrc": "641:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:9"
																		},
																		"nativeSrc": "631:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:9"
																},
																"nativeSrc": "624:43:9",
																"nodeType": "YulFunctionCall",
																"src": "624:43:9"
															},
															"nativeSrc": "621:63:9",
															"nodeType": "YulIf",
															"src": "621:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:9",
														"nodeType": "YulTypedName",
														"src": "604:5:9",
														"type": ""
													}
												],
												"src": "568:122:9"
											},
											{
												"body": {
													"nativeSrc": "759:80:9",
													"nodeType": "YulBlock",
													"src": "759:80:9",
													"statements": [
														{
															"nativeSrc": "769:22:9",
															"nodeType": "YulAssignment",
															"src": "769:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:9"
																},
																"nativeSrc": "778:13:9",
																"nodeType": "YulFunctionCall",
																"src": "778:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:9"
																},
																"nativeSrc": "800:33:9",
																"nodeType": "YulFunctionCall",
																"src": "800:33:9"
															},
															"nativeSrc": "800:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:9"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:9",
														"nodeType": "YulTypedName",
														"src": "737:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:9",
														"nodeType": "YulTypedName",
														"src": "745:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:9",
														"nodeType": "YulTypedName",
														"src": "753:5:9",
														"type": ""
													}
												],
												"src": "696:143:9"
											},
											{
												"body": {
													"nativeSrc": "956:552:9",
													"nodeType": "YulBlock",
													"src": "956:552:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1002:83:9",
																"nodeType": "YulBlock",
																"src": "1002:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1004:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "1004:77:9"
																			},
																			"nativeSrc": "1004:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1004:79:9"
																		},
																		"nativeSrc": "1004:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1004:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "977:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "977:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "986:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "986:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "973:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "973:3:9"
																		},
																		"nativeSrc": "973:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "973:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "998:2:9",
																		"nodeType": "YulLiteral",
																		"src": "998:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "969:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "969:3:9"
																},
																"nativeSrc": "969:32:9",
																"nodeType": "YulFunctionCall",
																"src": "969:32:9"
															},
															"nativeSrc": "966:119:9",
															"nodeType": "YulIf",
															"src": "966:119:9"
														},
														{
															"nativeSrc": "1095:128:9",
															"nodeType": "YulBlock",
															"src": "1095:128:9",
															"statements": [
																{
																	"nativeSrc": "1110:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1110:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1124:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1124:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1114:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1114:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1139:74:9",
																	"nodeType": "YulAssignment",
																	"src": "1139:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1185:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1185:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1196:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1196:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1181:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1181:3:9"
																				},
																				"nativeSrc": "1181:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1181:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1205:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1205:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1149:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "1149:31:9"
																		},
																		"nativeSrc": "1149:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1149:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1139:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1139:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1233:129:9",
															"nodeType": "YulBlock",
															"src": "1233:129:9",
															"statements": [
																{
																	"nativeSrc": "1248:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1248:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1262:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1262:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1252:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1252:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1278:74:9",
																	"nodeType": "YulAssignment",
																	"src": "1278:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1324:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1324:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1335:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1335:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1320:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1320:3:9"
																				},
																				"nativeSrc": "1320:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1320:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1344:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1344:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1288:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "1288:31:9"
																		},
																		"nativeSrc": "1288:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1288:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1278:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1278:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1372:129:9",
															"nodeType": "YulBlock",
															"src": "1372:129:9",
															"statements": [
																{
																	"nativeSrc": "1387:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1387:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1401:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1401:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1391:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1391:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1417:74:9",
																	"nodeType": "YulAssignment",
																	"src": "1417:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1463:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1463:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1474:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1474:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1459:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1459:3:9"
																				},
																				"nativeSrc": "1459:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1459:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1483:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1483:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1427:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "1427:31:9"
																		},
																		"nativeSrc": "1427:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1427:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1417:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1417:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
												"nativeSrc": "845:663:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "910:9:9",
														"nodeType": "YulTypedName",
														"src": "910:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "921:7:9",
														"nodeType": "YulTypedName",
														"src": "921:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "933:6:9",
														"nodeType": "YulTypedName",
														"src": "933:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "941:6:9",
														"nodeType": "YulTypedName",
														"src": "941:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "949:6:9",
														"nodeType": "YulTypedName",
														"src": "949:6:9",
														"type": ""
													}
												],
												"src": "845:663:9"
											},
											{
												"body": {
													"nativeSrc": "1579:53:9",
													"nodeType": "YulBlock",
													"src": "1579:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1596:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1596:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1619:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1619:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1601:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "1601:17:9"
																		},
																		"nativeSrc": "1601:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1589:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:9"
																},
																"nativeSrc": "1589:37:9",
																"nodeType": "YulFunctionCall",
																"src": "1589:37:9"
															},
															"nativeSrc": "1589:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "1589:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1514:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1567:5:9",
														"nodeType": "YulTypedName",
														"src": "1567:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1574:3:9",
														"nodeType": "YulTypedName",
														"src": "1574:3:9",
														"type": ""
													}
												],
												"src": "1514:118:9"
											},
											{
												"body": {
													"nativeSrc": "1736:124:9",
													"nodeType": "YulBlock",
													"src": "1736:124:9",
													"statements": [
														{
															"nativeSrc": "1746:26:9",
															"nodeType": "YulAssignment",
															"src": "1746:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1758:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1758:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1769:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1769:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1754:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1754:3:9"
																},
																"nativeSrc": "1754:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1754:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1746:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1746:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1826:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1826:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1839:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1839:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1850:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1850:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1835:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1835:3:9"
																		},
																		"nativeSrc": "1835:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1835:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1782:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "1782:43:9"
																},
																"nativeSrc": "1782:71:9",
																"nodeType": "YulFunctionCall",
																"src": "1782:71:9"
															},
															"nativeSrc": "1782:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "1782:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1638:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1708:9:9",
														"nodeType": "YulTypedName",
														"src": "1708:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1720:6:9",
														"nodeType": "YulTypedName",
														"src": "1720:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1731:4:9",
														"nodeType": "YulTypedName",
														"src": "1731:4:9",
														"type": ""
													}
												],
												"src": "1638:222:9"
											},
											{
												"body": {
													"nativeSrc": "1962:73:9",
													"nodeType": "YulBlock",
													"src": "1962:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1979:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1979:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1984:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1984:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1972:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1972:6:9"
																},
																"nativeSrc": "1972:19:9",
																"nodeType": "YulFunctionCall",
																"src": "1972:19:9"
															},
															"nativeSrc": "1972:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "1972:19:9"
														},
														{
															"nativeSrc": "2000:29:9",
															"nodeType": "YulAssignment",
															"src": "2000:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2019:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2019:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2024:4:9",
																		"nodeType": "YulLiteral",
																		"src": "2024:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2015:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2015:3:9"
																},
																"nativeSrc": "2015:14:9",
																"nodeType": "YulFunctionCall",
																"src": "2015:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2000:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "2000:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1866:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1934:3:9",
														"nodeType": "YulTypedName",
														"src": "1934:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1939:6:9",
														"nodeType": "YulTypedName",
														"src": "1939:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1950:11:9",
														"nodeType": "YulTypedName",
														"src": "1950:11:9",
														"type": ""
													}
												],
												"src": "1866:169:9"
											},
											{
												"body": {
													"nativeSrc": "2147:65:9",
													"nodeType": "YulBlock",
													"src": "2147:65:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2169:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2169:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2177:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2177:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2165:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2165:3:9"
																		},
																		"nativeSrc": "2165:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2165:14:9"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e2061646472657373",
																		"kind": "string",
																		"nativeSrc": "2181:23:9",
																		"nodeType": "YulLiteral",
																		"src": "2181:23:9",
																		"type": "",
																		"value": "Invalid token address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2158:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2158:6:9"
																},
																"nativeSrc": "2158:47:9",
																"nodeType": "YulFunctionCall",
																"src": "2158:47:9"
															},
															"nativeSrc": "2158:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "2158:47:9"
														}
													]
												},
												"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
												"nativeSrc": "2041:171:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2139:6:9",
														"nodeType": "YulTypedName",
														"src": "2139:6:9",
														"type": ""
													}
												],
												"src": "2041:171:9"
											},
											{
												"body": {
													"nativeSrc": "2364:220:9",
													"nodeType": "YulBlock",
													"src": "2364:220:9",
													"statements": [
														{
															"nativeSrc": "2374:74:9",
															"nodeType": "YulAssignment",
															"src": "2374:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2440:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2440:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2445:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2445:2:9",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2381:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "2381:58:9"
																},
																"nativeSrc": "2381:67:9",
																"nodeType": "YulFunctionCall",
																"src": "2381:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2374:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2374:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2546:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2546:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																	"nativeSrc": "2457:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "2457:88:9"
																},
																"nativeSrc": "2457:93:9",
																"nodeType": "YulFunctionCall",
																"src": "2457:93:9"
															},
															"nativeSrc": "2457:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "2457:93:9"
														},
														{
															"nativeSrc": "2559:19:9",
															"nodeType": "YulAssignment",
															"src": "2559:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2570:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2570:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2575:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2575:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2566:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2566:3:9"
																},
																"nativeSrc": "2566:12:9",
																"nodeType": "YulFunctionCall",
																"src": "2566:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2559:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2559:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2218:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2352:3:9",
														"nodeType": "YulTypedName",
														"src": "2352:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2360:3:9",
														"nodeType": "YulTypedName",
														"src": "2360:3:9",
														"type": ""
													}
												],
												"src": "2218:366:9"
											},
											{
												"body": {
													"nativeSrc": "2761:248:9",
													"nodeType": "YulBlock",
													"src": "2761:248:9",
													"statements": [
														{
															"nativeSrc": "2771:26:9",
															"nodeType": "YulAssignment",
															"src": "2771:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2783:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2783:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2794:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2794:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2779:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2779:3:9"
																},
																"nativeSrc": "2779:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2779:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2771:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2771:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2818:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2818:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2829:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2829:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2814:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2814:3:9"
																		},
																		"nativeSrc": "2814:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2814:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2837:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "2837:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2843:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2843:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2833:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2833:3:9"
																		},
																		"nativeSrc": "2833:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2833:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2807:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2807:6:9"
																},
																"nativeSrc": "2807:47:9",
																"nodeType": "YulFunctionCall",
																"src": "2807:47:9"
															},
															"nativeSrc": "2807:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "2807:47:9"
														},
														{
															"nativeSrc": "2863:139:9",
															"nodeType": "YulAssignment",
															"src": "2863:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2997:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2997:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2871:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "2871:124:9"
																},
																"nativeSrc": "2871:131:9",
																"nodeType": "YulFunctionCall",
																"src": "2871:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2863:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2863:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2590:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2741:9:9",
														"nodeType": "YulTypedName",
														"src": "2741:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2756:4:9",
														"nodeType": "YulTypedName",
														"src": "2756:4:9",
														"type": ""
													}
												],
												"src": "2590:419:9"
											},
											{
												"body": {
													"nativeSrc": "3121:68:9",
													"nodeType": "YulBlock",
													"src": "3121:68:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3143:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3143:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3151:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3151:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3139:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3139:3:9"
																		},
																		"nativeSrc": "3139:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3139:14:9"
																	},
																	{
																		"hexValue": "496e76616c69642074726561737572792061646472657373",
																		"kind": "string",
																		"nativeSrc": "3155:26:9",
																		"nodeType": "YulLiteral",
																		"src": "3155:26:9",
																		"type": "",
																		"value": "Invalid treasury address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3132:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3132:6:9"
																},
																"nativeSrc": "3132:50:9",
																"nodeType": "YulFunctionCall",
																"src": "3132:50:9"
															},
															"nativeSrc": "3132:50:9",
															"nodeType": "YulExpressionStatement",
															"src": "3132:50:9"
														}
													]
												},
												"name": "store_literal_in_memory_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f",
												"nativeSrc": "3015:174:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3113:6:9",
														"nodeType": "YulTypedName",
														"src": "3113:6:9",
														"type": ""
													}
												],
												"src": "3015:174:9"
											},
											{
												"body": {
													"nativeSrc": "3341:220:9",
													"nodeType": "YulBlock",
													"src": "3341:220:9",
													"statements": [
														{
															"nativeSrc": "3351:74:9",
															"nodeType": "YulAssignment",
															"src": "3351:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3417:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3417:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3422:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3422:2:9",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3358:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "3358:58:9"
																},
																"nativeSrc": "3358:67:9",
																"nodeType": "YulFunctionCall",
																"src": "3358:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3351:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3351:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3523:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3523:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f",
																	"nativeSrc": "3434:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "3434:88:9"
																},
																"nativeSrc": "3434:93:9",
																"nodeType": "YulFunctionCall",
																"src": "3434:93:9"
															},
															"nativeSrc": "3434:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "3434:93:9"
														},
														{
															"nativeSrc": "3536:19:9",
															"nodeType": "YulAssignment",
															"src": "3536:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3547:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3547:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3552:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3552:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3543:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3543:3:9"
																},
																"nativeSrc": "3543:12:9",
																"nodeType": "YulFunctionCall",
																"src": "3543:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3536:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3536:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3195:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3329:3:9",
														"nodeType": "YulTypedName",
														"src": "3329:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3337:3:9",
														"nodeType": "YulTypedName",
														"src": "3337:3:9",
														"type": ""
													}
												],
												"src": "3195:366:9"
											},
											{
												"body": {
													"nativeSrc": "3738:248:9",
													"nodeType": "YulBlock",
													"src": "3738:248:9",
													"statements": [
														{
															"nativeSrc": "3748:26:9",
															"nodeType": "YulAssignment",
															"src": "3748:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3760:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3760:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3771:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3771:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3756:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3756:3:9"
																},
																"nativeSrc": "3756:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3756:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3748:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3748:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3795:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3795:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3806:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3806:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3791:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3791:3:9"
																		},
																		"nativeSrc": "3791:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3791:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3814:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "3814:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3820:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3820:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3810:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:9"
																		},
																		"nativeSrc": "3810:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3784:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3784:6:9"
																},
																"nativeSrc": "3784:47:9",
																"nodeType": "YulFunctionCall",
																"src": "3784:47:9"
															},
															"nativeSrc": "3784:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "3784:47:9"
														},
														{
															"nativeSrc": "3840:139:9",
															"nodeType": "YulAssignment",
															"src": "3840:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3974:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3974:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3848:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "3848:124:9"
																},
																"nativeSrc": "3848:131:9",
																"nodeType": "YulFunctionCall",
																"src": "3848:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3840:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3840:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3567:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3718:9:9",
														"nodeType": "YulTypedName",
														"src": "3718:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3733:4:9",
														"nodeType": "YulTypedName",
														"src": "3733:4:9",
														"type": ""
													}
												],
												"src": "3567:419:9"
											},
											{
												"body": {
													"nativeSrc": "4020:152:9",
													"nodeType": "YulBlock",
													"src": "4020:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4037:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4037:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4040:77:9",
																		"nodeType": "YulLiteral",
																		"src": "4040:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4030:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4030:6:9"
																},
																"nativeSrc": "4030:88:9",
																"nodeType": "YulFunctionCall",
																"src": "4030:88:9"
															},
															"nativeSrc": "4030:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "4030:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4134:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4134:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4137:4:9",
																		"nodeType": "YulLiteral",
																		"src": "4137:4:9",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4127:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4127:6:9"
																},
																"nativeSrc": "4127:15:9",
																"nodeType": "YulFunctionCall",
																"src": "4127:15:9"
															},
															"nativeSrc": "4127:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "4127:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4158:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4158:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4161:4:9",
																		"nodeType": "YulLiteral",
																		"src": "4161:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4151:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4151:6:9"
																},
																"nativeSrc": "4151:15:9",
																"nodeType": "YulFunctionCall",
																"src": "4151:15:9"
															},
															"nativeSrc": "4151:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "4151:15:9"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "3992:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "3992:180:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid token address\")\n\n    }\n\n    function abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid treasury address\")\n\n    }\n\n    function abi_encode_t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051612bed380380612bed833981810160405281019061003191906104b2565b825f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100999190610511565b60405180910390fd5b6100b18161039360201b60201c565b50600180819055505f60025f6101000a81548160ff0219169083151502179055505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610140576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013790610584565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a5906105ec565b60405180910390fd5b81600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506a7c13bc4b2c133c5600000060065f8060048111156102515761025061060a565b5b60048111156102635761026261060a565b5b81526020019081526020015f20819055506acecb8f27f4200f3a00000060065f600160048111156102975761029661060a565b5b60048111156102a9576102a861060a565b5b81526020019081526020015f20819055506a295be96e6406697200000060065f600260048111156102dd576102dc61060a565b5b60048111156102ef576102ee61060a565b5b81526020019081526020015f20819055506aa56fa5b99019a5c800000060065f600360048111156103235761032261060a565b5b60048111156103355761033461060a565b5b81526020019081526020015f20819055506aa56fa5b99019a5c800000060065f6004808111156103685761036761060a565b5b600481111561037a5761037961060a565b5b81526020019081526020015f2081905550505050610637565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61048182610458565b9050919050565b61049181610477565b811461049b575f80fd5b50565b5f815190506104ac81610488565b92915050565b5f805f606084860312156104c9576104c8610454565b5b5f6104d68682870161049e565b93505060206104e78682870161049e565b92505060406104f88682870161049e565b9150509250925092565b61050b81610477565b82525050565b5f6020820190506105245f830184610502565b92915050565b5f82825260208201905092915050565b7f496e76616c696420746f6b656e206164647265737300000000000000000000005f82015250565b5f61056e60158361052a565b91506105798261053a565b602082019050919050565b5f6020820190508181035f83015261059b81610562565b9050919050565b7f496e76616c6964207472656173757279206164647265737300000000000000005f82015250565b5f6105d660188361052a565b91506105e1826105a2565b602082019050919050565b5f6020820190508181035f830152610603816105ca565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b6125a9806106445f395ff3fe608060405234801561000f575f80fd5b506004361061011f575f3560e01c80637f51bb1f116100ab578063c741d92f1161006f578063c741d92f146102ed578063eac449d91461030b578063f2fde38b14610327578063fc0c546a14610343578063fc76977f146103615761011f565b80637f51bb1f146102425780638456cb591461025e5780638da5cb5b14610268578063a9bb5c4c14610286578063bed9757e146102b65761011f565b806345626bd6116100f257806345626bd6146101a95780634f86f440146101e05780635c975abb146101fc57806361d027b31461021a578063715018a6146102385761011f565b806302f622d21461012357806337bdc99b146101535780633f4ba83a1461016f578063406a99af14610179575b5f80fd5b61013d6004803603810190610138919061193f565b610391565b60405161014a9190611982565b60405180910390f35b61016d600480360381019061016891906119c5565b6103a6565b005b6101776106d1565b005b610193600480360381019061018e919061193f565b6106e3565b6040516101a09190611982565b60405180910390f35b6101c360048036038101906101be9190611a4a565b6106f8565b6040516101d7989796959493929190611aa2565b60405180910390f35b6101fa60048036038101906101f59190611b48565b61076f565b005b610204610d6a565b6040516102119190611bf9565b60405180910390f35b610222610d7f565b60405161022f9190611c21565b60405180910390f35b610240610da4565b005b61025c60048036038101906102579190611c3a565b610db7565b005b610266610ef0565b005b610270610f02565b60405161027d9190611c21565b60405180910390f35b6102a0600480360381019061029b9190611c3a565b610f29565b6040516102ad9190611982565b60405180910390f35b6102d060048036038101906102cb9190611a4a565b610f3e565b6040516102e4989796959493929190611aa2565b60405180910390f35b6102f5611065565b6040516103029190611982565b60405180910390f35b61032560048036038101906103209190611a4a565b61106b565b005b610341600480360381019061033c9190611c3a565b6113cb565b005b61034b61144f565b6040516103589190611cc0565b60405180910390f35b61037b60048036038101906103769190611a4a565b611475565b6040516103889190611982565b60405180910390f35b6005602052805f5260405f205f915090505481565b6103ae611571565b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2082815481106103fe576103fd611cd9565b5b905f5260205f20906007020190505f815f015411610451576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044890611d60565b60405180910390fd5b8060060160019054906101000a900460ff16156104a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049a90611dc8565b60405180910390fd5b5f61052982604051806101000160405290815f82015481526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015f9054906101000a900460ff161515151581526020016006820160019054906101000a900460ff1615151515815250506115b7565b90505f82600101548261053c9190611e13565b90505f8111610580576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057790611e90565b60405180910390fd5b8083600101546105909190611eae565b8360010181905550600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016105f5929190611ee1565b6020604051808303815f875af1158015610611573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106359190611f1c565b610674576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066b90611f91565b60405180910390fd5b833373ffffffffffffffffffffffffffffffffffffffff167fc5c52c2a9175470464d5ea4429889e7df2ea88630a3d32f4d0d3d2d448656210836040516106bb9190611982565b60405180910390a35050506106ce61167c565b50565b6106d9611685565b6106e161170c565b565b6006602052805f5260405f205f915090505481565b6003602052815f5260405f208181548110610711575f80fd5b905f5260205f2090600702015f9150915050805f015490806001015490806002015490806003015490806004015490806005015490806006015f9054906101000a900460ff16908060060160019054906101000a900460ff16905088565b610777611685565b5f73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16036107e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107dc90611ff9565b60405180910390fd5b5f8611610827576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081e90612061565b60405180910390fd5b5f8411610869576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610860906120c9565b60405180910390fd5b5f82116108ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a290612131565b60405180910390fd5b828410156108ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e590612199565b60405180910390fd5b42851015610931576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092890612201565b60405180910390fd5b60065f8860048111156109475761094661221f565b5b60048111156109595761095861221f565b5b81526020019081526020015f20548660055f8a600481111561097e5761097d61221f565b5b60048111156109905761098f61221f565b5b81526020019081526020015f20546109a89190611eae565b11156109e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e090612296565b60405180910390fd5b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330896040518463ffffffff1660e01b8152600401610a48939291906122b4565b6020604051808303815f875af1158015610a64573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a889190611f1c565b610ac7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abe90611f91565b60405180910390fd5b60035f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518061010001604052808881526020015f815260200187815260200186815260200185815260200184815260200183151581526020015f1515815250908060018154018082558091505060019003905f5260205f2090600702015f909190919091505f820151815f01556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015f6101000a81548160ff02191690831515021790555060e08201518160060160016101000a81548160ff021916908315150217905550505060045f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f815480929190610c30906122e9565b919050555060075f815480929190610c47906122e9565b91905055508560055f896004811115610c6357610c6261221f565b5b6004811115610c7557610c7461221f565b5b81526020019081526020015f2054610c8d9190611eae565b60055f896004811115610ca357610ca261221f565b5b6004811115610cb557610cb461221f565b5b81526020019081526020015f2081905550600160045f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610d109190611e13565b8873ffffffffffffffffffffffffffffffffffffffff167f95b841d5d108f82fdbc6acd22e5cc30bf7a7c9ddb0ddfb615d3ee5adc61b09678989604051610d58929190612376565b60405180910390a35050505050505050565b5f60025f9054906101000a900460ff16905090565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610dac611685565b610db55f61176d565b565b610dbf611685565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e24906123e7565b60405180910390fd5b5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f4ab5be82436d353e61ca18726e984e561f5c1cc7c6d38b29d2553c790434705a60405160405180910390a35050565b610ef8611685565b610f0061182e565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6004602052805f5260405f205f915090505481565b5f805f805f805f805f60035f8c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208a81548110610f9657610f95611cd9565b5b905f5260205f209060070201604051806101000160405290815f82015481526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015f9054906101000a900460ff161515151581526020016006820160019054906101000a900460ff1615151515815250509050805f015181602001518260400151836060015184608001518560a001518660c001518760e0015198509850985098509850985098509850509295985092959890939650565b60075481565b611073611685565b5f60035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2082815481106110c3576110c2611cd9565b5b905f5260205f20906007020190505f815f015411611116576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110d90611d60565b60405180910390fd5b806006015f9054906101000a900460ff16611166576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115d9061244f565b60405180910390fd5b8060060160019054906101000a900460ff16156111b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111af906124b7565b60405180910390fd5b5f61123e82604051806101000160405290815f82015481526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015f9054906101000a900460ff161515151581526020016006820160019054906101000a900460ff1615151515815250506115b7565b90505f81835f01546112509190611e13565b905060018360060160016101000a81548160ff0219169083151502179055505f81111561137557600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b81526004016112f5929190611ee1565b6020604051808303815f875af1158015611311573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113359190611f1c565b611374576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136b90611f91565b60405180910390fd5b5b838573ffffffffffffffffffffffffffffffffffffffff167f5369437781e041afe7013c48748bcb5985473926a60448846c64d514908aa8fc836040516113bc9190611982565b60405180910390a35050505050565b6113d3611685565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611443575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161143a9190611c21565b60405180910390fd5b61144c8161176d565b50565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8060035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2083815481106114c6576114c5611cd9565b5b905f5260205f209060070201604051806101000160405290815f82015481526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015f9054906101000a900460ff161515151581526020016006820160019054906101000a900460ff1615151515815250509050806020015161155e826115b7565b6115689190611e13565b91505092915050565b6002600154036115ad576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600181905550565b5f81604001514210156115cc575f9050611677565b816080015182604001516115e09190611eae565b4210156115ef575f9050611677565b816060015182604001516116039190611eae565b421061161457815f01519050611677565b5f8260400151426116259190611e13565b90505f8360a0015190505f818361163c9190612502565b90505f828261164b9190612532565b90505f866060015182885f01516116629190612532565b61166c9190612502565b905080955050505050505b919050565b60018081905550565b61168d611890565b73ffffffffffffffffffffffffffffffffffffffff166116ab610f02565b73ffffffffffffffffffffffffffffffffffffffff161461170a576116ce611890565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016117019190611c21565b60405180910390fd5b565b611714611897565b5f60025f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611756611890565b6040516117639190611c21565b60405180910390a1565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6118366118d7565b600160025f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611879611890565b6040516118869190611c21565b60405180910390a1565b5f33905090565b61189f610d6a565b6118d5576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6118df610d6a565b15611916576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f80fd5b60058110611928575f80fd5b50565b5f813590506119398161191c565b92915050565b5f6020828403121561195457611953611918565b5b5f6119618482850161192b565b91505092915050565b5f819050919050565b61197c8161196a565b82525050565b5f6020820190506119955f830184611973565b92915050565b6119a48161196a565b81146119ae575f80fd5b50565b5f813590506119bf8161199b565b92915050565b5f602082840312156119da576119d9611918565b5b5f6119e7848285016119b1565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611a19826119f0565b9050919050565b611a2981611a0f565b8114611a33575f80fd5b50565b5f81359050611a4481611a20565b92915050565b5f8060408385031215611a6057611a5f611918565b5b5f611a6d85828601611a36565b9250506020611a7e858286016119b1565b9150509250929050565b5f8115159050919050565b611a9c81611a88565b82525050565b5f61010082019050611ab65f83018b611973565b611ac3602083018a611973565b611ad06040830189611973565b611add6060830188611973565b611aea6080830187611973565b611af760a0830186611973565b611b0460c0830185611a93565b611b1160e0830184611a93565b9998505050505050505050565b611b2781611a88565b8114611b31575f80fd5b50565b5f81359050611b4281611b1e565b92915050565b5f805f805f805f80610100898b031215611b6557611b64611918565b5b5f611b728b828c01611a36565b9850506020611b838b828c0161192b565b9750506040611b948b828c016119b1565b9650506060611ba58b828c016119b1565b9550506080611bb68b828c016119b1565b94505060a0611bc78b828c016119b1565b93505060c0611bd88b828c016119b1565b92505060e0611be98b828c01611b34565b9150509295985092959890939650565b5f602082019050611c0c5f830184611a93565b92915050565b611c1b81611a0f565b82525050565b5f602082019050611c345f830184611c12565b92915050565b5f60208284031215611c4f57611c4e611918565b5b5f611c5c84828501611a36565b91505092915050565b5f819050919050565b5f611c88611c83611c7e846119f0565b611c65565b6119f0565b9050919050565b5f611c9982611c6e565b9050919050565b5f611caa82611c8f565b9050919050565b611cba81611ca0565b82525050565b5f602082019050611cd35f830184611cb1565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82825260208201905092915050565b7f4e6f2073756368207363686564756c65000000000000000000000000000000005f82015250565b5f611d4a601083611d06565b9150611d5582611d16565b602082019050919050565b5f6020820190508181035f830152611d7781611d3e565b9050919050565b7f5363686564756c65207265766f6b6564000000000000000000000000000000005f82015250565b5f611db2601083611d06565b9150611dbd82611d7e565b602082019050919050565b5f6020820190508181035f830152611ddf81611da6565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611e1d8261196a565b9150611e288361196a565b9250828203905081811115611e4057611e3f611de6565b5b92915050565b7f4e6f20746f6b656e7320746f2072656c656173650000000000000000000000005f82015250565b5f611e7a601483611d06565b9150611e8582611e46565b602082019050919050565b5f6020820190508181035f830152611ea781611e6e565b9050919050565b5f611eb88261196a565b9150611ec38361196a565b9250828201905080821115611edb57611eda611de6565b5b92915050565b5f604082019050611ef45f830185611c12565b611f016020830184611973565b9392505050565b5f81519050611f1681611b1e565b92915050565b5f60208284031215611f3157611f30611918565b5b5f611f3e84828501611f08565b91505092915050565b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f611f7b600f83611d06565b9150611f8682611f47565b602082019050919050565b5f6020820190508181035f830152611fa881611f6f565b9050919050565b7f496e76616c69642062656e6566696369617279000000000000000000000000005f82015250565b5f611fe3601383611d06565b9150611fee82611faf565b602082019050919050565b5f6020820190508181035f83015261201081611fd7565b9050919050565b7f416d6f756e74206d757374206265203e203000000000000000000000000000005f82015250565b5f61204b601283611d06565b915061205682612017565b602082019050919050565b5f6020820190508181035f8301526120788161203f565b9050919050565b7f4475726174696f6e206d757374206265203e20300000000000000000000000005f82015250565b5f6120b3601483611d06565b91506120be8261207f565b602082019050919050565b5f6020820190508181035f8301526120e0816120a7565b9050919050565b7f536c69636520706572696f64206d757374206265203e203000000000000000005f82015250565b5f61211b601883611d06565b9150612126826120e7565b602082019050919050565b5f6020820190508181035f8301526121488161210f565b9050919050565b7f496e76616c696420636c696666000000000000000000000000000000000000005f82015250565b5f612183600d83611d06565b915061218e8261214f565b602082019050919050565b5f6020820190508181035f8301526121b081612177565b9050919050565b7f53746172742074696d65203c206e6f77000000000000000000000000000000005f82015250565b5f6121eb601083611d06565b91506121f6826121b7565b602082019050919050565b5f6020820190508181035f830152612218816121df565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b7f45786365656473206d61782076657374696e67000000000000000000000000005f82015250565b5f612280601383611d06565b915061228b8261224c565b602082019050919050565b5f6020820190508181035f8301526122ad81612274565b9050919050565b5f6060820190506122c75f830186611c12565b6122d46020830185611c12565b6122e16040830184611973565b949350505050565b5f6122f38261196a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361232557612324611de6565b5b600182019050919050565b600581106123415761234061221f565b5b50565b5f81905061235182612330565b919050565b5f61236082612344565b9050919050565b61237081612356565b82525050565b5f6040820190506123895f830185612367565b6123966020830184611973565b9392505050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f6123d1600f83611d06565b91506123dc8261239d565b602082019050919050565b5f6020820190508181035f8301526123fe816123c5565b9050919050565b7f4e6f74207265766f6361626c65000000000000000000000000000000000000005f82015250565b5f612439600d83611d06565b915061244482612405565b602082019050919050565b5f6020820190508181035f8301526124668161242d565b9050919050565b7f416c7265616479207265766f6b656400000000000000000000000000000000005f82015250565b5f6124a1600f83611d06565b91506124ac8261246d565b602082019050919050565b5f6020820190508181035f8301526124ce81612495565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61250c8261196a565b91506125178361196a565b925082612527576125266124d5565b5b828204905092915050565b5f61253c8261196a565b91506125478361196a565b92508282026125558161196a565b9150828204841483151761256c5761256b611de6565b5b509291505056fea2646970667358221220a1bc69375d4019d8e9697e4eb7089a62746138c0abf55022d0c54d3997eda08264736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2BED CODESIZE SUB DUP1 PUSH2 0x2BED DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x4B2 JUMP JUMPDEST DUP3 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x511 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0x393 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x140 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x137 SWAP1 PUSH2 0x584 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A5 SWAP1 PUSH2 0x5EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH11 0x7C13BC4B2C133C56000000 PUSH1 0x6 PUSH0 DUP1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x251 JUMPI PUSH2 0x250 PUSH2 0x60A JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x263 JUMPI PUSH2 0x262 PUSH2 0x60A JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH11 0xCECB8F27F4200F3A000000 PUSH1 0x6 PUSH0 PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x297 JUMPI PUSH2 0x296 PUSH2 0x60A JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2A9 JUMPI PUSH2 0x2A8 PUSH2 0x60A JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH11 0x295BE96E64066972000000 PUSH1 0x6 PUSH0 PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2DD JUMPI PUSH2 0x2DC PUSH2 0x60A JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2EF JUMPI PUSH2 0x2EE PUSH2 0x60A JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH11 0xA56FA5B99019A5C8000000 PUSH1 0x6 PUSH0 PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x323 JUMPI PUSH2 0x322 PUSH2 0x60A JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x335 JUMPI PUSH2 0x334 PUSH2 0x60A JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH11 0xA56FA5B99019A5C8000000 PUSH1 0x6 PUSH0 PUSH1 0x4 DUP1 DUP2 GT ISZERO PUSH2 0x368 JUMPI PUSH2 0x367 PUSH2 0x60A JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x37A JUMPI PUSH2 0x379 PUSH2 0x60A JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP PUSH2 0x637 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x481 DUP3 PUSH2 0x458 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x491 DUP2 PUSH2 0x477 JUMP JUMPDEST DUP2 EQ PUSH2 0x49B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x4AC DUP2 PUSH2 0x488 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4C9 JUMPI PUSH2 0x4C8 PUSH2 0x454 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4D6 DUP7 DUP3 DUP8 ADD PUSH2 0x49E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x4E7 DUP7 DUP3 DUP8 ADD PUSH2 0x49E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x4F8 DUP7 DUP3 DUP8 ADD PUSH2 0x49E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x50B DUP2 PUSH2 0x477 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x524 PUSH0 DUP4 ADD DUP5 PUSH2 0x502 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x56E PUSH1 0x15 DUP4 PUSH2 0x52A JUMP JUMPDEST SWAP2 POP PUSH2 0x579 DUP3 PUSH2 0x53A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x59B DUP2 PUSH2 0x562 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420747265617375727920616464726573730000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5D6 PUSH1 0x18 DUP4 PUSH2 0x52A JUMP JUMPDEST SWAP2 POP PUSH2 0x5E1 DUP3 PUSH2 0x5A2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x603 DUP2 PUSH2 0x5CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x25A9 DUP1 PUSH2 0x644 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7F51BB1F GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xC741D92F GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC741D92F EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0xEAC449D9 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0xFC76977F EQ PUSH2 0x361 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x7F51BB1F EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0xA9BB5C4C EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0xBED9757E EQ PUSH2 0x2B6 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x45626BD6 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x45626BD6 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x4F86F440 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x238 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x2F622D2 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x37BDC99B EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x406A99AF EQ PUSH2 0x179 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH2 0x391 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x19C5 JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x177 PUSH2 0x6D1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH2 0x6E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x1A4A JUMP JUMPDEST PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D7 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x1B48 JUMP JUMPDEST PUSH2 0x76F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x204 PUSH2 0xD6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x1BF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x222 PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x240 PUSH2 0xDA4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x1C3A JUMP JUMPDEST PUSH2 0xDB7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x266 PUSH2 0xEF0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x270 PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x1C3A JUMP JUMPDEST PUSH2 0xF29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x1A4A JUMP JUMPDEST PUSH2 0xF3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E4 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH2 0x1065 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x325 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x1A4A JUMP JUMPDEST PUSH2 0x106B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x341 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x1C3A JUMP JUMPDEST PUSH2 0x13CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34B PUSH2 0x144F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x1CC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x1A4A JUMP JUMPDEST PUSH2 0x1475 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x388 SWAP2 SWAP1 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3AE PUSH2 0x1571 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3FE JUMPI PUSH2 0x3FD PUSH2 0x1CD9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD GT PUSH2 0x451 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x448 SWAP1 PUSH2 0x1D60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x4A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49A SWAP1 PUSH2 0x1DC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x529 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP PUSH2 0x15B7 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x1 ADD SLOAD DUP3 PUSH2 0x53C SWAP2 SWAP1 PUSH2 0x1E13 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x580 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x577 SWAP1 PUSH2 0x1E90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x590 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST DUP4 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F5 SWAP3 SWAP2 SWAP1 PUSH2 0x1EE1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x611 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x635 SWAP2 SWAP1 PUSH2 0x1F1C JUMP JUMPDEST PUSH2 0x674 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66B SWAP1 PUSH2 0x1F91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC5C52C2A9175470464D5EA4429889E7DF2EA88630A3D32F4D0D3D2D448656210 DUP4 PUSH1 0x40 MLOAD PUSH2 0x6BB SWAP2 SWAP1 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP PUSH2 0x6CE PUSH2 0x167C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x6D9 PUSH2 0x1685 JUMP JUMPDEST PUSH2 0x6E1 PUSH2 0x170C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x711 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP9 JUMP JUMPDEST PUSH2 0x777 PUSH2 0x1685 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DC SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP7 GT PUSH2 0x827 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x81E SWAP1 PUSH2 0x2061 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 GT PUSH2 0x869 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x860 SWAP1 PUSH2 0x20C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x8AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A2 SWAP1 PUSH2 0x2131 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x8EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E5 SWAP1 PUSH2 0x2199 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP6 LT ISZERO PUSH2 0x931 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x928 SWAP1 PUSH2 0x2201 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 DUP9 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x947 JUMPI PUSH2 0x946 PUSH2 0x221F JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x959 JUMPI PUSH2 0x958 PUSH2 0x221F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP7 PUSH1 0x5 PUSH0 DUP11 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x97E JUMPI PUSH2 0x97D PUSH2 0x221F JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x990 JUMPI PUSH2 0x98F PUSH2 0x221F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x9A8 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST GT ISZERO PUSH2 0x9E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E0 SWAP1 PUSH2 0x2296 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP10 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA48 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22B4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA64 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA88 SWAP2 SWAP1 PUSH2 0x1F1C JUMP JUMPDEST PUSH2 0xAC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABE SWAP1 PUSH2 0x1F91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x4 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xC30 SWAP1 PUSH2 0x22E9 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x7 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xC47 SWAP1 PUSH2 0x22E9 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP6 PUSH1 0x5 PUSH0 DUP10 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xC63 JUMPI PUSH2 0xC62 PUSH2 0x221F JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xC75 JUMPI PUSH2 0xC74 PUSH2 0x221F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xC8D SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x5 PUSH0 DUP10 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xCA3 JUMPI PUSH2 0xCA2 PUSH2 0x221F JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xCB5 JUMPI PUSH2 0xCB4 PUSH2 0x221F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x4 PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xD10 SWAP2 SWAP1 PUSH2 0x1E13 JUMP JUMPDEST DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x95B841D5D108F82FDBC6ACD22E5CC30BF7A7C9DDB0DDFB615D3EE5ADC61B0967 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0xD58 SWAP3 SWAP2 SWAP1 PUSH2 0x2376 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xDAC PUSH2 0x1685 JUMP JUMPDEST PUSH2 0xDB5 PUSH0 PUSH2 0x176D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xDBF PUSH2 0x1685 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE2D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE24 SWAP1 PUSH2 0x23E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4AB5BE82436D353E61CA18726E984E561F5C1CC7C6D38B29D2553C790434705A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xEF8 PUSH2 0x1685 JUMP JUMPDEST PUSH2 0xF00 PUSH2 0x182E JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x3 PUSH0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP11 DUP2 SLOAD DUP2 LT PUSH2 0xF96 JUMPI PUSH2 0xF95 PUSH2 0x1CD9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH0 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x80 ADD MLOAD DUP6 PUSH1 0xA0 ADD MLOAD DUP7 PUSH1 0xC0 ADD MLOAD DUP8 PUSH1 0xE0 ADD MLOAD SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1073 PUSH2 0x1685 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10C3 JUMPI PUSH2 0x10C2 PUSH2 0x1CD9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD GT PUSH2 0x1116 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110D SWAP1 PUSH2 0x1D60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1166 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115D SWAP1 PUSH2 0x244F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x11B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11AF SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x123E DUP3 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP PUSH2 0x15B7 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH0 ADD SLOAD PUSH2 0x1250 SWAP2 SWAP1 PUSH2 0x1E13 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP4 PUSH1 0x6 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 DUP2 GT ISZERO PUSH2 0x1375 JUMPI PUSH1 0x2 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F5 SWAP3 SWAP2 SWAP1 PUSH2 0x1EE1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1311 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1335 SWAP2 SWAP1 PUSH2 0x1F1C JUMP JUMPDEST PUSH2 0x1374 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x136B SWAP1 PUSH2 0x1F91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5369437781E041AFE7013C48748BCB5985473926A60448846C64D514908AA8FC DUP4 PUSH1 0x40 MLOAD PUSH2 0x13BC SWAP2 SWAP1 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x13D3 PUSH2 0x1685 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1443 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x143A SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x144C DUP2 PUSH2 0x176D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x14C6 JUMPI PUSH2 0x14C5 PUSH2 0x1CD9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH2 0x155E DUP3 PUSH2 0x15B7 JUMP JUMPDEST PUSH2 0x1568 SWAP2 SWAP1 PUSH2 0x1E13 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x15AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x40 ADD MLOAD TIMESTAMP LT ISZERO PUSH2 0x15CC JUMPI PUSH0 SWAP1 POP PUSH2 0x1677 JUMP JUMPDEST DUP2 PUSH1 0x80 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x15E0 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x15EF JUMPI PUSH0 SWAP1 POP PUSH2 0x1677 JUMP JUMPDEST DUP2 PUSH1 0x60 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x1603 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST TIMESTAMP LT PUSH2 0x1614 JUMPI DUP2 PUSH0 ADD MLOAD SWAP1 POP PUSH2 0x1677 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x40 ADD MLOAD TIMESTAMP PUSH2 0x1625 SWAP2 SWAP1 PUSH2 0x1E13 JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH1 0xA0 ADD MLOAD SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0x163C SWAP2 SWAP1 PUSH2 0x2502 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 DUP3 PUSH2 0x164B SWAP2 SWAP1 PUSH2 0x2532 JUMP JUMPDEST SWAP1 POP PUSH0 DUP7 PUSH1 0x60 ADD MLOAD DUP3 DUP9 PUSH0 ADD MLOAD PUSH2 0x1662 SWAP2 SWAP1 PUSH2 0x2532 JUMP JUMPDEST PUSH2 0x166C SWAP2 SWAP1 PUSH2 0x2502 JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x168D PUSH2 0x1890 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16AB PUSH2 0xF02 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x170A JUMPI PUSH2 0x16CE PUSH2 0x1890 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1701 SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1714 PUSH2 0x1897 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1756 PUSH2 0x1890 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1763 SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1836 PUSH2 0x18D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1879 PUSH2 0x1890 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1886 SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x189F PUSH2 0xD6A JUMP JUMPDEST PUSH2 0x18D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x18DF PUSH2 0xD6A JUMP JUMPDEST ISZERO PUSH2 0x1916 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x1928 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1939 DUP2 PUSH2 0x191C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1954 JUMPI PUSH2 0x1953 PUSH2 0x1918 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1961 DUP5 DUP3 DUP6 ADD PUSH2 0x192B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x197C DUP2 PUSH2 0x196A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1995 PUSH0 DUP4 ADD DUP5 PUSH2 0x1973 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19A4 DUP2 PUSH2 0x196A JUMP JUMPDEST DUP2 EQ PUSH2 0x19AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19BF DUP2 PUSH2 0x199B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19DA JUMPI PUSH2 0x19D9 PUSH2 0x1918 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19E7 DUP5 DUP3 DUP6 ADD PUSH2 0x19B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A19 DUP3 PUSH2 0x19F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A29 DUP2 PUSH2 0x1A0F JUMP JUMPDEST DUP2 EQ PUSH2 0x1A33 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A44 DUP2 PUSH2 0x1A20 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A60 JUMPI PUSH2 0x1A5F PUSH2 0x1918 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A6D DUP6 DUP3 DUP7 ADD PUSH2 0x1A36 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A7E DUP6 DUP3 DUP7 ADD PUSH2 0x19B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A9C DUP2 PUSH2 0x1A88 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x1AB6 PUSH0 DUP4 ADD DUP12 PUSH2 0x1973 JUMP JUMPDEST PUSH2 0x1AC3 PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x1973 JUMP JUMPDEST PUSH2 0x1AD0 PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x1973 JUMP JUMPDEST PUSH2 0x1ADD PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x1973 JUMP JUMPDEST PUSH2 0x1AEA PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x1973 JUMP JUMPDEST PUSH2 0x1AF7 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x1973 JUMP JUMPDEST PUSH2 0x1B04 PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x1A93 JUMP JUMPDEST PUSH2 0x1B11 PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x1A93 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1B27 DUP2 PUSH2 0x1A88 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B31 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B42 DUP2 PUSH2 0x1B1E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x1B65 JUMPI PUSH2 0x1B64 PUSH2 0x1918 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B72 DUP12 DUP3 DUP13 ADD PUSH2 0x1A36 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x1B83 DUP12 DUP3 DUP13 ADD PUSH2 0x192B JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x1B94 DUP12 DUP3 DUP13 ADD PUSH2 0x19B1 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x1BA5 DUP12 DUP3 DUP13 ADD PUSH2 0x19B1 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0x1BB6 DUP12 DUP3 DUP13 ADD PUSH2 0x19B1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH2 0x1BC7 DUP12 DUP3 DUP13 ADD PUSH2 0x19B1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 PUSH2 0x1BD8 DUP12 DUP3 DUP13 ADD PUSH2 0x19B1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xE0 PUSH2 0x1BE9 DUP12 DUP3 DUP13 ADD PUSH2 0x1B34 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C0C PUSH0 DUP4 ADD DUP5 PUSH2 0x1A93 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C1B DUP2 PUSH2 0x1A0F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C34 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C12 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C4F JUMPI PUSH2 0x1C4E PUSH2 0x1918 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C5C DUP5 DUP3 DUP6 ADD PUSH2 0x1A36 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C88 PUSH2 0x1C83 PUSH2 0x1C7E DUP5 PUSH2 0x19F0 JUMP JUMPDEST PUSH2 0x1C65 JUMP JUMPDEST PUSH2 0x19F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C99 DUP3 PUSH2 0x1C6E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CAA DUP3 PUSH2 0x1C8F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CBA DUP2 PUSH2 0x1CA0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CD3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1CB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F2073756368207363686564756C6500000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D4A PUSH1 0x10 DUP4 PUSH2 0x1D06 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D55 DUP3 PUSH2 0x1D16 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D77 DUP2 PUSH2 0x1D3E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5363686564756C65207265766F6B656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DB2 PUSH1 0x10 DUP4 PUSH2 0x1D06 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DBD DUP3 PUSH2 0x1D7E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DDF DUP2 PUSH2 0x1DA6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1E1D DUP3 PUSH2 0x196A JUMP JUMPDEST SWAP2 POP PUSH2 0x1E28 DUP4 PUSH2 0x196A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1E40 JUMPI PUSH2 0x1E3F PUSH2 0x1DE6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320746F2072656C65617365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E7A PUSH1 0x14 DUP4 PUSH2 0x1D06 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E85 DUP3 PUSH2 0x1E46 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EA7 DUP2 PUSH2 0x1E6E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EB8 DUP3 PUSH2 0x196A JUMP JUMPDEST SWAP2 POP PUSH2 0x1EC3 DUP4 PUSH2 0x196A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1EDB JUMPI PUSH2 0x1EDA PUSH2 0x1DE6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1EF4 PUSH0 DUP4 ADD DUP6 PUSH2 0x1C12 JUMP JUMPDEST PUSH2 0x1F01 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1973 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F16 DUP2 PUSH2 0x1B1E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F31 JUMPI PUSH2 0x1F30 PUSH2 0x1918 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F3E DUP5 DUP3 DUP6 ADD PUSH2 0x1F08 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F7B PUSH1 0xF DUP4 PUSH2 0x1D06 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F86 DUP3 PUSH2 0x1F47 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FA8 DUP2 PUSH2 0x1F6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642062656E656669636961727900000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FE3 PUSH1 0x13 DUP4 PUSH2 0x1D06 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FEE DUP3 PUSH2 0x1FAF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2010 DUP2 PUSH2 0x1FD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D757374206265203E20300000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x204B PUSH1 0x12 DUP4 PUSH2 0x1D06 JUMP JUMPDEST SWAP2 POP PUSH2 0x2056 DUP3 PUSH2 0x2017 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2078 DUP2 PUSH2 0x203F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4475726174696F6E206D757374206265203E2030000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20B3 PUSH1 0x14 DUP4 PUSH2 0x1D06 JUMP JUMPDEST SWAP2 POP PUSH2 0x20BE DUP3 PUSH2 0x207F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20E0 DUP2 PUSH2 0x20A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x536C69636520706572696F64206D757374206265203E20300000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x211B PUSH1 0x18 DUP4 PUSH2 0x1D06 JUMP JUMPDEST SWAP2 POP PUSH2 0x2126 DUP3 PUSH2 0x20E7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2148 DUP2 PUSH2 0x210F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420636C69666600000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2183 PUSH1 0xD DUP4 PUSH2 0x1D06 JUMP JUMPDEST SWAP2 POP PUSH2 0x218E DUP3 PUSH2 0x214F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21B0 DUP2 PUSH2 0x2177 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53746172742074696D65203C206E6F7700000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21EB PUSH1 0x10 DUP4 PUSH2 0x1D06 JUMP JUMPDEST SWAP2 POP PUSH2 0x21F6 DUP3 PUSH2 0x21B7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2218 DUP2 PUSH2 0x21DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x45786365656473206D61782076657374696E6700000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2280 PUSH1 0x13 DUP4 PUSH2 0x1D06 JUMP JUMPDEST SWAP2 POP PUSH2 0x228B DUP3 PUSH2 0x224C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22AD DUP2 PUSH2 0x2274 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x22C7 PUSH0 DUP4 ADD DUP7 PUSH2 0x1C12 JUMP JUMPDEST PUSH2 0x22D4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C12 JUMP JUMPDEST PUSH2 0x22E1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1973 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22F3 DUP3 PUSH2 0x196A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2325 JUMPI PUSH2 0x2324 PUSH2 0x1DE6 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x2341 JUMPI PUSH2 0x2340 PUSH2 0x221F JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x2351 DUP3 PUSH2 0x2330 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2360 DUP3 PUSH2 0x2344 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2370 DUP2 PUSH2 0x2356 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2389 PUSH0 DUP4 ADD DUP6 PUSH2 0x2367 JUMP JUMPDEST PUSH2 0x2396 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1973 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23D1 PUSH1 0xF DUP4 PUSH2 0x1D06 JUMP JUMPDEST SWAP2 POP PUSH2 0x23DC DUP3 PUSH2 0x239D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23FE DUP2 PUSH2 0x23C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F74207265766F6361626C6500000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2439 PUSH1 0xD DUP4 PUSH2 0x1D06 JUMP JUMPDEST SWAP2 POP PUSH2 0x2444 DUP3 PUSH2 0x2405 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2466 DUP2 PUSH2 0x242D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C7265616479207265766F6B65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24A1 PUSH1 0xF DUP4 PUSH2 0x1D06 JUMP JUMPDEST SWAP2 POP PUSH2 0x24AC DUP3 PUSH2 0x246D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24CE DUP2 PUSH2 0x2495 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x250C DUP3 PUSH2 0x196A JUMP JUMPDEST SWAP2 POP PUSH2 0x2517 DUP4 PUSH2 0x196A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2527 JUMPI PUSH2 0x2526 PUSH2 0x24D5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x253C DUP3 PUSH2 0x196A JUMP JUMPDEST SWAP2 POP PUSH2 0x2547 DUP4 PUSH2 0x196A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2555 DUP2 PUSH2 0x196A JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x256C JUMPI PUSH2 0x256B PUSH2 0x1DE6 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0xBC PUSH10 0x375D4019D8E9697E4EB7 ADDMOD SWAP11 PUSH3 0x746138 0xC0 0xAB CREATE2 POP 0x22 0xD0 0xC5 0x4D CODECOPY SWAP8 0xED LOG0 DUP3 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "503:9041:8:-:0;;;2637:795;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2744:12;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1857:1:5;2061:7;:21;;;;1241:5:4;1231:7;;:15;;;;;;;;;;;;;;;;;;2794:1:8::1;2776:20;;:6;:20;;::::0;2768:54:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2861:1;2840:23;;:9;:23;;::::0;2832:60:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2926:6;2911:5;;:22;;;;;;;;;;;;;;;;;;2954:9;2943:8;;:20;;;;;;;;;;;;;;;;;;3062;3024:16;:35;3041:17:::0;3024:35:::1;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:58;;;;3149:20;3106:16;:40;3123:22;3106:40;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:63;;;;3231:19;3188:16;:40;3205:22;3188:40;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:62;;;;3315:20;3269:16;:43;3286:25;3269:43;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:66;;;;3397:20;3352:16;:42;3369:24;3352:42:::0;::::1;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:65;;;;2637:795:::0;;;503:9041;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:9:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:663::-;933:6;941;949;998:2;986:9;977:7;973:23;969:32;966:119;;;1004:79;;:::i;:::-;966:119;1124:1;1149:64;1205:7;1196:6;1185:9;1181:22;1149:64;:::i;:::-;1139:74;;1095:128;1262:2;1288:64;1344:7;1335:6;1324:9;1320:22;1288:64;:::i;:::-;1278:74;;1233:129;1401:2;1427:64;1483:7;1474:6;1463:9;1459:22;1427:64;:::i;:::-;1417:74;;1372:129;845:663;;;;;:::o;1514:118::-;1601:24;1619:5;1601:24;:::i;:::-;1596:3;1589:37;1514:118;;:::o;1638:222::-;1731:4;1769:2;1758:9;1754:18;1746:26;;1782:71;1850:1;1839:9;1835:17;1826:6;1782:71;:::i;:::-;1638:222;;;;:::o;1866:169::-;1950:11;1984:6;1979:3;1972:19;2024:4;2019:3;2015:14;2000:29;;1866:169;;;;:::o;2041:171::-;2181:23;2177:1;2169:6;2165:14;2158:47;2041:171;:::o;2218:366::-;2360:3;2381:67;2445:2;2440:3;2381:67;:::i;:::-;2374:74;;2457:93;2546:3;2457:93;:::i;:::-;2575:2;2570:3;2566:12;2559:19;;2218:366;;;:::o;2590:419::-;2756:4;2794:2;2783:9;2779:18;2771:26;;2843:9;2837:4;2833:20;2829:1;2818:9;2814:17;2807:47;2871:131;2997:4;2871:131;:::i;:::-;2863:139;;2590:419;;;:::o;3015:174::-;3155:26;3151:1;3143:6;3139:14;3132:50;3015:174;:::o;3195:366::-;3337:3;3358:67;3422:2;3417:3;3358:67;:::i;:::-;3351:74;;3434:93;3523:3;3434:93;:::i;:::-;3552:2;3547:3;3543:12;3536:19;;3195:366;;;:::o;3567:419::-;3733:4;3771:2;3760:9;3756:18;3748:26;;3820:9;3814:4;3810:20;3806:1;3795:9;3791:17;3784:47;3848:131;3974:4;3848:131;:::i;:::-;3840:139;;3567:419;;;:::o;3992:180::-;4040:77;4037:1;4030:88;4137:4;4134:1;4127:15;4161:4;4158:1;4151:15;503:9041:8;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 5765,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_computeVestedAmount_4447": {
									"entryPoint": 5559,
									"id": 4447,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_237": {
									"entryPoint": 6288,
									"id": 237,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_481": {
									"entryPoint": 5756,
									"id": 481,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_473": {
									"entryPoint": 5489,
									"id": 473,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pause_407": {
									"entryPoint": 6190,
									"id": 407,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_378": {
									"entryPoint": 6359,
									"id": 378,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_391": {
									"entryPoint": 6295,
									"id": 391,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 5997,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_423": {
									"entryPoint": 5900,
									"id": 423,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@computeReleasableAmount_4524": {
									"entryPoint": 5237,
									"id": 4524,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@createVestingSchedule_4205": {
									"entryPoint": 1903,
									"id": 4205,
									"parameterSlots": 8,
									"returnSlots": 0
								},
								"@getVestingSchedule_4498": {
									"entryPoint": 3902,
									"id": 4498,
									"parameterSlots": 2,
									"returnSlots": 8
								},
								"@maxVestingByType_3927": {
									"entryPoint": 1763,
									"id": 3927,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 3842,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_4565": {
									"entryPoint": 3824,
									"id": 4565,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_366": {
									"entryPoint": 3434,
									"id": 366,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@release_4285": {
									"entryPoint": 934,
									"id": 4285,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 3492,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@revoke_4365": {
									"entryPoint": 4203,
									"id": 4365,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@token_3907": {
									"entryPoint": 5199,
									"id": 3907,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalVestedByType_3922": {
									"entryPoint": 913,
									"id": 3922,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 5067,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@treasury_3931": {
									"entryPoint": 3455,
									"id": 3931,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unpause_4574": {
									"entryPoint": 1745,
									"id": 4574,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateTreasury_4556": {
									"entryPoint": 3511,
									"id": 4556,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@vestingScheduleCount_3917": {
									"entryPoint": 3881,
									"id": 3917,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@vestingSchedulesCount_3929": {
									"entryPoint": 4197,
									"id": 3929,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@vestingSchedules_3913": {
									"entryPoint": 1784,
									"id": 3913,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 7944,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_enum$_ScheduleType_$3904": {
									"entryPoint": 6443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6577,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_enum$_ScheduleType_$3904t_uint256t_uint256t_uint256t_uint256t_uint256t_bool": {
									"entryPoint": 6984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 8
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_enum$_ScheduleType_$3904": {
									"entryPoint": 6463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6803,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack": {
									"entryPoint": 7345,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_ScheduleType_$3904_to_t_uint8_fromStack": {
									"entryPoint": 9063,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8255,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5eaaf55bf9d9f97938479748e848dd6476dc31a543a1019ebd0759947c618e8e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8671,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_64647ace897cb78bcca4304ab6d973e351886063fea5beb49e3bdcaa10dcf429_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9261,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6fe28c5722971779f2b977be3122d0195d3bb5faa8ea279e735f59ae57aaad2f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7609fdeb66ef185b0ab9b10cb3ae60da48e9f5646a1e7f7a361af9ccee074fe8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7dd278aa17797342e944a43d303dc8e5144706eff3594a9fda0ea14806aeeeaf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_86f5acfc12d2804bcf816c0b4c171086bf03352ff286fda75ac8ea27fcfb10a6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8e11b6d2923bf8c6b9080d06aaf81f8e74ef4ded2c8e4af3b95302a90884a4cd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d1c2f089122507431dd9d494d2cf4fefdf06d00288bbafa96c6a6e2065fe14eb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d4a284eb2ad24c8d181edd202519e12da1302159cff115aa7f2a0b89fe640b6b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7486,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ff30964d1d2e395450954287443a47ce4b7aeb0e55cf0d440f942617fe7e784c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9365,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8884,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7905,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed": {
									"entryPoint": 7360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_ScheduleType_$3904_t_uint256__to_t_uint8_t_uint256__fromStack_reversed": {
									"entryPoint": 9078,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8289,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8081,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5eaaf55bf9d9f97938479748e848dd6476dc31a543a1019ebd0759947c618e8e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8705,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_64647ace897cb78bcca4304ab6d973e351886063fea5beb49e3bdcaa10dcf429__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6fe28c5722971779f2b977be3122d0195d3bb5faa8ea279e735f59ae57aaad2f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8854,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7609fdeb66ef185b0ab9b10cb3ae60da48e9f5646a1e7f7a361af9ccee074fe8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7dd278aa17797342e944a43d303dc8e5144706eff3594a9fda0ea14806aeeeaf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7624,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_86f5acfc12d2804bcf816c0b4c171086bf03352ff286fda75ac8ea27fcfb10a6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8185,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8e11b6d2923bf8c6b9080d06aaf81f8e74ef4ded2c8e4af3b95302a90884a4cd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d1c2f089122507431dd9d494d2cf4fefdf06d00288bbafa96c6a6e2065fe14eb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d4a284eb2ad24c8d181edd202519e12da1302159cff115aa7f2a0b89fe640b6b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7520,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ff30964d1d2e395450954287443a47ce4b7aeb0e55cf0d440f942617fe7e784c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6530,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed": {
									"entryPoint": 6818,
									"id": null,
									"parameterSlots": 9,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7430,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9474,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6671,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_ScheduleType_$3904": {
									"entryPoint": 9028,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6640,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$225_to_t_address": {
									"entryPoint": 7328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_ScheduleType_$3904_to_t_uint8": {
									"entryPoint": 9046,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 7311,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 7278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 7269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 8937,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7654,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9429,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 8735,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7385,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6424,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb": {
									"entryPoint": 8215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226": {
									"entryPoint": 9117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914": {
									"entryPoint": 7750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51": {
									"entryPoint": 8007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5eaaf55bf9d9f97938479748e848dd6476dc31a543a1019ebd0759947c618e8e": {
									"entryPoint": 8631,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_64647ace897cb78bcca4304ab6d973e351886063fea5beb49e3bdcaa10dcf429": {
									"entryPoint": 9221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6fe28c5722971779f2b977be3122d0195d3bb5faa8ea279e735f59ae57aaad2f": {
									"entryPoint": 8780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7609fdeb66ef185b0ab9b10cb3ae60da48e9f5646a1e7f7a361af9ccee074fe8": {
									"entryPoint": 8527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7dd278aa17797342e944a43d303dc8e5144706eff3594a9fda0ea14806aeeeaf": {
									"entryPoint": 7550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_86f5acfc12d2804bcf816c0b4c171086bf03352ff286fda75ac8ea27fcfb10a6": {
									"entryPoint": 8111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8e11b6d2923bf8c6b9080d06aaf81f8e74ef4ded2c8e4af3b95302a90884a4cd": {
									"entryPoint": 8319,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d1c2f089122507431dd9d494d2cf4fefdf06d00288bbafa96c6a6e2065fe14eb": {
									"entryPoint": 8423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d4a284eb2ad24c8d181edd202519e12da1302159cff115aa7f2a0b89fe640b6b": {
									"entryPoint": 7446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ff30964d1d2e395450954287443a47ce4b7aeb0e55cf0d440f942617fe7e784c": {
									"entryPoint": 9325,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_ScheduleType_$3904": {
									"entryPoint": 9008,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_enum$_ScheduleType_$3904": {
									"entryPoint": 6428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:25669:9",
										"nodeType": "YulBlock",
										"src": "0:25669:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "394:56:9",
													"nodeType": "YulBlock",
													"src": "394:56:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "428:16:9",
																"nodeType": "YulBlock",
																"src": "428:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "437:1:9",
																					"nodeType": "YulLiteral",
																					"src": "437:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "440:1:9",
																					"nodeType": "YulLiteral",
																					"src": "440:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "430:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "430:6:9"
																			},
																			"nativeSrc": "430:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "430:12:9"
																		},
																		"nativeSrc": "430:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "430:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "417:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "417:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "424:1:9",
																				"nodeType": "YulLiteral",
																				"src": "424:1:9",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "414:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "414:2:9"
																		},
																		"nativeSrc": "414:12:9",
																		"nodeType": "YulFunctionCall",
																		"src": "414:12:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "407:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "407:6:9"
																},
																"nativeSrc": "407:20:9",
																"nodeType": "YulFunctionCall",
																"src": "407:20:9"
															},
															"nativeSrc": "404:40:9",
															"nodeType": "YulIf",
															"src": "404:40:9"
														}
													]
												},
												"name": "validator_revert_t_enum$_ScheduleType_$3904",
												"nativeSrc": "334:116:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "387:5:9",
														"nodeType": "YulTypedName",
														"src": "387:5:9",
														"type": ""
													}
												],
												"src": "334:116:9"
											},
											{
												"body": {
													"nativeSrc": "525:104:9",
													"nodeType": "YulBlock",
													"src": "525:104:9",
													"statements": [
														{
															"nativeSrc": "535:29:9",
															"nodeType": "YulAssignment",
															"src": "535:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "557:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "557:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "544:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "544:12:9"
																},
																"nativeSrc": "544:20:9",
																"nodeType": "YulFunctionCall",
																"src": "544:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "535:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "535:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "617:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "617:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_enum$_ScheduleType_$3904",
																	"nativeSrc": "573:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "573:43:9"
																},
																"nativeSrc": "573:50:9",
																"nodeType": "YulFunctionCall",
																"src": "573:50:9"
															},
															"nativeSrc": "573:50:9",
															"nodeType": "YulExpressionStatement",
															"src": "573:50:9"
														}
													]
												},
												"name": "abi_decode_t_enum$_ScheduleType_$3904",
												"nativeSrc": "456:173:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "503:6:9",
														"nodeType": "YulTypedName",
														"src": "503:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "511:3:9",
														"nodeType": "YulTypedName",
														"src": "511:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "519:5:9",
														"nodeType": "YulTypedName",
														"src": "519:5:9",
														"type": ""
													}
												],
												"src": "456:173:9"
											},
											{
												"body": {
													"nativeSrc": "718:280:9",
													"nodeType": "YulBlock",
													"src": "718:280:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "764:83:9",
																"nodeType": "YulBlock",
																"src": "764:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "766:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "766:77:9"
																			},
																			"nativeSrc": "766:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "766:79:9"
																		},
																		"nativeSrc": "766:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "766:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "739:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "739:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "748:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "748:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "735:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "735:3:9"
																		},
																		"nativeSrc": "735:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "735:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "760:2:9",
																		"nodeType": "YulLiteral",
																		"src": "760:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "731:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "731:3:9"
																},
																"nativeSrc": "731:32:9",
																"nodeType": "YulFunctionCall",
																"src": "731:32:9"
															},
															"nativeSrc": "728:119:9",
															"nodeType": "YulIf",
															"src": "728:119:9"
														},
														{
															"nativeSrc": "857:134:9",
															"nodeType": "YulBlock",
															"src": "857:134:9",
															"statements": [
																{
																	"nativeSrc": "872:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "872:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "886:1:9",
																		"nodeType": "YulLiteral",
																		"src": "886:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "876:6:9",
																			"nodeType": "YulTypedName",
																			"src": "876:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "901:80:9",
																	"nodeType": "YulAssignment",
																	"src": "901:80:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "953:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "953:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "964:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "964:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "949:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "949:3:9"
																				},
																				"nativeSrc": "949:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "949:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "973:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "973:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_ScheduleType_$3904",
																			"nativeSrc": "911:37:9",
																			"nodeType": "YulIdentifier",
																			"src": "911:37:9"
																		},
																		"nativeSrc": "911:70:9",
																		"nodeType": "YulFunctionCall",
																		"src": "911:70:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "901:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "901:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_enum$_ScheduleType_$3904",
												"nativeSrc": "635:363:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "688:9:9",
														"nodeType": "YulTypedName",
														"src": "688:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "699:7:9",
														"nodeType": "YulTypedName",
														"src": "699:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "711:6:9",
														"nodeType": "YulTypedName",
														"src": "711:6:9",
														"type": ""
													}
												],
												"src": "635:363:9"
											},
											{
												"body": {
													"nativeSrc": "1049:32:9",
													"nodeType": "YulBlock",
													"src": "1049:32:9",
													"statements": [
														{
															"nativeSrc": "1059:16:9",
															"nodeType": "YulAssignment",
															"src": "1059:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "1070:5:9",
																"nodeType": "YulIdentifier",
																"src": "1070:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1059:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1059:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1004:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1031:5:9",
														"nodeType": "YulTypedName",
														"src": "1031:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1041:7:9",
														"nodeType": "YulTypedName",
														"src": "1041:7:9",
														"type": ""
													}
												],
												"src": "1004:77:9"
											},
											{
												"body": {
													"nativeSrc": "1152:53:9",
													"nodeType": "YulBlock",
													"src": "1152:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1169:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1169:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1192:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1192:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1174:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "1174:17:9"
																		},
																		"nativeSrc": "1174:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1174:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1162:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1162:6:9"
																},
																"nativeSrc": "1162:37:9",
																"nodeType": "YulFunctionCall",
																"src": "1162:37:9"
															},
															"nativeSrc": "1162:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "1162:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1087:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1140:5:9",
														"nodeType": "YulTypedName",
														"src": "1140:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1147:3:9",
														"nodeType": "YulTypedName",
														"src": "1147:3:9",
														"type": ""
													}
												],
												"src": "1087:118:9"
											},
											{
												"body": {
													"nativeSrc": "1309:124:9",
													"nodeType": "YulBlock",
													"src": "1309:124:9",
													"statements": [
														{
															"nativeSrc": "1319:26:9",
															"nodeType": "YulAssignment",
															"src": "1319:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1331:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1331:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1342:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1342:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1327:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1327:3:9"
																},
																"nativeSrc": "1327:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1327:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1319:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1319:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1399:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1399:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1412:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1412:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1423:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1423:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1408:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1408:3:9"
																		},
																		"nativeSrc": "1408:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1408:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1355:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "1355:43:9"
																},
																"nativeSrc": "1355:71:9",
																"nodeType": "YulFunctionCall",
																"src": "1355:71:9"
															},
															"nativeSrc": "1355:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "1355:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1211:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1281:9:9",
														"nodeType": "YulTypedName",
														"src": "1281:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1293:6:9",
														"nodeType": "YulTypedName",
														"src": "1293:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1304:4:9",
														"nodeType": "YulTypedName",
														"src": "1304:4:9",
														"type": ""
													}
												],
												"src": "1211:222:9"
											},
											{
												"body": {
													"nativeSrc": "1482:79:9",
													"nodeType": "YulBlock",
													"src": "1482:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1539:16:9",
																"nodeType": "YulBlock",
																"src": "1539:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1548:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1548:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1551:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1551:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1541:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1541:6:9"
																			},
																			"nativeSrc": "1541:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1541:12:9"
																		},
																		"nativeSrc": "1541:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1541:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1505:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1505:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1530:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1530:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1512:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "1512:17:9"
																				},
																				"nativeSrc": "1512:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1512:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1502:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1502:2:9"
																		},
																		"nativeSrc": "1502:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1502:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1495:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1495:6:9"
																},
																"nativeSrc": "1495:43:9",
																"nodeType": "YulFunctionCall",
																"src": "1495:43:9"
															},
															"nativeSrc": "1492:63:9",
															"nodeType": "YulIf",
															"src": "1492:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1439:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1475:5:9",
														"nodeType": "YulTypedName",
														"src": "1475:5:9",
														"type": ""
													}
												],
												"src": "1439:122:9"
											},
											{
												"body": {
													"nativeSrc": "1619:87:9",
													"nodeType": "YulBlock",
													"src": "1619:87:9",
													"statements": [
														{
															"nativeSrc": "1629:29:9",
															"nodeType": "YulAssignment",
															"src": "1629:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1651:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1651:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1638:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "1638:12:9"
																},
																"nativeSrc": "1638:20:9",
																"nodeType": "YulFunctionCall",
																"src": "1638:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1629:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1629:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1694:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1694:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1667:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "1667:26:9"
																},
																"nativeSrc": "1667:33:9",
																"nodeType": "YulFunctionCall",
																"src": "1667:33:9"
															},
															"nativeSrc": "1667:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "1667:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1567:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1597:6:9",
														"nodeType": "YulTypedName",
														"src": "1597:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1605:3:9",
														"nodeType": "YulTypedName",
														"src": "1605:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1613:5:9",
														"nodeType": "YulTypedName",
														"src": "1613:5:9",
														"type": ""
													}
												],
												"src": "1567:139:9"
											},
											{
												"body": {
													"nativeSrc": "1778:263:9",
													"nodeType": "YulBlock",
													"src": "1778:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1824:83:9",
																"nodeType": "YulBlock",
																"src": "1824:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1826:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "1826:77:9"
																			},
																			"nativeSrc": "1826:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1826:79:9"
																		},
																		"nativeSrc": "1826:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1826:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1799:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1799:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1808:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1808:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1795:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1795:3:9"
																		},
																		"nativeSrc": "1795:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1795:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1820:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1820:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1791:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1791:3:9"
																},
																"nativeSrc": "1791:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1791:32:9"
															},
															"nativeSrc": "1788:119:9",
															"nodeType": "YulIf",
															"src": "1788:119:9"
														},
														{
															"nativeSrc": "1917:117:9",
															"nodeType": "YulBlock",
															"src": "1917:117:9",
															"statements": [
																{
																	"nativeSrc": "1932:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1932:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1946:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1946:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1936:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1936:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1961:63:9",
																	"nodeType": "YulAssignment",
																	"src": "1961:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1996:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1996:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2007:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2007:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1992:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1992:3:9"
																				},
																				"nativeSrc": "1992:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1992:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2016:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2016:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1971:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "1971:20:9"
																		},
																		"nativeSrc": "1971:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1971:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1961:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1961:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1712:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1748:9:9",
														"nodeType": "YulTypedName",
														"src": "1748:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1759:7:9",
														"nodeType": "YulTypedName",
														"src": "1759:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1771:6:9",
														"nodeType": "YulTypedName",
														"src": "1771:6:9",
														"type": ""
													}
												],
												"src": "1712:329:9"
											},
											{
												"body": {
													"nativeSrc": "2092:81:9",
													"nodeType": "YulBlock",
													"src": "2092:81:9",
													"statements": [
														{
															"nativeSrc": "2102:65:9",
															"nodeType": "YulAssignment",
															"src": "2102:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2117:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2117:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2124:42:9",
																		"nodeType": "YulLiteral",
																		"src": "2124:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2113:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2113:3:9"
																},
																"nativeSrc": "2113:54:9",
																"nodeType": "YulFunctionCall",
																"src": "2113:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2102:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2102:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2047:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2074:5:9",
														"nodeType": "YulTypedName",
														"src": "2074:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2084:7:9",
														"nodeType": "YulTypedName",
														"src": "2084:7:9",
														"type": ""
													}
												],
												"src": "2047:126:9"
											},
											{
												"body": {
													"nativeSrc": "2224:51:9",
													"nodeType": "YulBlock",
													"src": "2224:51:9",
													"statements": [
														{
															"nativeSrc": "2234:35:9",
															"nodeType": "YulAssignment",
															"src": "2234:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2263:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2263:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2245:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "2245:17:9"
																},
																"nativeSrc": "2245:24:9",
																"nodeType": "YulFunctionCall",
																"src": "2245:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2234:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2234:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2179:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2206:5:9",
														"nodeType": "YulTypedName",
														"src": "2206:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2216:7:9",
														"nodeType": "YulTypedName",
														"src": "2216:7:9",
														"type": ""
													}
												],
												"src": "2179:96:9"
											},
											{
												"body": {
													"nativeSrc": "2324:79:9",
													"nodeType": "YulBlock",
													"src": "2324:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2381:16:9",
																"nodeType": "YulBlock",
																"src": "2381:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2390:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2390:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2393:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2393:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2383:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2383:6:9"
																			},
																			"nativeSrc": "2383:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2383:12:9"
																		},
																		"nativeSrc": "2383:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2383:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2347:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2347:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2372:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2372:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2354:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2354:17:9"
																				},
																				"nativeSrc": "2354:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2354:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2344:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2344:2:9"
																		},
																		"nativeSrc": "2344:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2344:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2337:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2337:6:9"
																},
																"nativeSrc": "2337:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2337:43:9"
															},
															"nativeSrc": "2334:63:9",
															"nodeType": "YulIf",
															"src": "2334:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2281:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2317:5:9",
														"nodeType": "YulTypedName",
														"src": "2317:5:9",
														"type": ""
													}
												],
												"src": "2281:122:9"
											},
											{
												"body": {
													"nativeSrc": "2461:87:9",
													"nodeType": "YulBlock",
													"src": "2461:87:9",
													"statements": [
														{
															"nativeSrc": "2471:29:9",
															"nodeType": "YulAssignment",
															"src": "2471:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2493:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2493:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2480:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2480:12:9"
																},
																"nativeSrc": "2480:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2480:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2471:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2471:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2536:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2536:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2509:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2509:26:9"
																},
																"nativeSrc": "2509:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2509:33:9"
															},
															"nativeSrc": "2509:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2509:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2409:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2439:6:9",
														"nodeType": "YulTypedName",
														"src": "2439:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2447:3:9",
														"nodeType": "YulTypedName",
														"src": "2447:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2455:5:9",
														"nodeType": "YulTypedName",
														"src": "2455:5:9",
														"type": ""
													}
												],
												"src": "2409:139:9"
											},
											{
												"body": {
													"nativeSrc": "2637:391:9",
													"nodeType": "YulBlock",
													"src": "2637:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2683:83:9",
																"nodeType": "YulBlock",
																"src": "2683:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2685:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2685:77:9"
																			},
																			"nativeSrc": "2685:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2685:79:9"
																		},
																		"nativeSrc": "2685:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2685:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2658:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2658:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2667:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2667:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2654:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2654:3:9"
																		},
																		"nativeSrc": "2654:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2654:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2679:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2679:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2650:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2650:3:9"
																},
																"nativeSrc": "2650:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2650:32:9"
															},
															"nativeSrc": "2647:119:9",
															"nodeType": "YulIf",
															"src": "2647:119:9"
														},
														{
															"nativeSrc": "2776:117:9",
															"nodeType": "YulBlock",
															"src": "2776:117:9",
															"statements": [
																{
																	"nativeSrc": "2791:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2791:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2805:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2805:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2795:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2795:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2820:63:9",
																	"nodeType": "YulAssignment",
																	"src": "2820:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2855:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2855:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2866:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2866:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2851:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2851:3:9"
																				},
																				"nativeSrc": "2851:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2851:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2875:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2875:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2830:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "2830:20:9"
																		},
																		"nativeSrc": "2830:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2830:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2820:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2820:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2903:118:9",
															"nodeType": "YulBlock",
															"src": "2903:118:9",
															"statements": [
																{
																	"nativeSrc": "2918:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2918:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2932:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2932:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2922:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2922:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2948:63:9",
																	"nodeType": "YulAssignment",
																	"src": "2948:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2983:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2983:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2994:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2994:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2979:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2979:3:9"
																				},
																				"nativeSrc": "2979:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2979:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3003:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3003:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2958:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "2958:20:9"
																		},
																		"nativeSrc": "2958:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2958:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2948:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2948:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2554:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2599:9:9",
														"nodeType": "YulTypedName",
														"src": "2599:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2610:7:9",
														"nodeType": "YulTypedName",
														"src": "2610:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2622:6:9",
														"nodeType": "YulTypedName",
														"src": "2622:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2630:6:9",
														"nodeType": "YulTypedName",
														"src": "2630:6:9",
														"type": ""
													}
												],
												"src": "2554:474:9"
											},
											{
												"body": {
													"nativeSrc": "3076:48:9",
													"nodeType": "YulBlock",
													"src": "3076:48:9",
													"statements": [
														{
															"nativeSrc": "3086:32:9",
															"nodeType": "YulAssignment",
															"src": "3086:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3111:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3111:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3104:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3104:6:9"
																		},
																		"nativeSrc": "3104:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3104:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3097:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3097:6:9"
																},
																"nativeSrc": "3097:21:9",
																"nodeType": "YulFunctionCall",
																"src": "3097:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3086:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "3086:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3034:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3058:5:9",
														"nodeType": "YulTypedName",
														"src": "3058:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3068:7:9",
														"nodeType": "YulTypedName",
														"src": "3068:7:9",
														"type": ""
													}
												],
												"src": "3034:90:9"
											},
											{
												"body": {
													"nativeSrc": "3189:50:9",
													"nodeType": "YulBlock",
													"src": "3189:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3206:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3206:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3226:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3226:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3211:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "3211:14:9"
																		},
																		"nativeSrc": "3211:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3211:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3199:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3199:6:9"
																},
																"nativeSrc": "3199:34:9",
																"nodeType": "YulFunctionCall",
																"src": "3199:34:9"
															},
															"nativeSrc": "3199:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "3199:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3130:109:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3177:5:9",
														"nodeType": "YulTypedName",
														"src": "3177:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3184:3:9",
														"nodeType": "YulTypedName",
														"src": "3184:3:9",
														"type": ""
													}
												],
												"src": "3130:109:9"
											},
											{
												"body": {
													"nativeSrc": "3527:691:9",
													"nodeType": "YulBlock",
													"src": "3527:691:9",
													"statements": [
														{
															"nativeSrc": "3537:27:9",
															"nodeType": "YulAssignment",
															"src": "3537:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3549:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3549:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3560:3:9",
																		"nodeType": "YulLiteral",
																		"src": "3560:3:9",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3545:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3545:3:9"
																},
																"nativeSrc": "3545:19:9",
																"nodeType": "YulFunctionCall",
																"src": "3545:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3537:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3537:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3618:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3618:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3631:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3631:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3642:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3642:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3627:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3627:3:9"
																		},
																		"nativeSrc": "3627:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3627:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3574:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "3574:43:9"
																},
																"nativeSrc": "3574:71:9",
																"nodeType": "YulFunctionCall",
																"src": "3574:71:9"
															},
															"nativeSrc": "3574:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "3574:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3699:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3699:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3712:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3712:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3723:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3723:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3708:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3708:3:9"
																		},
																		"nativeSrc": "3708:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3708:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3655:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "3655:43:9"
																},
																"nativeSrc": "3655:72:9",
																"nodeType": "YulFunctionCall",
																"src": "3655:72:9"
															},
															"nativeSrc": "3655:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "3655:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "3781:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3781:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3794:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3794:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3805:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3805:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3790:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3790:3:9"
																		},
																		"nativeSrc": "3790:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3790:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3737:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "3737:43:9"
																},
																"nativeSrc": "3737:72:9",
																"nodeType": "YulFunctionCall",
																"src": "3737:72:9"
															},
															"nativeSrc": "3737:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "3737:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "3863:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3863:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3876:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3876:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3887:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3887:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3872:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3872:3:9"
																		},
																		"nativeSrc": "3872:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3872:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3819:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "3819:43:9"
																},
																"nativeSrc": "3819:72:9",
																"nodeType": "YulFunctionCall",
																"src": "3819:72:9"
															},
															"nativeSrc": "3819:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "3819:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "3945:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3945:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3958:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3958:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3969:3:9",
																				"nodeType": "YulLiteral",
																				"src": "3969:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3954:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3954:3:9"
																		},
																		"nativeSrc": "3954:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3954:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3901:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "3901:43:9"
																},
																"nativeSrc": "3901:73:9",
																"nodeType": "YulFunctionCall",
																"src": "3901:73:9"
															},
															"nativeSrc": "3901:73:9",
															"nodeType": "YulExpressionStatement",
															"src": "3901:73:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "4028:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4028:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4041:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4041:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4052:3:9",
																				"nodeType": "YulLiteral",
																				"src": "4052:3:9",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4037:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4037:3:9"
																		},
																		"nativeSrc": "4037:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4037:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3984:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "3984:43:9"
																},
																"nativeSrc": "3984:73:9",
																"nodeType": "YulFunctionCall",
																"src": "3984:73:9"
															},
															"nativeSrc": "3984:73:9",
															"nodeType": "YulExpressionStatement",
															"src": "3984:73:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "4105:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4105:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4118:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4118:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4129:3:9",
																				"nodeType": "YulLiteral",
																				"src": "4129:3:9",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4114:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4114:3:9"
																		},
																		"nativeSrc": "4114:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4114:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "4067:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "4067:37:9"
																},
																"nativeSrc": "4067:67:9",
																"nodeType": "YulFunctionCall",
																"src": "4067:67:9"
															},
															"nativeSrc": "4067:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "4067:67:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value7",
																		"nativeSrc": "4182:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4182:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4195:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4195:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4206:3:9",
																				"nodeType": "YulLiteral",
																				"src": "4206:3:9",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4191:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4191:3:9"
																		},
																		"nativeSrc": "4191:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4191:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "4144:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "4144:37:9"
																},
																"nativeSrc": "4144:67:9",
																"nodeType": "YulFunctionCall",
																"src": "4144:67:9"
															},
															"nativeSrc": "4144:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "4144:67:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed",
												"nativeSrc": "3245:973:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3443:9:9",
														"nodeType": "YulTypedName",
														"src": "3443:9:9",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "3455:6:9",
														"nodeType": "YulTypedName",
														"src": "3455:6:9",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "3463:6:9",
														"nodeType": "YulTypedName",
														"src": "3463:6:9",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "3471:6:9",
														"nodeType": "YulTypedName",
														"src": "3471:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3479:6:9",
														"nodeType": "YulTypedName",
														"src": "3479:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3487:6:9",
														"nodeType": "YulTypedName",
														"src": "3487:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3495:6:9",
														"nodeType": "YulTypedName",
														"src": "3495:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3503:6:9",
														"nodeType": "YulTypedName",
														"src": "3503:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3511:6:9",
														"nodeType": "YulTypedName",
														"src": "3511:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3522:4:9",
														"nodeType": "YulTypedName",
														"src": "3522:4:9",
														"type": ""
													}
												],
												"src": "3245:973:9"
											},
											{
												"body": {
													"nativeSrc": "4264:76:9",
													"nodeType": "YulBlock",
													"src": "4264:76:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4318:16:9",
																"nodeType": "YulBlock",
																"src": "4318:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4327:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4327:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4330:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4330:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4320:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4320:6:9"
																			},
																			"nativeSrc": "4320:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4320:12:9"
																		},
																		"nativeSrc": "4320:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4320:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4287:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4287:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4309:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "4309:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "4294:14:9",
																					"nodeType": "YulIdentifier",
																					"src": "4294:14:9"
																				},
																				"nativeSrc": "4294:21:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4294:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4284:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "4284:2:9"
																		},
																		"nativeSrc": "4284:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4284:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4277:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4277:6:9"
																},
																"nativeSrc": "4277:40:9",
																"nodeType": "YulFunctionCall",
																"src": "4277:40:9"
															},
															"nativeSrc": "4274:60:9",
															"nodeType": "YulIf",
															"src": "4274:60:9"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "4224:116:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4257:5:9",
														"nodeType": "YulTypedName",
														"src": "4257:5:9",
														"type": ""
													}
												],
												"src": "4224:116:9"
											},
											{
												"body": {
													"nativeSrc": "4395:84:9",
													"nodeType": "YulBlock",
													"src": "4395:84:9",
													"statements": [
														{
															"nativeSrc": "4405:29:9",
															"nodeType": "YulAssignment",
															"src": "4405:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4427:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4427:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4414:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "4414:12:9"
																},
																"nativeSrc": "4414:20:9",
																"nodeType": "YulFunctionCall",
																"src": "4414:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4405:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "4405:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4467:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4467:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "4443:23:9",
																	"nodeType": "YulIdentifier",
																	"src": "4443:23:9"
																},
																"nativeSrc": "4443:30:9",
																"nodeType": "YulFunctionCall",
																"src": "4443:30:9"
															},
															"nativeSrc": "4443:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "4443:30:9"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "4346:133:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4373:6:9",
														"nodeType": "YulTypedName",
														"src": "4373:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4381:3:9",
														"nodeType": "YulTypedName",
														"src": "4381:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4389:5:9",
														"nodeType": "YulTypedName",
														"src": "4389:5:9",
														"type": ""
													}
												],
												"src": "4346:133:9"
											},
											{
												"body": {
													"nativeSrc": "4684:1178:9",
													"nodeType": "YulBlock",
													"src": "4684:1178:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4731:83:9",
																"nodeType": "YulBlock",
																"src": "4731:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4733:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "4733:77:9"
																			},
																			"nativeSrc": "4733:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4733:79:9"
																		},
																		"nativeSrc": "4733:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4733:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4705:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4705:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4714:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4714:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4701:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4701:3:9"
																		},
																		"nativeSrc": "4701:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4701:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4726:3:9",
																		"nodeType": "YulLiteral",
																		"src": "4726:3:9",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4697:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4697:3:9"
																},
																"nativeSrc": "4697:33:9",
																"nodeType": "YulFunctionCall",
																"src": "4697:33:9"
															},
															"nativeSrc": "4694:120:9",
															"nodeType": "YulIf",
															"src": "4694:120:9"
														},
														{
															"nativeSrc": "4824:117:9",
															"nodeType": "YulBlock",
															"src": "4824:117:9",
															"statements": [
																{
																	"nativeSrc": "4839:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4839:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4853:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4853:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4843:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4843:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4868:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4868:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4903:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4903:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4914:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4914:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4899:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4899:3:9"
																				},
																				"nativeSrc": "4899:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4899:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4923:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4923:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4878:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4878:20:9"
																		},
																		"nativeSrc": "4878:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4878:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4868:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4868:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4951:135:9",
															"nodeType": "YulBlock",
															"src": "4951:135:9",
															"statements": [
																{
																	"nativeSrc": "4966:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4980:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4996:80:9",
																	"nodeType": "YulAssignment",
																	"src": "4996:80:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5048:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5048:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5059:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5059:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5044:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5044:3:9"
																				},
																				"nativeSrc": "5044:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5044:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5068:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5068:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_ScheduleType_$3904",
																			"nativeSrc": "5006:37:9",
																			"nodeType": "YulIdentifier",
																			"src": "5006:37:9"
																		},
																		"nativeSrc": "5006:70:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5006:70:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4996:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4996:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5096:118:9",
															"nodeType": "YulBlock",
															"src": "5096:118:9",
															"statements": [
																{
																	"nativeSrc": "5111:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5111:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5125:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5125:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5115:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5115:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5141:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5141:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5176:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5176:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5187:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5187:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5172:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5172:3:9"
																				},
																				"nativeSrc": "5172:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5172:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5196:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5196:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5151:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5151:20:9"
																		},
																		"nativeSrc": "5151:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5151:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5141:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5141:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5224:118:9",
															"nodeType": "YulBlock",
															"src": "5224:118:9",
															"statements": [
																{
																	"nativeSrc": "5239:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5239:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5253:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5253:2:9",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5243:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5243:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5269:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5269:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5304:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5304:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5315:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5315:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5300:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5300:3:9"
																				},
																				"nativeSrc": "5300:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5300:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5324:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5324:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5279:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5279:20:9"
																		},
																		"nativeSrc": "5279:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5279:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "5269:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5269:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5352:119:9",
															"nodeType": "YulBlock",
															"src": "5352:119:9",
															"statements": [
																{
																	"nativeSrc": "5367:17:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5367:17:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5381:3:9",
																		"nodeType": "YulLiteral",
																		"src": "5381:3:9",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5371:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5371:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5398:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5398:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5433:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5433:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5444:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5444:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5429:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5429:3:9"
																				},
																				"nativeSrc": "5429:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5429:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5453:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5453:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5408:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5408:20:9"
																		},
																		"nativeSrc": "5408:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5408:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "5398:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5398:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5481:119:9",
															"nodeType": "YulBlock",
															"src": "5481:119:9",
															"statements": [
																{
																	"nativeSrc": "5496:17:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5496:17:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5510:3:9",
																		"nodeType": "YulLiteral",
																		"src": "5510:3:9",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5500:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5500:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5527:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5527:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5562:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5562:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5573:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5573:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5558:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5558:3:9"
																				},
																				"nativeSrc": "5558:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5558:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5582:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5582:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5537:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5537:20:9"
																		},
																		"nativeSrc": "5537:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5537:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "5527:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5527:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5610:119:9",
															"nodeType": "YulBlock",
															"src": "5610:119:9",
															"statements": [
																{
																	"nativeSrc": "5625:17:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5625:17:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5639:3:9",
																		"nodeType": "YulLiteral",
																		"src": "5639:3:9",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5629:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5629:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5656:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5656:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5691:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5691:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5702:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5702:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5687:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5687:3:9"
																				},
																				"nativeSrc": "5687:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5687:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5711:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5711:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5666:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5666:20:9"
																		},
																		"nativeSrc": "5666:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5666:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "5656:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5656:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5739:116:9",
															"nodeType": "YulBlock",
															"src": "5739:116:9",
															"statements": [
																{
																	"nativeSrc": "5754:17:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5754:17:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5768:3:9",
																		"nodeType": "YulLiteral",
																		"src": "5768:3:9",
																		"type": "",
																		"value": "224"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5758:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5758:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5785:60:9",
																	"nodeType": "YulAssignment",
																	"src": "5785:60:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5817:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5817:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5828:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5828:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5813:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5813:3:9"
																				},
																				"nativeSrc": "5813:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5813:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5837:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5837:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "5795:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "5795:17:9"
																		},
																		"nativeSrc": "5795:50:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5795:50:9"
																	},
																	"variableNames": [
																		{
																			"name": "value7",
																			"nativeSrc": "5785:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5785:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_enum$_ScheduleType_$3904t_uint256t_uint256t_uint256t_uint256t_uint256t_bool",
												"nativeSrc": "4485:1377:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4598:9:9",
														"nodeType": "YulTypedName",
														"src": "4598:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4609:7:9",
														"nodeType": "YulTypedName",
														"src": "4609:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4621:6:9",
														"nodeType": "YulTypedName",
														"src": "4621:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4629:6:9",
														"nodeType": "YulTypedName",
														"src": "4629:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4637:6:9",
														"nodeType": "YulTypedName",
														"src": "4637:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4645:6:9",
														"nodeType": "YulTypedName",
														"src": "4645:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4653:6:9",
														"nodeType": "YulTypedName",
														"src": "4653:6:9",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "4661:6:9",
														"nodeType": "YulTypedName",
														"src": "4661:6:9",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "4669:6:9",
														"nodeType": "YulTypedName",
														"src": "4669:6:9",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "4677:6:9",
														"nodeType": "YulTypedName",
														"src": "4677:6:9",
														"type": ""
													}
												],
												"src": "4485:1377:9"
											},
											{
												"body": {
													"nativeSrc": "5960:118:9",
													"nodeType": "YulBlock",
													"src": "5960:118:9",
													"statements": [
														{
															"nativeSrc": "5970:26:9",
															"nodeType": "YulAssignment",
															"src": "5970:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5982:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5982:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5993:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5993:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5978:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5978:3:9"
																},
																"nativeSrc": "5978:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5978:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5970:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5970:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6044:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6044:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6057:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6057:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6068:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6068:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6053:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6053:3:9"
																		},
																		"nativeSrc": "6053:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6053:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "6006:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "6006:37:9"
																},
																"nativeSrc": "6006:65:9",
																"nodeType": "YulFunctionCall",
																"src": "6006:65:9"
															},
															"nativeSrc": "6006:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "6006:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "5868:210:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5932:9:9",
														"nodeType": "YulTypedName",
														"src": "5932:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5944:6:9",
														"nodeType": "YulTypedName",
														"src": "5944:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5955:4:9",
														"nodeType": "YulTypedName",
														"src": "5955:4:9",
														"type": ""
													}
												],
												"src": "5868:210:9"
											},
											{
												"body": {
													"nativeSrc": "6149:53:9",
													"nodeType": "YulBlock",
													"src": "6149:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6166:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6166:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6189:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6189:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6171:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "6171:17:9"
																		},
																		"nativeSrc": "6171:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6171:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6159:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6159:6:9"
																},
																"nativeSrc": "6159:37:9",
																"nodeType": "YulFunctionCall",
																"src": "6159:37:9"
															},
															"nativeSrc": "6159:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "6159:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6084:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6137:5:9",
														"nodeType": "YulTypedName",
														"src": "6137:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6144:3:9",
														"nodeType": "YulTypedName",
														"src": "6144:3:9",
														"type": ""
													}
												],
												"src": "6084:118:9"
											},
											{
												"body": {
													"nativeSrc": "6306:124:9",
													"nodeType": "YulBlock",
													"src": "6306:124:9",
													"statements": [
														{
															"nativeSrc": "6316:26:9",
															"nodeType": "YulAssignment",
															"src": "6316:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6328:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6328:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6339:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6339:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6324:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6324:3:9"
																},
																"nativeSrc": "6324:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6324:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6316:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6316:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6396:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6396:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6409:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6409:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6420:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6420:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6405:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6405:3:9"
																		},
																		"nativeSrc": "6405:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6405:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6352:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6352:43:9"
																},
																"nativeSrc": "6352:71:9",
																"nodeType": "YulFunctionCall",
																"src": "6352:71:9"
															},
															"nativeSrc": "6352:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "6352:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6208:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6278:9:9",
														"nodeType": "YulTypedName",
														"src": "6278:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6290:6:9",
														"nodeType": "YulTypedName",
														"src": "6290:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6301:4:9",
														"nodeType": "YulTypedName",
														"src": "6301:4:9",
														"type": ""
													}
												],
												"src": "6208:222:9"
											},
											{
												"body": {
													"nativeSrc": "6502:263:9",
													"nodeType": "YulBlock",
													"src": "6502:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6548:83:9",
																"nodeType": "YulBlock",
																"src": "6548:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6550:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "6550:77:9"
																			},
																			"nativeSrc": "6550:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6550:79:9"
																		},
																		"nativeSrc": "6550:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6550:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6523:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6523:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6532:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6532:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6519:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6519:3:9"
																		},
																		"nativeSrc": "6519:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6519:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6544:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6544:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6515:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6515:3:9"
																},
																"nativeSrc": "6515:32:9",
																"nodeType": "YulFunctionCall",
																"src": "6515:32:9"
															},
															"nativeSrc": "6512:119:9",
															"nodeType": "YulIf",
															"src": "6512:119:9"
														},
														{
															"nativeSrc": "6641:117:9",
															"nodeType": "YulBlock",
															"src": "6641:117:9",
															"statements": [
																{
																	"nativeSrc": "6656:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6656:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6670:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6670:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6660:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6660:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6685:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6685:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6720:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6720:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6731:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6731:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6716:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6716:3:9"
																				},
																				"nativeSrc": "6716:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6716:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6740:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6740:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6695:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6695:20:9"
																		},
																		"nativeSrc": "6695:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6695:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6685:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6685:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "6436:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6472:9:9",
														"nodeType": "YulTypedName",
														"src": "6472:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6483:7:9",
														"nodeType": "YulTypedName",
														"src": "6483:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6495:6:9",
														"nodeType": "YulTypedName",
														"src": "6495:6:9",
														"type": ""
													}
												],
												"src": "6436:329:9"
											},
											{
												"body": {
													"nativeSrc": "6803:28:9",
													"nodeType": "YulBlock",
													"src": "6803:28:9",
													"statements": [
														{
															"nativeSrc": "6813:12:9",
															"nodeType": "YulAssignment",
															"src": "6813:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "6820:5:9",
																"nodeType": "YulIdentifier",
																"src": "6820:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6813:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6813:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "6771:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6789:5:9",
														"nodeType": "YulTypedName",
														"src": "6789:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6799:3:9",
														"nodeType": "YulTypedName",
														"src": "6799:3:9",
														"type": ""
													}
												],
												"src": "6771:60:9"
											},
											{
												"body": {
													"nativeSrc": "6897:82:9",
													"nodeType": "YulBlock",
													"src": "6897:82:9",
													"statements": [
														{
															"nativeSrc": "6907:66:9",
															"nodeType": "YulAssignment",
															"src": "6907:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6965:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "6965:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "6947:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "6947:17:9"
																				},
																				"nativeSrc": "6947:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6947:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "6938:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "6938:8:9"
																		},
																		"nativeSrc": "6938:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6938:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "6920:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "6920:17:9"
																},
																"nativeSrc": "6920:53:9",
																"nodeType": "YulFunctionCall",
																"src": "6920:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6907:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "6907:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "6837:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6877:5:9",
														"nodeType": "YulTypedName",
														"src": "6877:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6887:9:9",
														"nodeType": "YulTypedName",
														"src": "6887:9:9",
														"type": ""
													}
												],
												"src": "6837:142:9"
											},
											{
												"body": {
													"nativeSrc": "7045:66:9",
													"nodeType": "YulBlock",
													"src": "7045:66:9",
													"statements": [
														{
															"nativeSrc": "7055:50:9",
															"nodeType": "YulAssignment",
															"src": "7055:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7099:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "7099:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "7068:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "7068:30:9"
																},
																"nativeSrc": "7068:37:9",
																"nodeType": "YulFunctionCall",
																"src": "7068:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7055:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "7055:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "6985:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7025:5:9",
														"nodeType": "YulTypedName",
														"src": "7025:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7035:9:9",
														"nodeType": "YulTypedName",
														"src": "7035:9:9",
														"type": ""
													}
												],
												"src": "6985:126:9"
											},
											{
												"body": {
													"nativeSrc": "7191:66:9",
													"nodeType": "YulBlock",
													"src": "7191:66:9",
													"statements": [
														{
															"nativeSrc": "7201:50:9",
															"nodeType": "YulAssignment",
															"src": "7201:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7245:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "7245:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "7214:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "7214:30:9"
																},
																"nativeSrc": "7214:37:9",
																"nodeType": "YulFunctionCall",
																"src": "7214:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7201:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "7201:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$225_to_t_address",
												"nativeSrc": "7117:140:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7171:5:9",
														"nodeType": "YulTypedName",
														"src": "7171:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7181:9:9",
														"nodeType": "YulTypedName",
														"src": "7181:9:9",
														"type": ""
													}
												],
												"src": "7117:140:9"
											},
											{
												"body": {
													"nativeSrc": "7342:80:9",
													"nodeType": "YulBlock",
													"src": "7342:80:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7359:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7359:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7409:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "7409:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$225_to_t_address",
																			"nativeSrc": "7364:44:9",
																			"nodeType": "YulIdentifier",
																			"src": "7364:44:9"
																		},
																		"nativeSrc": "7364:51:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7364:51:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7352:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7352:6:9"
																},
																"nativeSrc": "7352:64:9",
																"nodeType": "YulFunctionCall",
																"src": "7352:64:9"
															},
															"nativeSrc": "7352:64:9",
															"nodeType": "YulExpressionStatement",
															"src": "7352:64:9"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack",
												"nativeSrc": "7263:159:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7330:5:9",
														"nodeType": "YulTypedName",
														"src": "7330:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7337:3:9",
														"nodeType": "YulTypedName",
														"src": "7337:3:9",
														"type": ""
													}
												],
												"src": "7263:159:9"
											},
											{
												"body": {
													"nativeSrc": "7540:138:9",
													"nodeType": "YulBlock",
													"src": "7540:138:9",
													"statements": [
														{
															"nativeSrc": "7550:26:9",
															"nodeType": "YulAssignment",
															"src": "7550:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7562:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7562:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7573:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7573:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7558:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7558:3:9"
																},
																"nativeSrc": "7558:18:9",
																"nodeType": "YulFunctionCall",
																"src": "7558:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7550:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7550:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7644:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7644:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7657:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7657:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7668:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7668:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7653:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7653:3:9"
																		},
																		"nativeSrc": "7653:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7653:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack",
																	"nativeSrc": "7586:57:9",
																	"nodeType": "YulIdentifier",
																	"src": "7586:57:9"
																},
																"nativeSrc": "7586:85:9",
																"nodeType": "YulFunctionCall",
																"src": "7586:85:9"
															},
															"nativeSrc": "7586:85:9",
															"nodeType": "YulExpressionStatement",
															"src": "7586:85:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed",
												"nativeSrc": "7428:250:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7512:9:9",
														"nodeType": "YulTypedName",
														"src": "7512:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7524:6:9",
														"nodeType": "YulTypedName",
														"src": "7524:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7535:4:9",
														"nodeType": "YulTypedName",
														"src": "7535:4:9",
														"type": ""
													}
												],
												"src": "7428:250:9"
											},
											{
												"body": {
													"nativeSrc": "7712:152:9",
													"nodeType": "YulBlock",
													"src": "7712:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7729:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7729:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7732:77:9",
																		"nodeType": "YulLiteral",
																		"src": "7732:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7722:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7722:6:9"
																},
																"nativeSrc": "7722:88:9",
																"nodeType": "YulFunctionCall",
																"src": "7722:88:9"
															},
															"nativeSrc": "7722:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "7722:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7826:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7826:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7829:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7829:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7819:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7819:6:9"
																},
																"nativeSrc": "7819:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7819:15:9"
															},
															"nativeSrc": "7819:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7819:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7850:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7850:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7853:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7853:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7843:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7843:6:9"
																},
																"nativeSrc": "7843:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7843:15:9"
															},
															"nativeSrc": "7843:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7843:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "7684:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "7684:180:9"
											},
											{
												"body": {
													"nativeSrc": "7966:73:9",
													"nodeType": "YulBlock",
													"src": "7966:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7983:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7983:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7988:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7988:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7976:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7976:6:9"
																},
																"nativeSrc": "7976:19:9",
																"nodeType": "YulFunctionCall",
																"src": "7976:19:9"
															},
															"nativeSrc": "7976:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "7976:19:9"
														},
														{
															"nativeSrc": "8004:29:9",
															"nodeType": "YulAssignment",
															"src": "8004:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8023:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8023:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8028:4:9",
																		"nodeType": "YulLiteral",
																		"src": "8028:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8019:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8019:3:9"
																},
																"nativeSrc": "8019:14:9",
																"nodeType": "YulFunctionCall",
																"src": "8019:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "8004:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "8004:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7870:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7938:3:9",
														"nodeType": "YulTypedName",
														"src": "7938:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7943:6:9",
														"nodeType": "YulTypedName",
														"src": "7943:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7954:11:9",
														"nodeType": "YulTypedName",
														"src": "7954:11:9",
														"type": ""
													}
												],
												"src": "7870:169:9"
											},
											{
												"body": {
													"nativeSrc": "8151:60:9",
													"nodeType": "YulBlock",
													"src": "8151:60:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8173:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8173:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8181:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8181:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8169:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8169:3:9"
																		},
																		"nativeSrc": "8169:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8169:14:9"
																	},
																	{
																		"hexValue": "4e6f2073756368207363686564756c65",
																		"kind": "string",
																		"nativeSrc": "8185:18:9",
																		"nodeType": "YulLiteral",
																		"src": "8185:18:9",
																		"type": "",
																		"value": "No such schedule"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8162:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8162:6:9"
																},
																"nativeSrc": "8162:42:9",
																"nodeType": "YulFunctionCall",
																"src": "8162:42:9"
															},
															"nativeSrc": "8162:42:9",
															"nodeType": "YulExpressionStatement",
															"src": "8162:42:9"
														}
													]
												},
												"name": "store_literal_in_memory_d4a284eb2ad24c8d181edd202519e12da1302159cff115aa7f2a0b89fe640b6b",
												"nativeSrc": "8045:166:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8143:6:9",
														"nodeType": "YulTypedName",
														"src": "8143:6:9",
														"type": ""
													}
												],
												"src": "8045:166:9"
											},
											{
												"body": {
													"nativeSrc": "8363:220:9",
													"nodeType": "YulBlock",
													"src": "8363:220:9",
													"statements": [
														{
															"nativeSrc": "8373:74:9",
															"nodeType": "YulAssignment",
															"src": "8373:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8439:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8439:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8444:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8444:2:9",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8380:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "8380:58:9"
																},
																"nativeSrc": "8380:67:9",
																"nodeType": "YulFunctionCall",
																"src": "8380:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8373:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8373:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8545:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8545:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d4a284eb2ad24c8d181edd202519e12da1302159cff115aa7f2a0b89fe640b6b",
																	"nativeSrc": "8456:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "8456:88:9"
																},
																"nativeSrc": "8456:93:9",
																"nodeType": "YulFunctionCall",
																"src": "8456:93:9"
															},
															"nativeSrc": "8456:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "8456:93:9"
														},
														{
															"nativeSrc": "8558:19:9",
															"nodeType": "YulAssignment",
															"src": "8558:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8569:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8569:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8574:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8574:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8565:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8565:3:9"
																},
																"nativeSrc": "8565:12:9",
																"nodeType": "YulFunctionCall",
																"src": "8565:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8558:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8558:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d4a284eb2ad24c8d181edd202519e12da1302159cff115aa7f2a0b89fe640b6b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8217:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8351:3:9",
														"nodeType": "YulTypedName",
														"src": "8351:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8359:3:9",
														"nodeType": "YulTypedName",
														"src": "8359:3:9",
														"type": ""
													}
												],
												"src": "8217:366:9"
											},
											{
												"body": {
													"nativeSrc": "8760:248:9",
													"nodeType": "YulBlock",
													"src": "8760:248:9",
													"statements": [
														{
															"nativeSrc": "8770:26:9",
															"nodeType": "YulAssignment",
															"src": "8770:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8782:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8782:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8793:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8793:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8778:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8778:3:9"
																},
																"nativeSrc": "8778:18:9",
																"nodeType": "YulFunctionCall",
																"src": "8778:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8770:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8770:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8817:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8817:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8828:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8828:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8813:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8813:3:9"
																		},
																		"nativeSrc": "8813:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8813:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8836:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "8836:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8842:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8842:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8832:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8832:3:9"
																		},
																		"nativeSrc": "8832:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8832:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8806:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8806:6:9"
																},
																"nativeSrc": "8806:47:9",
																"nodeType": "YulFunctionCall",
																"src": "8806:47:9"
															},
															"nativeSrc": "8806:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "8806:47:9"
														},
														{
															"nativeSrc": "8862:139:9",
															"nodeType": "YulAssignment",
															"src": "8862:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8996:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8996:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d4a284eb2ad24c8d181edd202519e12da1302159cff115aa7f2a0b89fe640b6b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8870:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "8870:124:9"
																},
																"nativeSrc": "8870:131:9",
																"nodeType": "YulFunctionCall",
																"src": "8870:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8862:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8862:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d4a284eb2ad24c8d181edd202519e12da1302159cff115aa7f2a0b89fe640b6b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8589:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8740:9:9",
														"nodeType": "YulTypedName",
														"src": "8740:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8755:4:9",
														"nodeType": "YulTypedName",
														"src": "8755:4:9",
														"type": ""
													}
												],
												"src": "8589:419:9"
											},
											{
												"body": {
													"nativeSrc": "9120:60:9",
													"nodeType": "YulBlock",
													"src": "9120:60:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9142:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9142:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9150:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9150:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9138:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9138:3:9"
																		},
																		"nativeSrc": "9138:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9138:14:9"
																	},
																	{
																		"hexValue": "5363686564756c65207265766f6b6564",
																		"kind": "string",
																		"nativeSrc": "9154:18:9",
																		"nodeType": "YulLiteral",
																		"src": "9154:18:9",
																		"type": "",
																		"value": "Schedule revoked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9131:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9131:6:9"
																},
																"nativeSrc": "9131:42:9",
																"nodeType": "YulFunctionCall",
																"src": "9131:42:9"
															},
															"nativeSrc": "9131:42:9",
															"nodeType": "YulExpressionStatement",
															"src": "9131:42:9"
														}
													]
												},
												"name": "store_literal_in_memory_7dd278aa17797342e944a43d303dc8e5144706eff3594a9fda0ea14806aeeeaf",
												"nativeSrc": "9014:166:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9112:6:9",
														"nodeType": "YulTypedName",
														"src": "9112:6:9",
														"type": ""
													}
												],
												"src": "9014:166:9"
											},
											{
												"body": {
													"nativeSrc": "9332:220:9",
													"nodeType": "YulBlock",
													"src": "9332:220:9",
													"statements": [
														{
															"nativeSrc": "9342:74:9",
															"nodeType": "YulAssignment",
															"src": "9342:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9408:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9408:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9413:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9413:2:9",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9349:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "9349:58:9"
																},
																"nativeSrc": "9349:67:9",
																"nodeType": "YulFunctionCall",
																"src": "9349:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9342:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9342:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9514:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9514:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7dd278aa17797342e944a43d303dc8e5144706eff3594a9fda0ea14806aeeeaf",
																	"nativeSrc": "9425:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "9425:88:9"
																},
																"nativeSrc": "9425:93:9",
																"nodeType": "YulFunctionCall",
																"src": "9425:93:9"
															},
															"nativeSrc": "9425:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "9425:93:9"
														},
														{
															"nativeSrc": "9527:19:9",
															"nodeType": "YulAssignment",
															"src": "9527:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9538:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9538:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9543:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9543:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9534:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9534:3:9"
																},
																"nativeSrc": "9534:12:9",
																"nodeType": "YulFunctionCall",
																"src": "9534:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9527:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9527:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7dd278aa17797342e944a43d303dc8e5144706eff3594a9fda0ea14806aeeeaf_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9186:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9320:3:9",
														"nodeType": "YulTypedName",
														"src": "9320:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9328:3:9",
														"nodeType": "YulTypedName",
														"src": "9328:3:9",
														"type": ""
													}
												],
												"src": "9186:366:9"
											},
											{
												"body": {
													"nativeSrc": "9729:248:9",
													"nodeType": "YulBlock",
													"src": "9729:248:9",
													"statements": [
														{
															"nativeSrc": "9739:26:9",
															"nodeType": "YulAssignment",
															"src": "9739:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9751:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9751:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9762:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9762:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9747:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9747:3:9"
																},
																"nativeSrc": "9747:18:9",
																"nodeType": "YulFunctionCall",
																"src": "9747:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9739:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9739:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9786:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9786:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9797:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9797:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9782:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9782:3:9"
																		},
																		"nativeSrc": "9782:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9782:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9805:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "9805:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9811:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9811:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9801:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9801:3:9"
																		},
																		"nativeSrc": "9801:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9801:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9775:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9775:6:9"
																},
																"nativeSrc": "9775:47:9",
																"nodeType": "YulFunctionCall",
																"src": "9775:47:9"
															},
															"nativeSrc": "9775:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "9775:47:9"
														},
														{
															"nativeSrc": "9831:139:9",
															"nodeType": "YulAssignment",
															"src": "9831:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9965:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "9965:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7dd278aa17797342e944a43d303dc8e5144706eff3594a9fda0ea14806aeeeaf_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9839:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "9839:124:9"
																},
																"nativeSrc": "9839:131:9",
																"nodeType": "YulFunctionCall",
																"src": "9839:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9831:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9831:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7dd278aa17797342e944a43d303dc8e5144706eff3594a9fda0ea14806aeeeaf__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9558:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9709:9:9",
														"nodeType": "YulTypedName",
														"src": "9709:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9724:4:9",
														"nodeType": "YulTypedName",
														"src": "9724:4:9",
														"type": ""
													}
												],
												"src": "9558:419:9"
											},
											{
												"body": {
													"nativeSrc": "10011:152:9",
													"nodeType": "YulBlock",
													"src": "10011:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10028:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10028:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10031:77:9",
																		"nodeType": "YulLiteral",
																		"src": "10031:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10021:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10021:6:9"
																},
																"nativeSrc": "10021:88:9",
																"nodeType": "YulFunctionCall",
																"src": "10021:88:9"
															},
															"nativeSrc": "10021:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "10021:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10125:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10125:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10128:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10128:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10118:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10118:6:9"
																},
																"nativeSrc": "10118:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10118:15:9"
															},
															"nativeSrc": "10118:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "10118:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10149:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10149:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10152:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10152:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10142:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10142:6:9"
																},
																"nativeSrc": "10142:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10142:15:9"
															},
															"nativeSrc": "10142:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "10142:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9983:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "9983:180:9"
											},
											{
												"body": {
													"nativeSrc": "10214:149:9",
													"nodeType": "YulBlock",
													"src": "10214:149:9",
													"statements": [
														{
															"nativeSrc": "10224:25:9",
															"nodeType": "YulAssignment",
															"src": "10224:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10247:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10247:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10229:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "10229:17:9"
																},
																"nativeSrc": "10229:20:9",
																"nodeType": "YulFunctionCall",
																"src": "10229:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10224:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "10224:1:9"
																}
															]
														},
														{
															"nativeSrc": "10258:25:9",
															"nodeType": "YulAssignment",
															"src": "10258:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10281:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10281:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10263:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "10263:17:9"
																},
																"nativeSrc": "10263:20:9",
																"nodeType": "YulFunctionCall",
																"src": "10263:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10258:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "10258:1:9"
																}
															]
														},
														{
															"nativeSrc": "10292:17:9",
															"nodeType": "YulAssignment",
															"src": "10292:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10304:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10304:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10307:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10307:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "10300:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10300:3:9"
																},
																"nativeSrc": "10300:9:9",
																"nodeType": "YulFunctionCall",
																"src": "10300:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "10292:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10292:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10334:22:9",
																"nodeType": "YulBlock",
																"src": "10334:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10336:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "10336:16:9"
																			},
																			"nativeSrc": "10336:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10336:18:9"
																		},
																		"nativeSrc": "10336:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "10336:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "10325:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "10325:4:9"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "10331:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10331:1:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10322:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "10322:2:9"
																},
																"nativeSrc": "10322:11:9",
																"nodeType": "YulFunctionCall",
																"src": "10322:11:9"
															},
															"nativeSrc": "10319:37:9",
															"nodeType": "YulIf",
															"src": "10319:37:9"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "10169:194:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10200:1:9",
														"nodeType": "YulTypedName",
														"src": "10200:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10203:1:9",
														"nodeType": "YulTypedName",
														"src": "10203:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "10209:4:9",
														"nodeType": "YulTypedName",
														"src": "10209:4:9",
														"type": ""
													}
												],
												"src": "10169:194:9"
											},
											{
												"body": {
													"nativeSrc": "10475:64:9",
													"nodeType": "YulBlock",
													"src": "10475:64:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10497:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "10497:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10505:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10505:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10493:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10493:3:9"
																		},
																		"nativeSrc": "10493:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10493:14:9"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e7320746f2072656c65617365",
																		"kind": "string",
																		"nativeSrc": "10509:22:9",
																		"nodeType": "YulLiteral",
																		"src": "10509:22:9",
																		"type": "",
																		"value": "No tokens to release"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10486:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10486:6:9"
																},
																"nativeSrc": "10486:46:9",
																"nodeType": "YulFunctionCall",
																"src": "10486:46:9"
															},
															"nativeSrc": "10486:46:9",
															"nodeType": "YulExpressionStatement",
															"src": "10486:46:9"
														}
													]
												},
												"name": "store_literal_in_memory_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914",
												"nativeSrc": "10369:170:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10467:6:9",
														"nodeType": "YulTypedName",
														"src": "10467:6:9",
														"type": ""
													}
												],
												"src": "10369:170:9"
											},
											{
												"body": {
													"nativeSrc": "10691:220:9",
													"nodeType": "YulBlock",
													"src": "10691:220:9",
													"statements": [
														{
															"nativeSrc": "10701:74:9",
															"nodeType": "YulAssignment",
															"src": "10701:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10767:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10767:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10772:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10772:2:9",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10708:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "10708:58:9"
																},
																"nativeSrc": "10708:67:9",
																"nodeType": "YulFunctionCall",
																"src": "10708:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10701:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10701:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10873:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10873:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914",
																	"nativeSrc": "10784:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "10784:88:9"
																},
																"nativeSrc": "10784:93:9",
																"nodeType": "YulFunctionCall",
																"src": "10784:93:9"
															},
															"nativeSrc": "10784:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "10784:93:9"
														},
														{
															"nativeSrc": "10886:19:9",
															"nodeType": "YulAssignment",
															"src": "10886:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10897:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10897:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10902:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10902:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10893:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10893:3:9"
																},
																"nativeSrc": "10893:12:9",
																"nodeType": "YulFunctionCall",
																"src": "10893:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10886:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10886:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10545:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10679:3:9",
														"nodeType": "YulTypedName",
														"src": "10679:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10687:3:9",
														"nodeType": "YulTypedName",
														"src": "10687:3:9",
														"type": ""
													}
												],
												"src": "10545:366:9"
											},
											{
												"body": {
													"nativeSrc": "11088:248:9",
													"nodeType": "YulBlock",
													"src": "11088:248:9",
													"statements": [
														{
															"nativeSrc": "11098:26:9",
															"nodeType": "YulAssignment",
															"src": "11098:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11110:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11110:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11121:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11121:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11106:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11106:3:9"
																},
																"nativeSrc": "11106:18:9",
																"nodeType": "YulFunctionCall",
																"src": "11106:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11098:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11098:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11145:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11145:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11156:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11156:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11141:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11141:3:9"
																		},
																		"nativeSrc": "11141:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11141:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11164:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "11164:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11170:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11170:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11160:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11160:3:9"
																		},
																		"nativeSrc": "11160:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11160:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11134:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11134:6:9"
																},
																"nativeSrc": "11134:47:9",
																"nodeType": "YulFunctionCall",
																"src": "11134:47:9"
															},
															"nativeSrc": "11134:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "11134:47:9"
														},
														{
															"nativeSrc": "11190:139:9",
															"nodeType": "YulAssignment",
															"src": "11190:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11324:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "11324:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11198:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "11198:124:9"
																},
																"nativeSrc": "11198:131:9",
																"nodeType": "YulFunctionCall",
																"src": "11198:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11190:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11190:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10917:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11068:9:9",
														"nodeType": "YulTypedName",
														"src": "11068:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11083:4:9",
														"nodeType": "YulTypedName",
														"src": "11083:4:9",
														"type": ""
													}
												],
												"src": "10917:419:9"
											},
											{
												"body": {
													"nativeSrc": "11386:147:9",
													"nodeType": "YulBlock",
													"src": "11386:147:9",
													"statements": [
														{
															"nativeSrc": "11396:25:9",
															"nodeType": "YulAssignment",
															"src": "11396:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11419:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11419:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11401:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "11401:17:9"
																},
																"nativeSrc": "11401:20:9",
																"nodeType": "YulFunctionCall",
																"src": "11401:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11396:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "11396:1:9"
																}
															]
														},
														{
															"nativeSrc": "11430:25:9",
															"nodeType": "YulAssignment",
															"src": "11430:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11453:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11453:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11435:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "11435:17:9"
																},
																"nativeSrc": "11435:20:9",
																"nodeType": "YulFunctionCall",
																"src": "11435:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11430:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "11430:1:9"
																}
															]
														},
														{
															"nativeSrc": "11464:16:9",
															"nodeType": "YulAssignment",
															"src": "11464:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11475:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11475:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11478:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11478:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11471:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11471:3:9"
																},
																"nativeSrc": "11471:9:9",
																"nodeType": "YulFunctionCall",
																"src": "11471:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11464:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11464:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11504:22:9",
																"nodeType": "YulBlock",
																"src": "11504:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11506:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "11506:16:9"
																			},
																			"nativeSrc": "11506:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "11506:18:9"
																		},
																		"nativeSrc": "11506:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "11506:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11496:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11496:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11499:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11499:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11493:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "11493:2:9"
																},
																"nativeSrc": "11493:10:9",
																"nodeType": "YulFunctionCall",
																"src": "11493:10:9"
															},
															"nativeSrc": "11490:36:9",
															"nodeType": "YulIf",
															"src": "11490:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11342:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11373:1:9",
														"nodeType": "YulTypedName",
														"src": "11373:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11376:1:9",
														"nodeType": "YulTypedName",
														"src": "11376:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11382:3:9",
														"nodeType": "YulTypedName",
														"src": "11382:3:9",
														"type": ""
													}
												],
												"src": "11342:191:9"
											},
											{
												"body": {
													"nativeSrc": "11665:206:9",
													"nodeType": "YulBlock",
													"src": "11665:206:9",
													"statements": [
														{
															"nativeSrc": "11675:26:9",
															"nodeType": "YulAssignment",
															"src": "11675:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11687:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11687:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11698:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11698:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11683:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11683:3:9"
																},
																"nativeSrc": "11683:18:9",
																"nodeType": "YulFunctionCall",
																"src": "11683:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11675:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11675:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11755:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11755:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11768:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11768:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11779:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11779:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11764:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11764:3:9"
																		},
																		"nativeSrc": "11764:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11764:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11711:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "11711:43:9"
																},
																"nativeSrc": "11711:71:9",
																"nodeType": "YulFunctionCall",
																"src": "11711:71:9"
															},
															"nativeSrc": "11711:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "11711:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11836:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11836:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11849:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11849:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11860:2:9",
																				"nodeType": "YulLiteral",
																				"src": "11860:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11845:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11845:3:9"
																		},
																		"nativeSrc": "11845:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11845:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11792:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "11792:43:9"
																},
																"nativeSrc": "11792:72:9",
																"nodeType": "YulFunctionCall",
																"src": "11792:72:9"
															},
															"nativeSrc": "11792:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "11792:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "11539:332:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11629:9:9",
														"nodeType": "YulTypedName",
														"src": "11629:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11641:6:9",
														"nodeType": "YulTypedName",
														"src": "11641:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11649:6:9",
														"nodeType": "YulTypedName",
														"src": "11649:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11660:4:9",
														"nodeType": "YulTypedName",
														"src": "11660:4:9",
														"type": ""
													}
												],
												"src": "11539:332:9"
											},
											{
												"body": {
													"nativeSrc": "11937:77:9",
													"nodeType": "YulBlock",
													"src": "11937:77:9",
													"statements": [
														{
															"nativeSrc": "11947:22:9",
															"nodeType": "YulAssignment",
															"src": "11947:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11962:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11962:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11956:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "11956:5:9"
																},
																"nativeSrc": "11956:13:9",
																"nodeType": "YulFunctionCall",
																"src": "11956:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11947:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "11947:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12002:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "12002:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "11978:23:9",
																	"nodeType": "YulIdentifier",
																	"src": "11978:23:9"
																},
																"nativeSrc": "11978:30:9",
																"nodeType": "YulFunctionCall",
																"src": "11978:30:9"
															},
															"nativeSrc": "11978:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "11978:30:9"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "11877:137:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11915:6:9",
														"nodeType": "YulTypedName",
														"src": "11915:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11923:3:9",
														"nodeType": "YulTypedName",
														"src": "11923:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11931:5:9",
														"nodeType": "YulTypedName",
														"src": "11931:5:9",
														"type": ""
													}
												],
												"src": "11877:137:9"
											},
											{
												"body": {
													"nativeSrc": "12094:271:9",
													"nodeType": "YulBlock",
													"src": "12094:271:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "12140:83:9",
																"nodeType": "YulBlock",
																"src": "12140:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12142:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "12142:77:9"
																			},
																			"nativeSrc": "12142:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "12142:79:9"
																		},
																		"nativeSrc": "12142:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "12142:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12115:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "12115:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12124:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12124:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12111:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12111:3:9"
																		},
																		"nativeSrc": "12111:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12111:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12136:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12136:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12107:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12107:3:9"
																},
																"nativeSrc": "12107:32:9",
																"nodeType": "YulFunctionCall",
																"src": "12107:32:9"
															},
															"nativeSrc": "12104:119:9",
															"nodeType": "YulIf",
															"src": "12104:119:9"
														},
														{
															"nativeSrc": "12233:125:9",
															"nodeType": "YulBlock",
															"src": "12233:125:9",
															"statements": [
																{
																	"nativeSrc": "12248:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12248:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12262:1:9",
																		"nodeType": "YulLiteral",
																		"src": "12262:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12252:6:9",
																			"nodeType": "YulTypedName",
																			"src": "12252:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12277:71:9",
																	"nodeType": "YulAssignment",
																	"src": "12277:71:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12320:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "12320:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12331:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "12331:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12316:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "12316:3:9"
																				},
																				"nativeSrc": "12316:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "12316:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12340:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "12340:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "12287:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "12287:28:9"
																		},
																		"nativeSrc": "12287:61:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12287:61:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12277:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "12277:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "12020:345:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12064:9:9",
														"nodeType": "YulTypedName",
														"src": "12064:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12075:7:9",
														"nodeType": "YulTypedName",
														"src": "12075:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12087:6:9",
														"nodeType": "YulTypedName",
														"src": "12087:6:9",
														"type": ""
													}
												],
												"src": "12020:345:9"
											},
											{
												"body": {
													"nativeSrc": "12477:59:9",
													"nodeType": "YulBlock",
													"src": "12477:59:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12499:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "12499:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12507:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12507:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12495:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12495:3:9"
																		},
																		"nativeSrc": "12495:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12495:14:9"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "12511:17:9",
																		"nodeType": "YulLiteral",
																		"src": "12511:17:9",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12488:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12488:6:9"
																},
																"nativeSrc": "12488:41:9",
																"nodeType": "YulFunctionCall",
																"src": "12488:41:9"
															},
															"nativeSrc": "12488:41:9",
															"nodeType": "YulExpressionStatement",
															"src": "12488:41:9"
														}
													]
												},
												"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
												"nativeSrc": "12371:165:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12469:6:9",
														"nodeType": "YulTypedName",
														"src": "12469:6:9",
														"type": ""
													}
												],
												"src": "12371:165:9"
											},
											{
												"body": {
													"nativeSrc": "12688:220:9",
													"nodeType": "YulBlock",
													"src": "12688:220:9",
													"statements": [
														{
															"nativeSrc": "12698:74:9",
															"nodeType": "YulAssignment",
															"src": "12698:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12764:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12764:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12769:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12769:2:9",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12705:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "12705:58:9"
																},
																"nativeSrc": "12705:67:9",
																"nodeType": "YulFunctionCall",
																"src": "12705:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12698:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12698:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12870:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12870:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																	"nativeSrc": "12781:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "12781:88:9"
																},
																"nativeSrc": "12781:93:9",
																"nodeType": "YulFunctionCall",
																"src": "12781:93:9"
															},
															"nativeSrc": "12781:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "12781:93:9"
														},
														{
															"nativeSrc": "12883:19:9",
															"nodeType": "YulAssignment",
															"src": "12883:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12894:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12894:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12899:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12899:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12890:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12890:3:9"
																},
																"nativeSrc": "12890:12:9",
																"nodeType": "YulFunctionCall",
																"src": "12890:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12883:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12883:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12542:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12676:3:9",
														"nodeType": "YulTypedName",
														"src": "12676:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12684:3:9",
														"nodeType": "YulTypedName",
														"src": "12684:3:9",
														"type": ""
													}
												],
												"src": "12542:366:9"
											},
											{
												"body": {
													"nativeSrc": "13085:248:9",
													"nodeType": "YulBlock",
													"src": "13085:248:9",
													"statements": [
														{
															"nativeSrc": "13095:26:9",
															"nodeType": "YulAssignment",
															"src": "13095:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13107:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "13107:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13118:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13118:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13103:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13103:3:9"
																},
																"nativeSrc": "13103:18:9",
																"nodeType": "YulFunctionCall",
																"src": "13103:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13095:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13095:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13142:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13142:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13153:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13153:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13138:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13138:3:9"
																		},
																		"nativeSrc": "13138:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13138:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13161:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "13161:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13167:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13167:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13157:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13157:3:9"
																		},
																		"nativeSrc": "13157:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13157:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13131:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13131:6:9"
																},
																"nativeSrc": "13131:47:9",
																"nodeType": "YulFunctionCall",
																"src": "13131:47:9"
															},
															"nativeSrc": "13131:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "13131:47:9"
														},
														{
															"nativeSrc": "13187:139:9",
															"nodeType": "YulAssignment",
															"src": "13187:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13321:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "13321:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13195:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "13195:124:9"
																},
																"nativeSrc": "13195:131:9",
																"nodeType": "YulFunctionCall",
																"src": "13195:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13187:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13187:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12914:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13065:9:9",
														"nodeType": "YulTypedName",
														"src": "13065:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13080:4:9",
														"nodeType": "YulTypedName",
														"src": "13080:4:9",
														"type": ""
													}
												],
												"src": "12914:419:9"
											},
											{
												"body": {
													"nativeSrc": "13445:63:9",
													"nodeType": "YulBlock",
													"src": "13445:63:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13467:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "13467:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13475:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13475:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13463:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13463:3:9"
																		},
																		"nativeSrc": "13463:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13463:14:9"
																	},
																	{
																		"hexValue": "496e76616c69642062656e6566696369617279",
																		"kind": "string",
																		"nativeSrc": "13479:21:9",
																		"nodeType": "YulLiteral",
																		"src": "13479:21:9",
																		"type": "",
																		"value": "Invalid beneficiary"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13456:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13456:6:9"
																},
																"nativeSrc": "13456:45:9",
																"nodeType": "YulFunctionCall",
																"src": "13456:45:9"
															},
															"nativeSrc": "13456:45:9",
															"nodeType": "YulExpressionStatement",
															"src": "13456:45:9"
														}
													]
												},
												"name": "store_literal_in_memory_86f5acfc12d2804bcf816c0b4c171086bf03352ff286fda75ac8ea27fcfb10a6",
												"nativeSrc": "13339:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13437:6:9",
														"nodeType": "YulTypedName",
														"src": "13437:6:9",
														"type": ""
													}
												],
												"src": "13339:169:9"
											},
											{
												"body": {
													"nativeSrc": "13660:220:9",
													"nodeType": "YulBlock",
													"src": "13660:220:9",
													"statements": [
														{
															"nativeSrc": "13670:74:9",
															"nodeType": "YulAssignment",
															"src": "13670:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13736:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13736:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13741:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13741:2:9",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13677:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "13677:58:9"
																},
																"nativeSrc": "13677:67:9",
																"nodeType": "YulFunctionCall",
																"src": "13677:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13670:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13670:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13842:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13842:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_86f5acfc12d2804bcf816c0b4c171086bf03352ff286fda75ac8ea27fcfb10a6",
																	"nativeSrc": "13753:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "13753:88:9"
																},
																"nativeSrc": "13753:93:9",
																"nodeType": "YulFunctionCall",
																"src": "13753:93:9"
															},
															"nativeSrc": "13753:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "13753:93:9"
														},
														{
															"nativeSrc": "13855:19:9",
															"nodeType": "YulAssignment",
															"src": "13855:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13866:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13866:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13871:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13871:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13862:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13862:3:9"
																},
																"nativeSrc": "13862:12:9",
																"nodeType": "YulFunctionCall",
																"src": "13862:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13855:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13855:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_86f5acfc12d2804bcf816c0b4c171086bf03352ff286fda75ac8ea27fcfb10a6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13514:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13648:3:9",
														"nodeType": "YulTypedName",
														"src": "13648:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13656:3:9",
														"nodeType": "YulTypedName",
														"src": "13656:3:9",
														"type": ""
													}
												],
												"src": "13514:366:9"
											},
											{
												"body": {
													"nativeSrc": "14057:248:9",
													"nodeType": "YulBlock",
													"src": "14057:248:9",
													"statements": [
														{
															"nativeSrc": "14067:26:9",
															"nodeType": "YulAssignment",
															"src": "14067:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14079:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "14079:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14090:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14090:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14075:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14075:3:9"
																},
																"nativeSrc": "14075:18:9",
																"nodeType": "YulFunctionCall",
																"src": "14075:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14067:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14067:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14114:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14114:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14125:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14125:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14110:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14110:3:9"
																		},
																		"nativeSrc": "14110:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14110:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14133:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "14133:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14139:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14139:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14129:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14129:3:9"
																		},
																		"nativeSrc": "14129:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14129:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14103:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14103:6:9"
																},
																"nativeSrc": "14103:47:9",
																"nodeType": "YulFunctionCall",
																"src": "14103:47:9"
															},
															"nativeSrc": "14103:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "14103:47:9"
														},
														{
															"nativeSrc": "14159:139:9",
															"nodeType": "YulAssignment",
															"src": "14159:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14293:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "14293:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_86f5acfc12d2804bcf816c0b4c171086bf03352ff286fda75ac8ea27fcfb10a6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14167:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "14167:124:9"
																},
																"nativeSrc": "14167:131:9",
																"nodeType": "YulFunctionCall",
																"src": "14167:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14159:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14159:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_86f5acfc12d2804bcf816c0b4c171086bf03352ff286fda75ac8ea27fcfb10a6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13886:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14037:9:9",
														"nodeType": "YulTypedName",
														"src": "14037:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14052:4:9",
														"nodeType": "YulTypedName",
														"src": "14052:4:9",
														"type": ""
													}
												],
												"src": "13886:419:9"
											},
											{
												"body": {
													"nativeSrc": "14417:62:9",
													"nodeType": "YulBlock",
													"src": "14417:62:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14439:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "14439:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14447:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14447:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14435:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14435:3:9"
																		},
																		"nativeSrc": "14435:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14435:14:9"
																	},
																	{
																		"hexValue": "416d6f756e74206d757374206265203e2030",
																		"kind": "string",
																		"nativeSrc": "14451:20:9",
																		"nodeType": "YulLiteral",
																		"src": "14451:20:9",
																		"type": "",
																		"value": "Amount must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14428:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14428:6:9"
																},
																"nativeSrc": "14428:44:9",
																"nodeType": "YulFunctionCall",
																"src": "14428:44:9"
															},
															"nativeSrc": "14428:44:9",
															"nodeType": "YulExpressionStatement",
															"src": "14428:44:9"
														}
													]
												},
												"name": "store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
												"nativeSrc": "14311:168:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14409:6:9",
														"nodeType": "YulTypedName",
														"src": "14409:6:9",
														"type": ""
													}
												],
												"src": "14311:168:9"
											},
											{
												"body": {
													"nativeSrc": "14631:220:9",
													"nodeType": "YulBlock",
													"src": "14631:220:9",
													"statements": [
														{
															"nativeSrc": "14641:74:9",
															"nodeType": "YulAssignment",
															"src": "14641:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14707:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14707:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14712:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14712:2:9",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14648:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "14648:58:9"
																},
																"nativeSrc": "14648:67:9",
																"nodeType": "YulFunctionCall",
																"src": "14648:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14641:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14641:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14813:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14813:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																	"nativeSrc": "14724:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "14724:88:9"
																},
																"nativeSrc": "14724:93:9",
																"nodeType": "YulFunctionCall",
																"src": "14724:93:9"
															},
															"nativeSrc": "14724:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "14724:93:9"
														},
														{
															"nativeSrc": "14826:19:9",
															"nodeType": "YulAssignment",
															"src": "14826:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14837:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14837:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14842:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14842:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14833:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14833:3:9"
																},
																"nativeSrc": "14833:12:9",
																"nodeType": "YulFunctionCall",
																"src": "14833:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14826:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14826:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14485:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14619:3:9",
														"nodeType": "YulTypedName",
														"src": "14619:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14627:3:9",
														"nodeType": "YulTypedName",
														"src": "14627:3:9",
														"type": ""
													}
												],
												"src": "14485:366:9"
											},
											{
												"body": {
													"nativeSrc": "15028:248:9",
													"nodeType": "YulBlock",
													"src": "15028:248:9",
													"statements": [
														{
															"nativeSrc": "15038:26:9",
															"nodeType": "YulAssignment",
															"src": "15038:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15050:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "15050:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15061:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15061:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15046:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15046:3:9"
																},
																"nativeSrc": "15046:18:9",
																"nodeType": "YulFunctionCall",
																"src": "15046:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15038:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "15038:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15085:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15085:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15096:1:9",
																				"nodeType": "YulLiteral",
																				"src": "15096:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15081:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15081:3:9"
																		},
																		"nativeSrc": "15081:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15081:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15104:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "15104:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15110:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15110:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15100:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15100:3:9"
																		},
																		"nativeSrc": "15100:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15100:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15074:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15074:6:9"
																},
																"nativeSrc": "15074:47:9",
																"nodeType": "YulFunctionCall",
																"src": "15074:47:9"
															},
															"nativeSrc": "15074:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "15074:47:9"
														},
														{
															"nativeSrc": "15130:139:9",
															"nodeType": "YulAssignment",
															"src": "15130:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15264:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "15264:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15138:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "15138:124:9"
																},
																"nativeSrc": "15138:131:9",
																"nodeType": "YulFunctionCall",
																"src": "15138:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15130:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "15130:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14857:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15008:9:9",
														"nodeType": "YulTypedName",
														"src": "15008:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15023:4:9",
														"nodeType": "YulTypedName",
														"src": "15023:4:9",
														"type": ""
													}
												],
												"src": "14857:419:9"
											},
											{
												"body": {
													"nativeSrc": "15388:64:9",
													"nodeType": "YulBlock",
													"src": "15388:64:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15410:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "15410:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15418:1:9",
																				"nodeType": "YulLiteral",
																				"src": "15418:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15406:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15406:3:9"
																		},
																		"nativeSrc": "15406:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15406:14:9"
																	},
																	{
																		"hexValue": "4475726174696f6e206d757374206265203e2030",
																		"kind": "string",
																		"nativeSrc": "15422:22:9",
																		"nodeType": "YulLiteral",
																		"src": "15422:22:9",
																		"type": "",
																		"value": "Duration must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15399:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15399:6:9"
																},
																"nativeSrc": "15399:46:9",
																"nodeType": "YulFunctionCall",
																"src": "15399:46:9"
															},
															"nativeSrc": "15399:46:9",
															"nodeType": "YulExpressionStatement",
															"src": "15399:46:9"
														}
													]
												},
												"name": "store_literal_in_memory_8e11b6d2923bf8c6b9080d06aaf81f8e74ef4ded2c8e4af3b95302a90884a4cd",
												"nativeSrc": "15282:170:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15380:6:9",
														"nodeType": "YulTypedName",
														"src": "15380:6:9",
														"type": ""
													}
												],
												"src": "15282:170:9"
											},
											{
												"body": {
													"nativeSrc": "15604:220:9",
													"nodeType": "YulBlock",
													"src": "15604:220:9",
													"statements": [
														{
															"nativeSrc": "15614:74:9",
															"nodeType": "YulAssignment",
															"src": "15614:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15680:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15680:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15685:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15685:2:9",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15621:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "15621:58:9"
																},
																"nativeSrc": "15621:67:9",
																"nodeType": "YulFunctionCall",
																"src": "15621:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15614:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15614:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15786:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15786:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8e11b6d2923bf8c6b9080d06aaf81f8e74ef4ded2c8e4af3b95302a90884a4cd",
																	"nativeSrc": "15697:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "15697:88:9"
																},
																"nativeSrc": "15697:93:9",
																"nodeType": "YulFunctionCall",
																"src": "15697:93:9"
															},
															"nativeSrc": "15697:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "15697:93:9"
														},
														{
															"nativeSrc": "15799:19:9",
															"nodeType": "YulAssignment",
															"src": "15799:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15810:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15810:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15815:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15815:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15806:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15806:3:9"
																},
																"nativeSrc": "15806:12:9",
																"nodeType": "YulFunctionCall",
																"src": "15806:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15799:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15799:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8e11b6d2923bf8c6b9080d06aaf81f8e74ef4ded2c8e4af3b95302a90884a4cd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15458:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15592:3:9",
														"nodeType": "YulTypedName",
														"src": "15592:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15600:3:9",
														"nodeType": "YulTypedName",
														"src": "15600:3:9",
														"type": ""
													}
												],
												"src": "15458:366:9"
											},
											{
												"body": {
													"nativeSrc": "16001:248:9",
													"nodeType": "YulBlock",
													"src": "16001:248:9",
													"statements": [
														{
															"nativeSrc": "16011:26:9",
															"nodeType": "YulAssignment",
															"src": "16011:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16023:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "16023:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16034:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16034:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16019:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16019:3:9"
																},
																"nativeSrc": "16019:18:9",
																"nodeType": "YulFunctionCall",
																"src": "16019:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16011:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "16011:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16058:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "16058:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16069:1:9",
																				"nodeType": "YulLiteral",
																				"src": "16069:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16054:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16054:3:9"
																		},
																		"nativeSrc": "16054:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16054:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16077:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "16077:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16083:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "16083:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16073:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16073:3:9"
																		},
																		"nativeSrc": "16073:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16073:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16047:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16047:6:9"
																},
																"nativeSrc": "16047:47:9",
																"nodeType": "YulFunctionCall",
																"src": "16047:47:9"
															},
															"nativeSrc": "16047:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "16047:47:9"
														},
														{
															"nativeSrc": "16103:139:9",
															"nodeType": "YulAssignment",
															"src": "16103:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16237:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "16237:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8e11b6d2923bf8c6b9080d06aaf81f8e74ef4ded2c8e4af3b95302a90884a4cd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16111:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "16111:124:9"
																},
																"nativeSrc": "16111:131:9",
																"nodeType": "YulFunctionCall",
																"src": "16111:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16103:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "16103:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8e11b6d2923bf8c6b9080d06aaf81f8e74ef4ded2c8e4af3b95302a90884a4cd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15830:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15981:9:9",
														"nodeType": "YulTypedName",
														"src": "15981:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15996:4:9",
														"nodeType": "YulTypedName",
														"src": "15996:4:9",
														"type": ""
													}
												],
												"src": "15830:419:9"
											},
											{
												"body": {
													"nativeSrc": "16361:68:9",
													"nodeType": "YulBlock",
													"src": "16361:68:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16383:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "16383:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16391:1:9",
																				"nodeType": "YulLiteral",
																				"src": "16391:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16379:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16379:3:9"
																		},
																		"nativeSrc": "16379:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16379:14:9"
																	},
																	{
																		"hexValue": "536c69636520706572696f64206d757374206265203e2030",
																		"kind": "string",
																		"nativeSrc": "16395:26:9",
																		"nodeType": "YulLiteral",
																		"src": "16395:26:9",
																		"type": "",
																		"value": "Slice period must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16372:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16372:6:9"
																},
																"nativeSrc": "16372:50:9",
																"nodeType": "YulFunctionCall",
																"src": "16372:50:9"
															},
															"nativeSrc": "16372:50:9",
															"nodeType": "YulExpressionStatement",
															"src": "16372:50:9"
														}
													]
												},
												"name": "store_literal_in_memory_d1c2f089122507431dd9d494d2cf4fefdf06d00288bbafa96c6a6e2065fe14eb",
												"nativeSrc": "16255:174:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16353:6:9",
														"nodeType": "YulTypedName",
														"src": "16353:6:9",
														"type": ""
													}
												],
												"src": "16255:174:9"
											},
											{
												"body": {
													"nativeSrc": "16581:220:9",
													"nodeType": "YulBlock",
													"src": "16581:220:9",
													"statements": [
														{
															"nativeSrc": "16591:74:9",
															"nodeType": "YulAssignment",
															"src": "16591:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16657:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16657:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16662:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16662:2:9",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16598:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "16598:58:9"
																},
																"nativeSrc": "16598:67:9",
																"nodeType": "YulFunctionCall",
																"src": "16598:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16591:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16591:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16763:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16763:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d1c2f089122507431dd9d494d2cf4fefdf06d00288bbafa96c6a6e2065fe14eb",
																	"nativeSrc": "16674:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "16674:88:9"
																},
																"nativeSrc": "16674:93:9",
																"nodeType": "YulFunctionCall",
																"src": "16674:93:9"
															},
															"nativeSrc": "16674:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "16674:93:9"
														},
														{
															"nativeSrc": "16776:19:9",
															"nodeType": "YulAssignment",
															"src": "16776:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16787:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16787:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16792:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16792:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16783:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16783:3:9"
																},
																"nativeSrc": "16783:12:9",
																"nodeType": "YulFunctionCall",
																"src": "16783:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16776:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16776:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d1c2f089122507431dd9d494d2cf4fefdf06d00288bbafa96c6a6e2065fe14eb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16435:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16569:3:9",
														"nodeType": "YulTypedName",
														"src": "16569:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16577:3:9",
														"nodeType": "YulTypedName",
														"src": "16577:3:9",
														"type": ""
													}
												],
												"src": "16435:366:9"
											},
											{
												"body": {
													"nativeSrc": "16978:248:9",
													"nodeType": "YulBlock",
													"src": "16978:248:9",
													"statements": [
														{
															"nativeSrc": "16988:26:9",
															"nodeType": "YulAssignment",
															"src": "16988:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17000:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "17000:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17011:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17011:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16996:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16996:3:9"
																},
																"nativeSrc": "16996:18:9",
																"nodeType": "YulFunctionCall",
																"src": "16996:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16988:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "16988:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17035:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17035:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17046:1:9",
																				"nodeType": "YulLiteral",
																				"src": "17046:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17031:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17031:3:9"
																		},
																		"nativeSrc": "17031:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17031:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17054:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "17054:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17060:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17060:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17050:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17050:3:9"
																		},
																		"nativeSrc": "17050:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17050:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17024:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17024:6:9"
																},
																"nativeSrc": "17024:47:9",
																"nodeType": "YulFunctionCall",
																"src": "17024:47:9"
															},
															"nativeSrc": "17024:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "17024:47:9"
														},
														{
															"nativeSrc": "17080:139:9",
															"nodeType": "YulAssignment",
															"src": "17080:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17214:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "17214:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d1c2f089122507431dd9d494d2cf4fefdf06d00288bbafa96c6a6e2065fe14eb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17088:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "17088:124:9"
																},
																"nativeSrc": "17088:131:9",
																"nodeType": "YulFunctionCall",
																"src": "17088:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17080:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "17080:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d1c2f089122507431dd9d494d2cf4fefdf06d00288bbafa96c6a6e2065fe14eb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16807:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16958:9:9",
														"nodeType": "YulTypedName",
														"src": "16958:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16973:4:9",
														"nodeType": "YulTypedName",
														"src": "16973:4:9",
														"type": ""
													}
												],
												"src": "16807:419:9"
											},
											{
												"body": {
													"nativeSrc": "17338:57:9",
													"nodeType": "YulBlock",
													"src": "17338:57:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17360:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "17360:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17368:1:9",
																				"nodeType": "YulLiteral",
																				"src": "17368:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17356:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17356:3:9"
																		},
																		"nativeSrc": "17356:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17356:14:9"
																	},
																	{
																		"hexValue": "496e76616c696420636c696666",
																		"kind": "string",
																		"nativeSrc": "17372:15:9",
																		"nodeType": "YulLiteral",
																		"src": "17372:15:9",
																		"type": "",
																		"value": "Invalid cliff"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17349:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17349:6:9"
																},
																"nativeSrc": "17349:39:9",
																"nodeType": "YulFunctionCall",
																"src": "17349:39:9"
															},
															"nativeSrc": "17349:39:9",
															"nodeType": "YulExpressionStatement",
															"src": "17349:39:9"
														}
													]
												},
												"name": "store_literal_in_memory_7609fdeb66ef185b0ab9b10cb3ae60da48e9f5646a1e7f7a361af9ccee074fe8",
												"nativeSrc": "17232:163:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17330:6:9",
														"nodeType": "YulTypedName",
														"src": "17330:6:9",
														"type": ""
													}
												],
												"src": "17232:163:9"
											},
											{
												"body": {
													"nativeSrc": "17547:220:9",
													"nodeType": "YulBlock",
													"src": "17547:220:9",
													"statements": [
														{
															"nativeSrc": "17557:74:9",
															"nodeType": "YulAssignment",
															"src": "17557:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17623:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17623:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17628:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17628:2:9",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17564:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "17564:58:9"
																},
																"nativeSrc": "17564:67:9",
																"nodeType": "YulFunctionCall",
																"src": "17564:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17557:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17557:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17729:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17729:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7609fdeb66ef185b0ab9b10cb3ae60da48e9f5646a1e7f7a361af9ccee074fe8",
																	"nativeSrc": "17640:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "17640:88:9"
																},
																"nativeSrc": "17640:93:9",
																"nodeType": "YulFunctionCall",
																"src": "17640:93:9"
															},
															"nativeSrc": "17640:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "17640:93:9"
														},
														{
															"nativeSrc": "17742:19:9",
															"nodeType": "YulAssignment",
															"src": "17742:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17753:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17753:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17758:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17758:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17749:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17749:3:9"
																},
																"nativeSrc": "17749:12:9",
																"nodeType": "YulFunctionCall",
																"src": "17749:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17742:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17742:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7609fdeb66ef185b0ab9b10cb3ae60da48e9f5646a1e7f7a361af9ccee074fe8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17401:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17535:3:9",
														"nodeType": "YulTypedName",
														"src": "17535:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17543:3:9",
														"nodeType": "YulTypedName",
														"src": "17543:3:9",
														"type": ""
													}
												],
												"src": "17401:366:9"
											},
											{
												"body": {
													"nativeSrc": "17944:248:9",
													"nodeType": "YulBlock",
													"src": "17944:248:9",
													"statements": [
														{
															"nativeSrc": "17954:26:9",
															"nodeType": "YulAssignment",
															"src": "17954:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17966:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "17966:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17977:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17977:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17962:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17962:3:9"
																},
																"nativeSrc": "17962:18:9",
																"nodeType": "YulFunctionCall",
																"src": "17962:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17954:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "17954:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18001:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18001:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18012:1:9",
																				"nodeType": "YulLiteral",
																				"src": "18012:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17997:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17997:3:9"
																		},
																		"nativeSrc": "17997:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17997:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18020:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "18020:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18026:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18026:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18016:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18016:3:9"
																		},
																		"nativeSrc": "18016:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18016:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17990:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17990:6:9"
																},
																"nativeSrc": "17990:47:9",
																"nodeType": "YulFunctionCall",
																"src": "17990:47:9"
															},
															"nativeSrc": "17990:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "17990:47:9"
														},
														{
															"nativeSrc": "18046:139:9",
															"nodeType": "YulAssignment",
															"src": "18046:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18180:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "18180:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7609fdeb66ef185b0ab9b10cb3ae60da48e9f5646a1e7f7a361af9ccee074fe8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18054:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "18054:124:9"
																},
																"nativeSrc": "18054:131:9",
																"nodeType": "YulFunctionCall",
																"src": "18054:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18046:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "18046:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7609fdeb66ef185b0ab9b10cb3ae60da48e9f5646a1e7f7a361af9ccee074fe8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17773:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17924:9:9",
														"nodeType": "YulTypedName",
														"src": "17924:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17939:4:9",
														"nodeType": "YulTypedName",
														"src": "17939:4:9",
														"type": ""
													}
												],
												"src": "17773:419:9"
											},
											{
												"body": {
													"nativeSrc": "18304:60:9",
													"nodeType": "YulBlock",
													"src": "18304:60:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18326:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "18326:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18334:1:9",
																				"nodeType": "YulLiteral",
																				"src": "18334:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18322:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18322:3:9"
																		},
																		"nativeSrc": "18322:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18322:14:9"
																	},
																	{
																		"hexValue": "53746172742074696d65203c206e6f77",
																		"kind": "string",
																		"nativeSrc": "18338:18:9",
																		"nodeType": "YulLiteral",
																		"src": "18338:18:9",
																		"type": "",
																		"value": "Start time < now"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18315:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18315:6:9"
																},
																"nativeSrc": "18315:42:9",
																"nodeType": "YulFunctionCall",
																"src": "18315:42:9"
															},
															"nativeSrc": "18315:42:9",
															"nodeType": "YulExpressionStatement",
															"src": "18315:42:9"
														}
													]
												},
												"name": "store_literal_in_memory_5eaaf55bf9d9f97938479748e848dd6476dc31a543a1019ebd0759947c618e8e",
												"nativeSrc": "18198:166:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18296:6:9",
														"nodeType": "YulTypedName",
														"src": "18296:6:9",
														"type": ""
													}
												],
												"src": "18198:166:9"
											},
											{
												"body": {
													"nativeSrc": "18516:220:9",
													"nodeType": "YulBlock",
													"src": "18516:220:9",
													"statements": [
														{
															"nativeSrc": "18526:74:9",
															"nodeType": "YulAssignment",
															"src": "18526:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18592:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18592:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18597:2:9",
																		"nodeType": "YulLiteral",
																		"src": "18597:2:9",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18533:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "18533:58:9"
																},
																"nativeSrc": "18533:67:9",
																"nodeType": "YulFunctionCall",
																"src": "18533:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18526:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18526:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18698:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18698:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5eaaf55bf9d9f97938479748e848dd6476dc31a543a1019ebd0759947c618e8e",
																	"nativeSrc": "18609:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "18609:88:9"
																},
																"nativeSrc": "18609:93:9",
																"nodeType": "YulFunctionCall",
																"src": "18609:93:9"
															},
															"nativeSrc": "18609:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "18609:93:9"
														},
														{
															"nativeSrc": "18711:19:9",
															"nodeType": "YulAssignment",
															"src": "18711:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18722:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18722:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18727:2:9",
																		"nodeType": "YulLiteral",
																		"src": "18727:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18718:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18718:3:9"
																},
																"nativeSrc": "18718:12:9",
																"nodeType": "YulFunctionCall",
																"src": "18718:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18711:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18711:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5eaaf55bf9d9f97938479748e848dd6476dc31a543a1019ebd0759947c618e8e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18370:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18504:3:9",
														"nodeType": "YulTypedName",
														"src": "18504:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18512:3:9",
														"nodeType": "YulTypedName",
														"src": "18512:3:9",
														"type": ""
													}
												],
												"src": "18370:366:9"
											},
											{
												"body": {
													"nativeSrc": "18913:248:9",
													"nodeType": "YulBlock",
													"src": "18913:248:9",
													"statements": [
														{
															"nativeSrc": "18923:26:9",
															"nodeType": "YulAssignment",
															"src": "18923:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18935:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "18935:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18946:2:9",
																		"nodeType": "YulLiteral",
																		"src": "18946:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18931:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18931:3:9"
																},
																"nativeSrc": "18931:18:9",
																"nodeType": "YulFunctionCall",
																"src": "18931:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18923:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "18923:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18970:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18970:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18981:1:9",
																				"nodeType": "YulLiteral",
																				"src": "18981:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18966:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18966:3:9"
																		},
																		"nativeSrc": "18966:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18966:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18989:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "18989:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18995:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18995:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18985:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18985:3:9"
																		},
																		"nativeSrc": "18985:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18985:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18959:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18959:6:9"
																},
																"nativeSrc": "18959:47:9",
																"nodeType": "YulFunctionCall",
																"src": "18959:47:9"
															},
															"nativeSrc": "18959:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "18959:47:9"
														},
														{
															"nativeSrc": "19015:139:9",
															"nodeType": "YulAssignment",
															"src": "19015:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19149:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "19149:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5eaaf55bf9d9f97938479748e848dd6476dc31a543a1019ebd0759947c618e8e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19023:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "19023:124:9"
																},
																"nativeSrc": "19023:131:9",
																"nodeType": "YulFunctionCall",
																"src": "19023:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19015:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "19015:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5eaaf55bf9d9f97938479748e848dd6476dc31a543a1019ebd0759947c618e8e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18742:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18893:9:9",
														"nodeType": "YulTypedName",
														"src": "18893:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18908:4:9",
														"nodeType": "YulTypedName",
														"src": "18908:4:9",
														"type": ""
													}
												],
												"src": "18742:419:9"
											},
											{
												"body": {
													"nativeSrc": "19195:152:9",
													"nodeType": "YulBlock",
													"src": "19195:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19212:1:9",
																		"nodeType": "YulLiteral",
																		"src": "19212:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19215:77:9",
																		"nodeType": "YulLiteral",
																		"src": "19215:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19205:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "19205:6:9"
																},
																"nativeSrc": "19205:88:9",
																"nodeType": "YulFunctionCall",
																"src": "19205:88:9"
															},
															"nativeSrc": "19205:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "19205:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19309:1:9",
																		"nodeType": "YulLiteral",
																		"src": "19309:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19312:4:9",
																		"nodeType": "YulLiteral",
																		"src": "19312:4:9",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19302:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "19302:6:9"
																},
																"nativeSrc": "19302:15:9",
																"nodeType": "YulFunctionCall",
																"src": "19302:15:9"
															},
															"nativeSrc": "19302:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "19302:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19333:1:9",
																		"nodeType": "YulLiteral",
																		"src": "19333:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19336:4:9",
																		"nodeType": "YulLiteral",
																		"src": "19336:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "19326:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "19326:6:9"
																},
																"nativeSrc": "19326:15:9",
																"nodeType": "YulFunctionCall",
																"src": "19326:15:9"
															},
															"nativeSrc": "19326:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "19326:15:9"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "19167:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "19167:180:9"
											},
											{
												"body": {
													"nativeSrc": "19459:63:9",
													"nodeType": "YulBlock",
													"src": "19459:63:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19481:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "19481:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19489:1:9",
																				"nodeType": "YulLiteral",
																				"src": "19489:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19477:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19477:3:9"
																		},
																		"nativeSrc": "19477:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19477:14:9"
																	},
																	{
																		"hexValue": "45786365656473206d61782076657374696e67",
																		"kind": "string",
																		"nativeSrc": "19493:21:9",
																		"nodeType": "YulLiteral",
																		"src": "19493:21:9",
																		"type": "",
																		"value": "Exceeds max vesting"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19470:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "19470:6:9"
																},
																"nativeSrc": "19470:45:9",
																"nodeType": "YulFunctionCall",
																"src": "19470:45:9"
															},
															"nativeSrc": "19470:45:9",
															"nodeType": "YulExpressionStatement",
															"src": "19470:45:9"
														}
													]
												},
												"name": "store_literal_in_memory_6fe28c5722971779f2b977be3122d0195d3bb5faa8ea279e735f59ae57aaad2f",
												"nativeSrc": "19353:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19451:6:9",
														"nodeType": "YulTypedName",
														"src": "19451:6:9",
														"type": ""
													}
												],
												"src": "19353:169:9"
											},
											{
												"body": {
													"nativeSrc": "19674:220:9",
													"nodeType": "YulBlock",
													"src": "19674:220:9",
													"statements": [
														{
															"nativeSrc": "19684:74:9",
															"nodeType": "YulAssignment",
															"src": "19684:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19750:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "19750:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19755:2:9",
																		"nodeType": "YulLiteral",
																		"src": "19755:2:9",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19691:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "19691:58:9"
																},
																"nativeSrc": "19691:67:9",
																"nodeType": "YulFunctionCall",
																"src": "19691:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19684:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19684:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19856:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "19856:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6fe28c5722971779f2b977be3122d0195d3bb5faa8ea279e735f59ae57aaad2f",
																	"nativeSrc": "19767:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "19767:88:9"
																},
																"nativeSrc": "19767:93:9",
																"nodeType": "YulFunctionCall",
																"src": "19767:93:9"
															},
															"nativeSrc": "19767:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "19767:93:9"
														},
														{
															"nativeSrc": "19869:19:9",
															"nodeType": "YulAssignment",
															"src": "19869:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19880:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "19880:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19885:2:9",
																		"nodeType": "YulLiteral",
																		"src": "19885:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19876:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19876:3:9"
																},
																"nativeSrc": "19876:12:9",
																"nodeType": "YulFunctionCall",
																"src": "19876:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19869:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19869:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6fe28c5722971779f2b977be3122d0195d3bb5faa8ea279e735f59ae57aaad2f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19528:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19662:3:9",
														"nodeType": "YulTypedName",
														"src": "19662:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19670:3:9",
														"nodeType": "YulTypedName",
														"src": "19670:3:9",
														"type": ""
													}
												],
												"src": "19528:366:9"
											},
											{
												"body": {
													"nativeSrc": "20071:248:9",
													"nodeType": "YulBlock",
													"src": "20071:248:9",
													"statements": [
														{
															"nativeSrc": "20081:26:9",
															"nodeType": "YulAssignment",
															"src": "20081:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20093:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "20093:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20104:2:9",
																		"nodeType": "YulLiteral",
																		"src": "20104:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20089:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20089:3:9"
																},
																"nativeSrc": "20089:18:9",
																"nodeType": "YulFunctionCall",
																"src": "20089:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20081:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "20081:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20128:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "20128:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20139:1:9",
																				"nodeType": "YulLiteral",
																				"src": "20139:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20124:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20124:3:9"
																		},
																		"nativeSrc": "20124:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20124:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20147:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "20147:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20153:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "20153:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20143:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20143:3:9"
																		},
																		"nativeSrc": "20143:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20143:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20117:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "20117:6:9"
																},
																"nativeSrc": "20117:47:9",
																"nodeType": "YulFunctionCall",
																"src": "20117:47:9"
															},
															"nativeSrc": "20117:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "20117:47:9"
														},
														{
															"nativeSrc": "20173:139:9",
															"nodeType": "YulAssignment",
															"src": "20173:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20307:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "20307:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6fe28c5722971779f2b977be3122d0195d3bb5faa8ea279e735f59ae57aaad2f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20181:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "20181:124:9"
																},
																"nativeSrc": "20181:131:9",
																"nodeType": "YulFunctionCall",
																"src": "20181:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20173:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "20173:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6fe28c5722971779f2b977be3122d0195d3bb5faa8ea279e735f59ae57aaad2f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19900:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20051:9:9",
														"nodeType": "YulTypedName",
														"src": "20051:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20066:4:9",
														"nodeType": "YulTypedName",
														"src": "20066:4:9",
														"type": ""
													}
												],
												"src": "19900:419:9"
											},
											{
												"body": {
													"nativeSrc": "20479:288:9",
													"nodeType": "YulBlock",
													"src": "20479:288:9",
													"statements": [
														{
															"nativeSrc": "20489:26:9",
															"nodeType": "YulAssignment",
															"src": "20489:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20501:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "20501:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20512:2:9",
																		"nodeType": "YulLiteral",
																		"src": "20512:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20497:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20497:3:9"
																},
																"nativeSrc": "20497:18:9",
																"nodeType": "YulFunctionCall",
																"src": "20497:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20489:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "20489:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20569:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "20569:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20582:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "20582:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20593:1:9",
																				"nodeType": "YulLiteral",
																				"src": "20593:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20578:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20578:3:9"
																		},
																		"nativeSrc": "20578:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20578:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20525:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "20525:43:9"
																},
																"nativeSrc": "20525:71:9",
																"nodeType": "YulFunctionCall",
																"src": "20525:71:9"
															},
															"nativeSrc": "20525:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "20525:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20650:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "20650:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20663:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "20663:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20674:2:9",
																				"nodeType": "YulLiteral",
																				"src": "20674:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20659:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20659:3:9"
																		},
																		"nativeSrc": "20659:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20659:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20606:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "20606:43:9"
																},
																"nativeSrc": "20606:72:9",
																"nodeType": "YulFunctionCall",
																"src": "20606:72:9"
															},
															"nativeSrc": "20606:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "20606:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "20732:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "20732:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20745:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "20745:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20756:2:9",
																				"nodeType": "YulLiteral",
																				"src": "20756:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20741:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20741:3:9"
																		},
																		"nativeSrc": "20741:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20741:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20688:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "20688:43:9"
																},
																"nativeSrc": "20688:72:9",
																"nodeType": "YulFunctionCall",
																"src": "20688:72:9"
															},
															"nativeSrc": "20688:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "20688:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "20325:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20435:9:9",
														"nodeType": "YulTypedName",
														"src": "20435:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "20447:6:9",
														"nodeType": "YulTypedName",
														"src": "20447:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20455:6:9",
														"nodeType": "YulTypedName",
														"src": "20455:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20463:6:9",
														"nodeType": "YulTypedName",
														"src": "20463:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20474:4:9",
														"nodeType": "YulTypedName",
														"src": "20474:4:9",
														"type": ""
													}
												],
												"src": "20325:442:9"
											},
											{
												"body": {
													"nativeSrc": "20816:190:9",
													"nodeType": "YulBlock",
													"src": "20816:190:9",
													"statements": [
														{
															"nativeSrc": "20826:33:9",
															"nodeType": "YulAssignment",
															"src": "20826:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20853:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "20853:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20835:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "20835:17:9"
																},
																"nativeSrc": "20835:24:9",
																"nodeType": "YulFunctionCall",
																"src": "20835:24:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "20826:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "20826:5:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20949:22:9",
																"nodeType": "YulBlock",
																"src": "20949:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "20951:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "20951:16:9"
																			},
																			"nativeSrc": "20951:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "20951:18:9"
																		},
																		"nativeSrc": "20951:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "20951:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20874:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "20874:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20881:66:9",
																		"nodeType": "YulLiteral",
																		"src": "20881:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "20871:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "20871:2:9"
																},
																"nativeSrc": "20871:77:9",
																"nodeType": "YulFunctionCall",
																"src": "20871:77:9"
															},
															"nativeSrc": "20868:103:9",
															"nodeType": "YulIf",
															"src": "20868:103:9"
														},
														{
															"nativeSrc": "20980:20:9",
															"nodeType": "YulAssignment",
															"src": "20980:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20991:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "20991:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20998:1:9",
																		"nodeType": "YulLiteral",
																		"src": "20998:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20987:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20987:3:9"
																},
																"nativeSrc": "20987:13:9",
																"nodeType": "YulFunctionCall",
																"src": "20987:13:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "20980:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20980:3:9"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "20773:233:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20802:5:9",
														"nodeType": "YulTypedName",
														"src": "20802:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "20812:3:9",
														"nodeType": "YulTypedName",
														"src": "20812:3:9",
														"type": ""
													}
												],
												"src": "20773:233:9"
											},
											{
												"body": {
													"nativeSrc": "21072:62:9",
													"nodeType": "YulBlock",
													"src": "21072:62:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "21106:22:9",
																"nodeType": "YulBlock",
																"src": "21106:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nativeSrc": "21108:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "21108:16:9"
																			},
																			"nativeSrc": "21108:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "21108:18:9"
																		},
																		"nativeSrc": "21108:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "21108:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "21095:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "21095:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21102:1:9",
																				"nodeType": "YulLiteral",
																				"src": "21102:1:9",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "21092:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "21092:2:9"
																		},
																		"nativeSrc": "21092:12:9",
																		"nodeType": "YulFunctionCall",
																		"src": "21092:12:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "21085:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "21085:6:9"
																},
																"nativeSrc": "21085:20:9",
																"nodeType": "YulFunctionCall",
																"src": "21085:20:9"
															},
															"nativeSrc": "21082:46:9",
															"nodeType": "YulIf",
															"src": "21082:46:9"
														}
													]
												},
												"name": "validator_assert_t_enum$_ScheduleType_$3904",
												"nativeSrc": "21012:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21065:5:9",
														"nodeType": "YulTypedName",
														"src": "21065:5:9",
														"type": ""
													}
												],
												"src": "21012:122:9"
											},
											{
												"body": {
													"nativeSrc": "21202:83:9",
													"nodeType": "YulBlock",
													"src": "21202:83:9",
													"statements": [
														{
															"nativeSrc": "21212:16:9",
															"nodeType": "YulAssignment",
															"src": "21212:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "21223:5:9",
																"nodeType": "YulIdentifier",
																"src": "21223:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "21212:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "21212:7:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21273:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "21273:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_ScheduleType_$3904",
																	"nativeSrc": "21229:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "21229:43:9"
																},
																"nativeSrc": "21229:50:9",
																"nodeType": "YulFunctionCall",
																"src": "21229:50:9"
															},
															"nativeSrc": "21229:50:9",
															"nodeType": "YulExpressionStatement",
															"src": "21229:50:9"
														}
													]
												},
												"name": "cleanup_t_enum$_ScheduleType_$3904",
												"nativeSrc": "21140:145:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21184:5:9",
														"nodeType": "YulTypedName",
														"src": "21184:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "21194:7:9",
														"nodeType": "YulTypedName",
														"src": "21194:7:9",
														"type": ""
													}
												],
												"src": "21140:145:9"
											},
											{
												"body": {
													"nativeSrc": "21366:70:9",
													"nodeType": "YulBlock",
													"src": "21366:70:9",
													"statements": [
														{
															"nativeSrc": "21376:54:9",
															"nodeType": "YulAssignment",
															"src": "21376:54:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21424:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "21424:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_ScheduleType_$3904",
																	"nativeSrc": "21389:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "21389:34:9"
																},
																"nativeSrc": "21389:41:9",
																"nodeType": "YulFunctionCall",
																"src": "21389:41:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "21376:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "21376:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_ScheduleType_$3904_to_t_uint8",
												"nativeSrc": "21291:145:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21346:5:9",
														"nodeType": "YulTypedName",
														"src": "21346:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "21356:9:9",
														"nodeType": "YulTypedName",
														"src": "21356:9:9",
														"type": ""
													}
												],
												"src": "21291:145:9"
											},
											{
												"body": {
													"nativeSrc": "21522:81:9",
													"nodeType": "YulBlock",
													"src": "21522:81:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21539:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "21539:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "21590:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "21590:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_ScheduleType_$3904_to_t_uint8",
																			"nativeSrc": "21544:45:9",
																			"nodeType": "YulIdentifier",
																			"src": "21544:45:9"
																		},
																		"nativeSrc": "21544:52:9",
																		"nodeType": "YulFunctionCall",
																		"src": "21544:52:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21532:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "21532:6:9"
																},
																"nativeSrc": "21532:65:9",
																"nodeType": "YulFunctionCall",
																"src": "21532:65:9"
															},
															"nativeSrc": "21532:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "21532:65:9"
														}
													]
												},
												"name": "abi_encode_t_enum$_ScheduleType_$3904_to_t_uint8_fromStack",
												"nativeSrc": "21442:161:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21510:5:9",
														"nodeType": "YulTypedName",
														"src": "21510:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "21517:3:9",
														"nodeType": "YulTypedName",
														"src": "21517:3:9",
														"type": ""
													}
												],
												"src": "21442:161:9"
											},
											{
												"body": {
													"nativeSrc": "21750:221:9",
													"nodeType": "YulBlock",
													"src": "21750:221:9",
													"statements": [
														{
															"nativeSrc": "21760:26:9",
															"nodeType": "YulAssignment",
															"src": "21760:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21772:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "21772:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21783:2:9",
																		"nodeType": "YulLiteral",
																		"src": "21783:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21768:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "21768:3:9"
																},
																"nativeSrc": "21768:18:9",
																"nodeType": "YulFunctionCall",
																"src": "21768:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21760:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "21760:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21855:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "21855:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21868:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "21868:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21879:1:9",
																				"nodeType": "YulLiteral",
																				"src": "21879:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21864:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "21864:3:9"
																		},
																		"nativeSrc": "21864:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "21864:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_ScheduleType_$3904_to_t_uint8_fromStack",
																	"nativeSrc": "21796:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "21796:58:9"
																},
																"nativeSrc": "21796:86:9",
																"nodeType": "YulFunctionCall",
																"src": "21796:86:9"
															},
															"nativeSrc": "21796:86:9",
															"nodeType": "YulExpressionStatement",
															"src": "21796:86:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21936:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "21936:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21949:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "21949:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21960:2:9",
																				"nodeType": "YulLiteral",
																				"src": "21960:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21945:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "21945:3:9"
																		},
																		"nativeSrc": "21945:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "21945:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21892:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "21892:43:9"
																},
																"nativeSrc": "21892:72:9",
																"nodeType": "YulFunctionCall",
																"src": "21892:72:9"
															},
															"nativeSrc": "21892:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "21892:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_ScheduleType_$3904_t_uint256__to_t_uint8_t_uint256__fromStack_reversed",
												"nativeSrc": "21609:362:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21714:9:9",
														"nodeType": "YulTypedName",
														"src": "21714:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21726:6:9",
														"nodeType": "YulTypedName",
														"src": "21726:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21734:6:9",
														"nodeType": "YulTypedName",
														"src": "21734:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21745:4:9",
														"nodeType": "YulTypedName",
														"src": "21745:4:9",
														"type": ""
													}
												],
												"src": "21609:362:9"
											},
											{
												"body": {
													"nativeSrc": "22083:59:9",
													"nodeType": "YulBlock",
													"src": "22083:59:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22105:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "22105:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22113:1:9",
																				"nodeType": "YulLiteral",
																				"src": "22113:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22101:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "22101:3:9"
																		},
																		"nativeSrc": "22101:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "22101:14:9"
																	},
																	{
																		"hexValue": "496e76616c69642061646472657373",
																		"kind": "string",
																		"nativeSrc": "22117:17:9",
																		"nodeType": "YulLiteral",
																		"src": "22117:17:9",
																		"type": "",
																		"value": "Invalid address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22094:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "22094:6:9"
																},
																"nativeSrc": "22094:41:9",
																"nodeType": "YulFunctionCall",
																"src": "22094:41:9"
															},
															"nativeSrc": "22094:41:9",
															"nodeType": "YulExpressionStatement",
															"src": "22094:41:9"
														}
													]
												},
												"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
												"nativeSrc": "21977:165:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22075:6:9",
														"nodeType": "YulTypedName",
														"src": "22075:6:9",
														"type": ""
													}
												],
												"src": "21977:165:9"
											},
											{
												"body": {
													"nativeSrc": "22294:220:9",
													"nodeType": "YulBlock",
													"src": "22294:220:9",
													"statements": [
														{
															"nativeSrc": "22304:74:9",
															"nodeType": "YulAssignment",
															"src": "22304:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22370:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "22370:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22375:2:9",
																		"nodeType": "YulLiteral",
																		"src": "22375:2:9",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22311:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "22311:58:9"
																},
																"nativeSrc": "22311:67:9",
																"nodeType": "YulFunctionCall",
																"src": "22311:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22304:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "22304:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22476:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "22476:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																	"nativeSrc": "22387:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "22387:88:9"
																},
																"nativeSrc": "22387:93:9",
																"nodeType": "YulFunctionCall",
																"src": "22387:93:9"
															},
															"nativeSrc": "22387:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "22387:93:9"
														},
														{
															"nativeSrc": "22489:19:9",
															"nodeType": "YulAssignment",
															"src": "22489:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22500:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "22500:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22505:2:9",
																		"nodeType": "YulLiteral",
																		"src": "22505:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22496:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "22496:3:9"
																},
																"nativeSrc": "22496:12:9",
																"nodeType": "YulFunctionCall",
																"src": "22496:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22489:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "22489:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22148:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22282:3:9",
														"nodeType": "YulTypedName",
														"src": "22282:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22290:3:9",
														"nodeType": "YulTypedName",
														"src": "22290:3:9",
														"type": ""
													}
												],
												"src": "22148:366:9"
											},
											{
												"body": {
													"nativeSrc": "22691:248:9",
													"nodeType": "YulBlock",
													"src": "22691:248:9",
													"statements": [
														{
															"nativeSrc": "22701:26:9",
															"nodeType": "YulAssignment",
															"src": "22701:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22713:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "22713:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22724:2:9",
																		"nodeType": "YulLiteral",
																		"src": "22724:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22709:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "22709:3:9"
																},
																"nativeSrc": "22709:18:9",
																"nodeType": "YulFunctionCall",
																"src": "22709:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22701:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "22701:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22748:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "22748:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22759:1:9",
																				"nodeType": "YulLiteral",
																				"src": "22759:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22744:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "22744:3:9"
																		},
																		"nativeSrc": "22744:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "22744:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22767:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "22767:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22773:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "22773:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22763:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "22763:3:9"
																		},
																		"nativeSrc": "22763:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "22763:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22737:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "22737:6:9"
																},
																"nativeSrc": "22737:47:9",
																"nodeType": "YulFunctionCall",
																"src": "22737:47:9"
															},
															"nativeSrc": "22737:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "22737:47:9"
														},
														{
															"nativeSrc": "22793:139:9",
															"nodeType": "YulAssignment",
															"src": "22793:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22927:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "22927:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22801:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "22801:124:9"
																},
																"nativeSrc": "22801:131:9",
																"nodeType": "YulFunctionCall",
																"src": "22801:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22793:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "22793:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22520:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22671:9:9",
														"nodeType": "YulTypedName",
														"src": "22671:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22686:4:9",
														"nodeType": "YulTypedName",
														"src": "22686:4:9",
														"type": ""
													}
												],
												"src": "22520:419:9"
											},
											{
												"body": {
													"nativeSrc": "23051:57:9",
													"nodeType": "YulBlock",
													"src": "23051:57:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23073:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "23073:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23081:1:9",
																				"nodeType": "YulLiteral",
																				"src": "23081:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23069:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "23069:3:9"
																		},
																		"nativeSrc": "23069:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "23069:14:9"
																	},
																	{
																		"hexValue": "4e6f74207265766f6361626c65",
																		"kind": "string",
																		"nativeSrc": "23085:15:9",
																		"nodeType": "YulLiteral",
																		"src": "23085:15:9",
																		"type": "",
																		"value": "Not revocable"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23062:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "23062:6:9"
																},
																"nativeSrc": "23062:39:9",
																"nodeType": "YulFunctionCall",
																"src": "23062:39:9"
															},
															"nativeSrc": "23062:39:9",
															"nodeType": "YulExpressionStatement",
															"src": "23062:39:9"
														}
													]
												},
												"name": "store_literal_in_memory_64647ace897cb78bcca4304ab6d973e351886063fea5beb49e3bdcaa10dcf429",
												"nativeSrc": "22945:163:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "23043:6:9",
														"nodeType": "YulTypedName",
														"src": "23043:6:9",
														"type": ""
													}
												],
												"src": "22945:163:9"
											},
											{
												"body": {
													"nativeSrc": "23260:220:9",
													"nodeType": "YulBlock",
													"src": "23260:220:9",
													"statements": [
														{
															"nativeSrc": "23270:74:9",
															"nodeType": "YulAssignment",
															"src": "23270:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23336:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "23336:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23341:2:9",
																		"nodeType": "YulLiteral",
																		"src": "23341:2:9",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23277:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "23277:58:9"
																},
																"nativeSrc": "23277:67:9",
																"nodeType": "YulFunctionCall",
																"src": "23277:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23270:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "23270:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23442:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "23442:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_64647ace897cb78bcca4304ab6d973e351886063fea5beb49e3bdcaa10dcf429",
																	"nativeSrc": "23353:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "23353:88:9"
																},
																"nativeSrc": "23353:93:9",
																"nodeType": "YulFunctionCall",
																"src": "23353:93:9"
															},
															"nativeSrc": "23353:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "23353:93:9"
														},
														{
															"nativeSrc": "23455:19:9",
															"nodeType": "YulAssignment",
															"src": "23455:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23466:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "23466:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23471:2:9",
																		"nodeType": "YulLiteral",
																		"src": "23471:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23462:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "23462:3:9"
																},
																"nativeSrc": "23462:12:9",
																"nodeType": "YulFunctionCall",
																"src": "23462:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23455:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "23455:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_64647ace897cb78bcca4304ab6d973e351886063fea5beb49e3bdcaa10dcf429_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "23114:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23248:3:9",
														"nodeType": "YulTypedName",
														"src": "23248:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23256:3:9",
														"nodeType": "YulTypedName",
														"src": "23256:3:9",
														"type": ""
													}
												],
												"src": "23114:366:9"
											},
											{
												"body": {
													"nativeSrc": "23657:248:9",
													"nodeType": "YulBlock",
													"src": "23657:248:9",
													"statements": [
														{
															"nativeSrc": "23667:26:9",
															"nodeType": "YulAssignment",
															"src": "23667:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23679:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "23679:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23690:2:9",
																		"nodeType": "YulLiteral",
																		"src": "23690:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23675:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "23675:3:9"
																},
																"nativeSrc": "23675:18:9",
																"nodeType": "YulFunctionCall",
																"src": "23675:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23667:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "23667:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23714:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "23714:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23725:1:9",
																				"nodeType": "YulLiteral",
																				"src": "23725:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23710:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "23710:3:9"
																		},
																		"nativeSrc": "23710:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "23710:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23733:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "23733:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23739:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "23739:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23729:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "23729:3:9"
																		},
																		"nativeSrc": "23729:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "23729:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23703:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "23703:6:9"
																},
																"nativeSrc": "23703:47:9",
																"nodeType": "YulFunctionCall",
																"src": "23703:47:9"
															},
															"nativeSrc": "23703:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "23703:47:9"
														},
														{
															"nativeSrc": "23759:139:9",
															"nodeType": "YulAssignment",
															"src": "23759:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23893:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "23893:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_64647ace897cb78bcca4304ab6d973e351886063fea5beb49e3bdcaa10dcf429_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23767:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "23767:124:9"
																},
																"nativeSrc": "23767:131:9",
																"nodeType": "YulFunctionCall",
																"src": "23767:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23759:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "23759:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_64647ace897cb78bcca4304ab6d973e351886063fea5beb49e3bdcaa10dcf429__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "23486:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23637:9:9",
														"nodeType": "YulTypedName",
														"src": "23637:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23652:4:9",
														"nodeType": "YulTypedName",
														"src": "23652:4:9",
														"type": ""
													}
												],
												"src": "23486:419:9"
											},
											{
												"body": {
													"nativeSrc": "24017:59:9",
													"nodeType": "YulBlock",
													"src": "24017:59:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "24039:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "24039:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24047:1:9",
																				"nodeType": "YulLiteral",
																				"src": "24047:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24035:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "24035:3:9"
																		},
																		"nativeSrc": "24035:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "24035:14:9"
																	},
																	{
																		"hexValue": "416c7265616479207265766f6b6564",
																		"kind": "string",
																		"nativeSrc": "24051:17:9",
																		"nodeType": "YulLiteral",
																		"src": "24051:17:9",
																		"type": "",
																		"value": "Already revoked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24028:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "24028:6:9"
																},
																"nativeSrc": "24028:41:9",
																"nodeType": "YulFunctionCall",
																"src": "24028:41:9"
															},
															"nativeSrc": "24028:41:9",
															"nodeType": "YulExpressionStatement",
															"src": "24028:41:9"
														}
													]
												},
												"name": "store_literal_in_memory_ff30964d1d2e395450954287443a47ce4b7aeb0e55cf0d440f942617fe7e784c",
												"nativeSrc": "23911:165:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "24009:6:9",
														"nodeType": "YulTypedName",
														"src": "24009:6:9",
														"type": ""
													}
												],
												"src": "23911:165:9"
											},
											{
												"body": {
													"nativeSrc": "24228:220:9",
													"nodeType": "YulBlock",
													"src": "24228:220:9",
													"statements": [
														{
															"nativeSrc": "24238:74:9",
															"nodeType": "YulAssignment",
															"src": "24238:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24304:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "24304:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24309:2:9",
																		"nodeType": "YulLiteral",
																		"src": "24309:2:9",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24245:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "24245:58:9"
																},
																"nativeSrc": "24245:67:9",
																"nodeType": "YulFunctionCall",
																"src": "24245:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24238:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "24238:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24410:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "24410:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ff30964d1d2e395450954287443a47ce4b7aeb0e55cf0d440f942617fe7e784c",
																	"nativeSrc": "24321:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "24321:88:9"
																},
																"nativeSrc": "24321:93:9",
																"nodeType": "YulFunctionCall",
																"src": "24321:93:9"
															},
															"nativeSrc": "24321:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "24321:93:9"
														},
														{
															"nativeSrc": "24423:19:9",
															"nodeType": "YulAssignment",
															"src": "24423:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24434:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "24434:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24439:2:9",
																		"nodeType": "YulLiteral",
																		"src": "24439:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24430:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "24430:3:9"
																},
																"nativeSrc": "24430:12:9",
																"nodeType": "YulFunctionCall",
																"src": "24430:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24423:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "24423:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ff30964d1d2e395450954287443a47ce4b7aeb0e55cf0d440f942617fe7e784c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "24082:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24216:3:9",
														"nodeType": "YulTypedName",
														"src": "24216:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24224:3:9",
														"nodeType": "YulTypedName",
														"src": "24224:3:9",
														"type": ""
													}
												],
												"src": "24082:366:9"
											},
											{
												"body": {
													"nativeSrc": "24625:248:9",
													"nodeType": "YulBlock",
													"src": "24625:248:9",
													"statements": [
														{
															"nativeSrc": "24635:26:9",
															"nodeType": "YulAssignment",
															"src": "24635:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24647:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "24647:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24658:2:9",
																		"nodeType": "YulLiteral",
																		"src": "24658:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24643:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "24643:3:9"
																},
																"nativeSrc": "24643:18:9",
																"nodeType": "YulFunctionCall",
																"src": "24643:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24635:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "24635:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24682:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "24682:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24693:1:9",
																				"nodeType": "YulLiteral",
																				"src": "24693:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24678:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "24678:3:9"
																		},
																		"nativeSrc": "24678:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "24678:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24701:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "24701:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24707:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "24707:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24697:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "24697:3:9"
																		},
																		"nativeSrc": "24697:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "24697:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24671:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "24671:6:9"
																},
																"nativeSrc": "24671:47:9",
																"nodeType": "YulFunctionCall",
																"src": "24671:47:9"
															},
															"nativeSrc": "24671:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "24671:47:9"
														},
														{
															"nativeSrc": "24727:139:9",
															"nodeType": "YulAssignment",
															"src": "24727:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "24861:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "24861:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ff30964d1d2e395450954287443a47ce4b7aeb0e55cf0d440f942617fe7e784c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24735:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "24735:124:9"
																},
																"nativeSrc": "24735:131:9",
																"nodeType": "YulFunctionCall",
																"src": "24735:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24727:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "24727:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ff30964d1d2e395450954287443a47ce4b7aeb0e55cf0d440f942617fe7e784c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "24454:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24605:9:9",
														"nodeType": "YulTypedName",
														"src": "24605:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24620:4:9",
														"nodeType": "YulTypedName",
														"src": "24620:4:9",
														"type": ""
													}
												],
												"src": "24454:419:9"
											},
											{
												"body": {
													"nativeSrc": "24907:152:9",
													"nodeType": "YulBlock",
													"src": "24907:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24924:1:9",
																		"nodeType": "YulLiteral",
																		"src": "24924:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24927:77:9",
																		"nodeType": "YulLiteral",
																		"src": "24927:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24917:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "24917:6:9"
																},
																"nativeSrc": "24917:88:9",
																"nodeType": "YulFunctionCall",
																"src": "24917:88:9"
															},
															"nativeSrc": "24917:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "24917:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "25021:1:9",
																		"nodeType": "YulLiteral",
																		"src": "25021:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25024:4:9",
																		"nodeType": "YulLiteral",
																		"src": "25024:4:9",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25014:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "25014:6:9"
																},
																"nativeSrc": "25014:15:9",
																"nodeType": "YulFunctionCall",
																"src": "25014:15:9"
															},
															"nativeSrc": "25014:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "25014:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "25045:1:9",
																		"nodeType": "YulLiteral",
																		"src": "25045:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25048:4:9",
																		"nodeType": "YulLiteral",
																		"src": "25048:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "25038:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "25038:6:9"
																},
																"nativeSrc": "25038:15:9",
																"nodeType": "YulFunctionCall",
																"src": "25038:15:9"
															},
															"nativeSrc": "25038:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "25038:15:9"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "24879:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "24879:180:9"
											},
											{
												"body": {
													"nativeSrc": "25107:143:9",
													"nodeType": "YulBlock",
													"src": "25107:143:9",
													"statements": [
														{
															"nativeSrc": "25117:25:9",
															"nodeType": "YulAssignment",
															"src": "25117:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "25140:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "25140:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "25122:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "25122:17:9"
																},
																"nativeSrc": "25122:20:9",
																"nodeType": "YulFunctionCall",
																"src": "25122:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "25117:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "25117:1:9"
																}
															]
														},
														{
															"nativeSrc": "25151:25:9",
															"nodeType": "YulAssignment",
															"src": "25151:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "25174:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "25174:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "25156:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "25156:17:9"
																},
																"nativeSrc": "25156:20:9",
																"nodeType": "YulFunctionCall",
																"src": "25156:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "25151:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "25151:1:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "25198:22:9",
																"nodeType": "YulBlock",
																"src": "25198:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "25200:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "25200:16:9"
																			},
																			"nativeSrc": "25200:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "25200:18:9"
																		},
																		"nativeSrc": "25200:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "25200:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "25195:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "25195:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "25188:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "25188:6:9"
																},
																"nativeSrc": "25188:9:9",
																"nodeType": "YulFunctionCall",
																"src": "25188:9:9"
															},
															"nativeSrc": "25185:35:9",
															"nodeType": "YulIf",
															"src": "25185:35:9"
														},
														{
															"nativeSrc": "25230:14:9",
															"nodeType": "YulAssignment",
															"src": "25230:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "25239:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "25239:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "25242:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "25242:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "25235:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "25235:3:9"
																},
																"nativeSrc": "25235:9:9",
																"nodeType": "YulFunctionCall",
																"src": "25235:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "25230:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "25230:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "25065:185:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "25096:1:9",
														"nodeType": "YulTypedName",
														"src": "25096:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "25099:1:9",
														"nodeType": "YulTypedName",
														"src": "25099:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "25105:1:9",
														"nodeType": "YulTypedName",
														"src": "25105:1:9",
														"type": ""
													}
												],
												"src": "25065:185:9"
											},
											{
												"body": {
													"nativeSrc": "25304:362:9",
													"nodeType": "YulBlock",
													"src": "25304:362:9",
													"statements": [
														{
															"nativeSrc": "25314:25:9",
															"nodeType": "YulAssignment",
															"src": "25314:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "25337:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "25337:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "25319:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "25319:17:9"
																},
																"nativeSrc": "25319:20:9",
																"nodeType": "YulFunctionCall",
																"src": "25319:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "25314:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "25314:1:9"
																}
															]
														},
														{
															"nativeSrc": "25348:25:9",
															"nodeType": "YulAssignment",
															"src": "25348:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "25371:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "25371:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "25353:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "25353:17:9"
																},
																"nativeSrc": "25353:20:9",
																"nodeType": "YulFunctionCall",
																"src": "25353:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "25348:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "25348:1:9"
																}
															]
														},
														{
															"nativeSrc": "25382:28:9",
															"nodeType": "YulVariableDeclaration",
															"src": "25382:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "25405:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "25405:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "25408:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "25408:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "25401:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "25401:3:9"
																},
																"nativeSrc": "25401:9:9",
																"nodeType": "YulFunctionCall",
																"src": "25401:9:9"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "25386:11:9",
																	"nodeType": "YulTypedName",
																	"src": "25386:11:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "25419:41:9",
															"nodeType": "YulAssignment",
															"src": "25419:41:9",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "25448:11:9",
																		"nodeType": "YulIdentifier",
																		"src": "25448:11:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "25430:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "25430:17:9"
																},
																"nativeSrc": "25430:30:9",
																"nodeType": "YulFunctionCall",
																"src": "25430:30:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "25419:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "25419:7:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "25637:22:9",
																"nodeType": "YulBlock",
																"src": "25637:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "25639:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "25639:16:9"
																			},
																			"nativeSrc": "25639:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "25639:18:9"
																		},
																		"nativeSrc": "25639:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "25639:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "25570:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "25570:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "25563:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "25563:6:9"
																				},
																				"nativeSrc": "25563:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "25563:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "25593:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "25593:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "25600:7:9",
																								"nodeType": "YulIdentifier",
																								"src": "25600:7:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "25609:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "25609:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "25596:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "25596:3:9"
																						},
																						"nativeSrc": "25596:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "25596:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "25590:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "25590:2:9"
																				},
																				"nativeSrc": "25590:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "25590:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "25543:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "25543:2:9"
																		},
																		"nativeSrc": "25543:83:9",
																		"nodeType": "YulFunctionCall",
																		"src": "25543:83:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "25523:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "25523:6:9"
																},
																"nativeSrc": "25523:113:9",
																"nodeType": "YulFunctionCall",
																"src": "25523:113:9"
															},
															"nativeSrc": "25520:139:9",
															"nodeType": "YulIf",
															"src": "25520:139:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "25256:410:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "25287:1:9",
														"nodeType": "YulTypedName",
														"src": "25287:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "25290:1:9",
														"nodeType": "YulTypedName",
														"src": "25290:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "25296:7:9",
														"nodeType": "YulTypedName",
														"src": "25296:7:9",
														"type": ""
													}
												],
												"src": "25256:410:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_enum$_ScheduleType_$3904(value) {\n        if iszero(lt(value, 5)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_ScheduleType_$3904(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_ScheduleType_$3904(value)\n    }\n\n    function abi_decode_tuple_t_enum$_ScheduleType_$3904(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_ScheduleType_$3904(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed(headStart , value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value7,  add(headStart, 224))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_enum$_ScheduleType_$3904t_uint256t_uint256t_uint256t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7 {\n        if slt(sub(dataEnd, headStart), 256) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_ScheduleType_$3904(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 224\n\n            value7 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$225_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$225_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d4a284eb2ad24c8d181edd202519e12da1302159cff115aa7f2a0b89fe640b6b(memPtr) {\n\n        mstore(add(memPtr, 0), \"No such schedule\")\n\n    }\n\n    function abi_encode_t_stringliteral_d4a284eb2ad24c8d181edd202519e12da1302159cff115aa7f2a0b89fe640b6b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_d4a284eb2ad24c8d181edd202519e12da1302159cff115aa7f2a0b89fe640b6b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d4a284eb2ad24c8d181edd202519e12da1302159cff115aa7f2a0b89fe640b6b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d4a284eb2ad24c8d181edd202519e12da1302159cff115aa7f2a0b89fe640b6b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7dd278aa17797342e944a43d303dc8e5144706eff3594a9fda0ea14806aeeeaf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Schedule revoked\")\n\n    }\n\n    function abi_encode_t_stringliteral_7dd278aa17797342e944a43d303dc8e5144706eff3594a9fda0ea14806aeeeaf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_7dd278aa17797342e944a43d303dc8e5144706eff3594a9fda0ea14806aeeeaf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7dd278aa17797342e944a43d303dc8e5144706eff3594a9fda0ea14806aeeeaf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7dd278aa17797342e944a43d303dc8e5144706eff3594a9fda0ea14806aeeeaf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914(memPtr) {\n\n        mstore(add(memPtr, 0), \"No tokens to release\")\n\n    }\n\n    function abi_encode_t_stringliteral_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_86f5acfc12d2804bcf816c0b4c171086bf03352ff286fda75ac8ea27fcfb10a6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid beneficiary\")\n\n    }\n\n    function abi_encode_t_stringliteral_86f5acfc12d2804bcf816c0b4c171086bf03352ff286fda75ac8ea27fcfb10a6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_86f5acfc12d2804bcf816c0b4c171086bf03352ff286fda75ac8ea27fcfb10a6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_86f5acfc12d2804bcf816c0b4c171086bf03352ff286fda75ac8ea27fcfb10a6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_86f5acfc12d2804bcf816c0b4c171086bf03352ff286fda75ac8ea27fcfb10a6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8e11b6d2923bf8c6b9080d06aaf81f8e74ef4ded2c8e4af3b95302a90884a4cd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Duration must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_8e11b6d2923bf8c6b9080d06aaf81f8e74ef4ded2c8e4af3b95302a90884a4cd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_8e11b6d2923bf8c6b9080d06aaf81f8e74ef4ded2c8e4af3b95302a90884a4cd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8e11b6d2923bf8c6b9080d06aaf81f8e74ef4ded2c8e4af3b95302a90884a4cd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8e11b6d2923bf8c6b9080d06aaf81f8e74ef4ded2c8e4af3b95302a90884a4cd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d1c2f089122507431dd9d494d2cf4fefdf06d00288bbafa96c6a6e2065fe14eb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Slice period must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_d1c2f089122507431dd9d494d2cf4fefdf06d00288bbafa96c6a6e2065fe14eb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_d1c2f089122507431dd9d494d2cf4fefdf06d00288bbafa96c6a6e2065fe14eb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d1c2f089122507431dd9d494d2cf4fefdf06d00288bbafa96c6a6e2065fe14eb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d1c2f089122507431dd9d494d2cf4fefdf06d00288bbafa96c6a6e2065fe14eb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7609fdeb66ef185b0ab9b10cb3ae60da48e9f5646a1e7f7a361af9ccee074fe8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid cliff\")\n\n    }\n\n    function abi_encode_t_stringliteral_7609fdeb66ef185b0ab9b10cb3ae60da48e9f5646a1e7f7a361af9ccee074fe8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_7609fdeb66ef185b0ab9b10cb3ae60da48e9f5646a1e7f7a361af9ccee074fe8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7609fdeb66ef185b0ab9b10cb3ae60da48e9f5646a1e7f7a361af9ccee074fe8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7609fdeb66ef185b0ab9b10cb3ae60da48e9f5646a1e7f7a361af9ccee074fe8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5eaaf55bf9d9f97938479748e848dd6476dc31a543a1019ebd0759947c618e8e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Start time < now\")\n\n    }\n\n    function abi_encode_t_stringliteral_5eaaf55bf9d9f97938479748e848dd6476dc31a543a1019ebd0759947c618e8e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_5eaaf55bf9d9f97938479748e848dd6476dc31a543a1019ebd0759947c618e8e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5eaaf55bf9d9f97938479748e848dd6476dc31a543a1019ebd0759947c618e8e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5eaaf55bf9d9f97938479748e848dd6476dc31a543a1019ebd0759947c618e8e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_6fe28c5722971779f2b977be3122d0195d3bb5faa8ea279e735f59ae57aaad2f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exceeds max vesting\")\n\n    }\n\n    function abi_encode_t_stringliteral_6fe28c5722971779f2b977be3122d0195d3bb5faa8ea279e735f59ae57aaad2f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_6fe28c5722971779f2b977be3122d0195d3bb5faa8ea279e735f59ae57aaad2f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6fe28c5722971779f2b977be3122d0195d3bb5faa8ea279e735f59ae57aaad2f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6fe28c5722971779f2b977be3122d0195d3bb5faa8ea279e735f59ae57aaad2f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function validator_assert_t_enum$_ScheduleType_$3904(value) {\n        if iszero(lt(value, 5)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_ScheduleType_$3904(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_ScheduleType_$3904(value)\n    }\n\n    function convert_t_enum$_ScheduleType_$3904_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_ScheduleType_$3904(value)\n    }\n\n    function abi_encode_t_enum$_ScheduleType_$3904_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_ScheduleType_$3904_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_ScheduleType_$3904_t_uint256__to_t_uint8_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_enum$_ScheduleType_$3904_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_64647ace897cb78bcca4304ab6d973e351886063fea5beb49e3bdcaa10dcf429(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not revocable\")\n\n    }\n\n    function abi_encode_t_stringliteral_64647ace897cb78bcca4304ab6d973e351886063fea5beb49e3bdcaa10dcf429_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_64647ace897cb78bcca4304ab6d973e351886063fea5beb49e3bdcaa10dcf429(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_64647ace897cb78bcca4304ab6d973e351886063fea5beb49e3bdcaa10dcf429__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_64647ace897cb78bcca4304ab6d973e351886063fea5beb49e3bdcaa10dcf429_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ff30964d1d2e395450954287443a47ce4b7aeb0e55cf0d440f942617fe7e784c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already revoked\")\n\n    }\n\n    function abi_encode_t_stringliteral_ff30964d1d2e395450954287443a47ce4b7aeb0e55cf0d440f942617fe7e784c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_ff30964d1d2e395450954287443a47ce4b7aeb0e55cf0d440f942617fe7e784c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ff30964d1d2e395450954287443a47ce4b7aeb0e55cf0d440f942617fe7e784c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ff30964d1d2e395450954287443a47ce4b7aeb0e55cf0d440f942617fe7e784c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7F51BB1F GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xC741D92F GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC741D92F EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0xEAC449D9 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0xFC76977F EQ PUSH2 0x361 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x7F51BB1F EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0xA9BB5C4C EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0xBED9757E EQ PUSH2 0x2B6 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x45626BD6 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x45626BD6 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x4F86F440 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x238 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x2F622D2 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x37BDC99B EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x406A99AF EQ PUSH2 0x179 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH2 0x391 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x19C5 JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x177 PUSH2 0x6D1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH2 0x6E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x1A4A JUMP JUMPDEST PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D7 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x1B48 JUMP JUMPDEST PUSH2 0x76F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x204 PUSH2 0xD6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x1BF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x222 PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x240 PUSH2 0xDA4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x1C3A JUMP JUMPDEST PUSH2 0xDB7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x266 PUSH2 0xEF0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x270 PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x1C3A JUMP JUMPDEST PUSH2 0xF29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x1A4A JUMP JUMPDEST PUSH2 0xF3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E4 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH2 0x1065 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x325 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x1A4A JUMP JUMPDEST PUSH2 0x106B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x341 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x1C3A JUMP JUMPDEST PUSH2 0x13CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34B PUSH2 0x144F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x1CC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x1A4A JUMP JUMPDEST PUSH2 0x1475 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x388 SWAP2 SWAP1 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3AE PUSH2 0x1571 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3FE JUMPI PUSH2 0x3FD PUSH2 0x1CD9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD GT PUSH2 0x451 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x448 SWAP1 PUSH2 0x1D60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x4A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49A SWAP1 PUSH2 0x1DC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x529 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP PUSH2 0x15B7 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x1 ADD SLOAD DUP3 PUSH2 0x53C SWAP2 SWAP1 PUSH2 0x1E13 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x580 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x577 SWAP1 PUSH2 0x1E90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x590 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST DUP4 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F5 SWAP3 SWAP2 SWAP1 PUSH2 0x1EE1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x611 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x635 SWAP2 SWAP1 PUSH2 0x1F1C JUMP JUMPDEST PUSH2 0x674 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66B SWAP1 PUSH2 0x1F91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC5C52C2A9175470464D5EA4429889E7DF2EA88630A3D32F4D0D3D2D448656210 DUP4 PUSH1 0x40 MLOAD PUSH2 0x6BB SWAP2 SWAP1 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP PUSH2 0x6CE PUSH2 0x167C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x6D9 PUSH2 0x1685 JUMP JUMPDEST PUSH2 0x6E1 PUSH2 0x170C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x711 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP9 JUMP JUMPDEST PUSH2 0x777 PUSH2 0x1685 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DC SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP7 GT PUSH2 0x827 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x81E SWAP1 PUSH2 0x2061 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 GT PUSH2 0x869 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x860 SWAP1 PUSH2 0x20C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x8AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A2 SWAP1 PUSH2 0x2131 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x8EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E5 SWAP1 PUSH2 0x2199 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP6 LT ISZERO PUSH2 0x931 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x928 SWAP1 PUSH2 0x2201 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 DUP9 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x947 JUMPI PUSH2 0x946 PUSH2 0x221F JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x959 JUMPI PUSH2 0x958 PUSH2 0x221F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP7 PUSH1 0x5 PUSH0 DUP11 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x97E JUMPI PUSH2 0x97D PUSH2 0x221F JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x990 JUMPI PUSH2 0x98F PUSH2 0x221F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x9A8 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST GT ISZERO PUSH2 0x9E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E0 SWAP1 PUSH2 0x2296 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP10 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA48 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22B4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA64 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA88 SWAP2 SWAP1 PUSH2 0x1F1C JUMP JUMPDEST PUSH2 0xAC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABE SWAP1 PUSH2 0x1F91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x4 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xC30 SWAP1 PUSH2 0x22E9 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x7 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xC47 SWAP1 PUSH2 0x22E9 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP6 PUSH1 0x5 PUSH0 DUP10 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xC63 JUMPI PUSH2 0xC62 PUSH2 0x221F JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xC75 JUMPI PUSH2 0xC74 PUSH2 0x221F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xC8D SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x5 PUSH0 DUP10 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xCA3 JUMPI PUSH2 0xCA2 PUSH2 0x221F JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xCB5 JUMPI PUSH2 0xCB4 PUSH2 0x221F JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x4 PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xD10 SWAP2 SWAP1 PUSH2 0x1E13 JUMP JUMPDEST DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x95B841D5D108F82FDBC6ACD22E5CC30BF7A7C9DDB0DDFB615D3EE5ADC61B0967 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0xD58 SWAP3 SWAP2 SWAP1 PUSH2 0x2376 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xDAC PUSH2 0x1685 JUMP JUMPDEST PUSH2 0xDB5 PUSH0 PUSH2 0x176D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xDBF PUSH2 0x1685 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE2D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE24 SWAP1 PUSH2 0x23E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4AB5BE82436D353E61CA18726E984E561F5C1CC7C6D38B29D2553C790434705A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xEF8 PUSH2 0x1685 JUMP JUMPDEST PUSH2 0xF00 PUSH2 0x182E JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x3 PUSH0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP11 DUP2 SLOAD DUP2 LT PUSH2 0xF96 JUMPI PUSH2 0xF95 PUSH2 0x1CD9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH0 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x80 ADD MLOAD DUP6 PUSH1 0xA0 ADD MLOAD DUP7 PUSH1 0xC0 ADD MLOAD DUP8 PUSH1 0xE0 ADD MLOAD SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1073 PUSH2 0x1685 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10C3 JUMPI PUSH2 0x10C2 PUSH2 0x1CD9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD GT PUSH2 0x1116 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110D SWAP1 PUSH2 0x1D60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1166 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115D SWAP1 PUSH2 0x244F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x11B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11AF SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x123E DUP3 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP PUSH2 0x15B7 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH0 ADD SLOAD PUSH2 0x1250 SWAP2 SWAP1 PUSH2 0x1E13 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP4 PUSH1 0x6 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 DUP2 GT ISZERO PUSH2 0x1375 JUMPI PUSH1 0x2 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F5 SWAP3 SWAP2 SWAP1 PUSH2 0x1EE1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1311 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1335 SWAP2 SWAP1 PUSH2 0x1F1C JUMP JUMPDEST PUSH2 0x1374 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x136B SWAP1 PUSH2 0x1F91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5369437781E041AFE7013C48748BCB5985473926A60448846C64D514908AA8FC DUP4 PUSH1 0x40 MLOAD PUSH2 0x13BC SWAP2 SWAP1 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x13D3 PUSH2 0x1685 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1443 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x143A SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x144C DUP2 PUSH2 0x176D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x14C6 JUMPI PUSH2 0x14C5 PUSH2 0x1CD9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH2 0x155E DUP3 PUSH2 0x15B7 JUMP JUMPDEST PUSH2 0x1568 SWAP2 SWAP1 PUSH2 0x1E13 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x15AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x40 ADD MLOAD TIMESTAMP LT ISZERO PUSH2 0x15CC JUMPI PUSH0 SWAP1 POP PUSH2 0x1677 JUMP JUMPDEST DUP2 PUSH1 0x80 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x15E0 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x15EF JUMPI PUSH0 SWAP1 POP PUSH2 0x1677 JUMP JUMPDEST DUP2 PUSH1 0x60 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x1603 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST TIMESTAMP LT PUSH2 0x1614 JUMPI DUP2 PUSH0 ADD MLOAD SWAP1 POP PUSH2 0x1677 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x40 ADD MLOAD TIMESTAMP PUSH2 0x1625 SWAP2 SWAP1 PUSH2 0x1E13 JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH1 0xA0 ADD MLOAD SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0x163C SWAP2 SWAP1 PUSH2 0x2502 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 DUP3 PUSH2 0x164B SWAP2 SWAP1 PUSH2 0x2532 JUMP JUMPDEST SWAP1 POP PUSH0 DUP7 PUSH1 0x60 ADD MLOAD DUP3 DUP9 PUSH0 ADD MLOAD PUSH2 0x1662 SWAP2 SWAP1 PUSH2 0x2532 JUMP JUMPDEST PUSH2 0x166C SWAP2 SWAP1 PUSH2 0x2502 JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x168D PUSH2 0x1890 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16AB PUSH2 0xF02 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x170A JUMPI PUSH2 0x16CE PUSH2 0x1890 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1701 SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1714 PUSH2 0x1897 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1756 PUSH2 0x1890 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1763 SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1836 PUSH2 0x18D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1879 PUSH2 0x1890 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1886 SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x189F PUSH2 0xD6A JUMP JUMPDEST PUSH2 0x18D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x18DF PUSH2 0xD6A JUMP JUMPDEST ISZERO PUSH2 0x1916 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x1928 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1939 DUP2 PUSH2 0x191C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1954 JUMPI PUSH2 0x1953 PUSH2 0x1918 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1961 DUP5 DUP3 DUP6 ADD PUSH2 0x192B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x197C DUP2 PUSH2 0x196A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1995 PUSH0 DUP4 ADD DUP5 PUSH2 0x1973 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19A4 DUP2 PUSH2 0x196A JUMP JUMPDEST DUP2 EQ PUSH2 0x19AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19BF DUP2 PUSH2 0x199B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19DA JUMPI PUSH2 0x19D9 PUSH2 0x1918 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19E7 DUP5 DUP3 DUP6 ADD PUSH2 0x19B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A19 DUP3 PUSH2 0x19F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A29 DUP2 PUSH2 0x1A0F JUMP JUMPDEST DUP2 EQ PUSH2 0x1A33 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A44 DUP2 PUSH2 0x1A20 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A60 JUMPI PUSH2 0x1A5F PUSH2 0x1918 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A6D DUP6 DUP3 DUP7 ADD PUSH2 0x1A36 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A7E DUP6 DUP3 DUP7 ADD PUSH2 0x19B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A9C DUP2 PUSH2 0x1A88 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x1AB6 PUSH0 DUP4 ADD DUP12 PUSH2 0x1973 JUMP JUMPDEST PUSH2 0x1AC3 PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x1973 JUMP JUMPDEST PUSH2 0x1AD0 PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x1973 JUMP JUMPDEST PUSH2 0x1ADD PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x1973 JUMP JUMPDEST PUSH2 0x1AEA PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x1973 JUMP JUMPDEST PUSH2 0x1AF7 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x1973 JUMP JUMPDEST PUSH2 0x1B04 PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x1A93 JUMP JUMPDEST PUSH2 0x1B11 PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x1A93 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1B27 DUP2 PUSH2 0x1A88 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B31 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B42 DUP2 PUSH2 0x1B1E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x1B65 JUMPI PUSH2 0x1B64 PUSH2 0x1918 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B72 DUP12 DUP3 DUP13 ADD PUSH2 0x1A36 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x1B83 DUP12 DUP3 DUP13 ADD PUSH2 0x192B JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x1B94 DUP12 DUP3 DUP13 ADD PUSH2 0x19B1 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x1BA5 DUP12 DUP3 DUP13 ADD PUSH2 0x19B1 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0x1BB6 DUP12 DUP3 DUP13 ADD PUSH2 0x19B1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH2 0x1BC7 DUP12 DUP3 DUP13 ADD PUSH2 0x19B1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 PUSH2 0x1BD8 DUP12 DUP3 DUP13 ADD PUSH2 0x19B1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xE0 PUSH2 0x1BE9 DUP12 DUP3 DUP13 ADD PUSH2 0x1B34 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C0C PUSH0 DUP4 ADD DUP5 PUSH2 0x1A93 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C1B DUP2 PUSH2 0x1A0F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C34 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C12 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C4F JUMPI PUSH2 0x1C4E PUSH2 0x1918 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C5C DUP5 DUP3 DUP6 ADD PUSH2 0x1A36 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C88 PUSH2 0x1C83 PUSH2 0x1C7E DUP5 PUSH2 0x19F0 JUMP JUMPDEST PUSH2 0x1C65 JUMP JUMPDEST PUSH2 0x19F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C99 DUP3 PUSH2 0x1C6E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CAA DUP3 PUSH2 0x1C8F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CBA DUP2 PUSH2 0x1CA0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CD3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1CB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F2073756368207363686564756C6500000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D4A PUSH1 0x10 DUP4 PUSH2 0x1D06 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D55 DUP3 PUSH2 0x1D16 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D77 DUP2 PUSH2 0x1D3E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5363686564756C65207265766F6B656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DB2 PUSH1 0x10 DUP4 PUSH2 0x1D06 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DBD DUP3 PUSH2 0x1D7E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DDF DUP2 PUSH2 0x1DA6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1E1D DUP3 PUSH2 0x196A JUMP JUMPDEST SWAP2 POP PUSH2 0x1E28 DUP4 PUSH2 0x196A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1E40 JUMPI PUSH2 0x1E3F PUSH2 0x1DE6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320746F2072656C65617365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E7A PUSH1 0x14 DUP4 PUSH2 0x1D06 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E85 DUP3 PUSH2 0x1E46 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EA7 DUP2 PUSH2 0x1E6E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EB8 DUP3 PUSH2 0x196A JUMP JUMPDEST SWAP2 POP PUSH2 0x1EC3 DUP4 PUSH2 0x196A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1EDB JUMPI PUSH2 0x1EDA PUSH2 0x1DE6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1EF4 PUSH0 DUP4 ADD DUP6 PUSH2 0x1C12 JUMP JUMPDEST PUSH2 0x1F01 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1973 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F16 DUP2 PUSH2 0x1B1E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F31 JUMPI PUSH2 0x1F30 PUSH2 0x1918 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F3E DUP5 DUP3 DUP6 ADD PUSH2 0x1F08 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F7B PUSH1 0xF DUP4 PUSH2 0x1D06 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F86 DUP3 PUSH2 0x1F47 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FA8 DUP2 PUSH2 0x1F6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642062656E656669636961727900000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FE3 PUSH1 0x13 DUP4 PUSH2 0x1D06 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FEE DUP3 PUSH2 0x1FAF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2010 DUP2 PUSH2 0x1FD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D757374206265203E20300000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x204B PUSH1 0x12 DUP4 PUSH2 0x1D06 JUMP JUMPDEST SWAP2 POP PUSH2 0x2056 DUP3 PUSH2 0x2017 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2078 DUP2 PUSH2 0x203F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4475726174696F6E206D757374206265203E2030000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20B3 PUSH1 0x14 DUP4 PUSH2 0x1D06 JUMP JUMPDEST SWAP2 POP PUSH2 0x20BE DUP3 PUSH2 0x207F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20E0 DUP2 PUSH2 0x20A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x536C69636520706572696F64206D757374206265203E20300000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x211B PUSH1 0x18 DUP4 PUSH2 0x1D06 JUMP JUMPDEST SWAP2 POP PUSH2 0x2126 DUP3 PUSH2 0x20E7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2148 DUP2 PUSH2 0x210F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420636C69666600000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2183 PUSH1 0xD DUP4 PUSH2 0x1D06 JUMP JUMPDEST SWAP2 POP PUSH2 0x218E DUP3 PUSH2 0x214F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21B0 DUP2 PUSH2 0x2177 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53746172742074696D65203C206E6F7700000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21EB PUSH1 0x10 DUP4 PUSH2 0x1D06 JUMP JUMPDEST SWAP2 POP PUSH2 0x21F6 DUP3 PUSH2 0x21B7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2218 DUP2 PUSH2 0x21DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x45786365656473206D61782076657374696E6700000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2280 PUSH1 0x13 DUP4 PUSH2 0x1D06 JUMP JUMPDEST SWAP2 POP PUSH2 0x228B DUP3 PUSH2 0x224C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22AD DUP2 PUSH2 0x2274 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x22C7 PUSH0 DUP4 ADD DUP7 PUSH2 0x1C12 JUMP JUMPDEST PUSH2 0x22D4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C12 JUMP JUMPDEST PUSH2 0x22E1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1973 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22F3 DUP3 PUSH2 0x196A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2325 JUMPI PUSH2 0x2324 PUSH2 0x1DE6 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x2341 JUMPI PUSH2 0x2340 PUSH2 0x221F JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x2351 DUP3 PUSH2 0x2330 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2360 DUP3 PUSH2 0x2344 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2370 DUP2 PUSH2 0x2356 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2389 PUSH0 DUP4 ADD DUP6 PUSH2 0x2367 JUMP JUMPDEST PUSH2 0x2396 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1973 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23D1 PUSH1 0xF DUP4 PUSH2 0x1D06 JUMP JUMPDEST SWAP2 POP PUSH2 0x23DC DUP3 PUSH2 0x239D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23FE DUP2 PUSH2 0x23C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F74207265766F6361626C6500000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2439 PUSH1 0xD DUP4 PUSH2 0x1D06 JUMP JUMPDEST SWAP2 POP PUSH2 0x2444 DUP3 PUSH2 0x2405 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2466 DUP2 PUSH2 0x242D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C7265616479207265766F6B65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24A1 PUSH1 0xF DUP4 PUSH2 0x1D06 JUMP JUMPDEST SWAP2 POP PUSH2 0x24AC DUP3 PUSH2 0x246D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24CE DUP2 PUSH2 0x2495 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x250C DUP3 PUSH2 0x196A JUMP JUMPDEST SWAP2 POP PUSH2 0x2517 DUP4 PUSH2 0x196A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2527 JUMPI PUSH2 0x2526 PUSH2 0x24D5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x253C DUP3 PUSH2 0x196A JUMP JUMPDEST SWAP2 POP PUSH2 0x2547 DUP4 PUSH2 0x196A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2555 DUP2 PUSH2 0x196A JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x256C JUMPI PUSH2 0x256B PUSH2 0x1DE6 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0xBC PUSH10 0x375D4019D8E9697E4EB7 ADDMOD SWAP11 PUSH3 0x746138 0xC0 0xAB CREATE2 POP 0x22 0xD0 0xC5 0x4D CODECOPY SWAP8 0xED LOG0 DUP3 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "503:9041:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1688:57;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5328:801;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9477:65;;;:::i;:::-;;1751:56;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1560:61;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;3499:1755;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1850:84:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1860:23:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;9115:262:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9410:61;;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1627:55:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8030:725;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;1818:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6192:904;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1530:19:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8761:293;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1688:57;;;;;;;;;;;;;;;;;:::o;5328:801::-;2500:21:5;:19;:21::i;:::-;5397:32:8::1;5432:16;:28;5449:10;5432:28;;;;;;;;;;;;;;;5461:10;5432:40;;;;;;;;:::i;:::-;;;;;;;;;;;;5397:75;;5513:1;5490:8;:20;;;:24;5482:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;5554:8;:16;;;;;;;;;;;;5553:17;5545:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;5602:20;5625:30;5646:8;5625:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;:20;:30::i;:::-;5602:53;;5665:24;5707:8;:23;;;5692:12;:38;;;;:::i;:::-;5665:65;;5767:1;5748:16;:20;5740:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;5890:16;5864:8;:23;;;:42;;;;:::i;:::-;5838:8;:23;;:68;;;;5965:5;;;;;;;;;;;:14;;;5980:10;5992:16;5965:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5944:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;6093:10;6081;6066:56;;;6105:16;6066:56;;;;;;:::i;:::-;;;;;;;;5387:742;;;2542:20:5::0;:18;:20::i;:::-;5328:801:8;:::o;9477:65::-;1531:13:0;:11;:13::i;:::-;9525:10:8::1;:8;:10::i;:::-;9477:65::o:0;1751:56::-;;;;;;;;;;;;;;;;;:::o;1560:61::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3499:1755::-;1531:13:0;:11;:13::i;:::-;3821:1:8::1;3798:25;;:11;:25;;::::0;3790:57:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3874:1;3865:6;:10;3857:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;3927:1;3916:8;:12;3908:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;3985:1;3971:11;:15;3963:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;4045:13;4033:8;:25;;4025:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;4107:15;4094:9;:28;;4086:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;4274:16;:30;4291:12;4274:30;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;4264:6;4230:17;:31;4248:12;4230:31;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:40;;;;:::i;:::-;:74;;4209:140;;;;;;;;;;;;:::i;:::-;;;;;;;;;4420:5;;;;;;;;;;;:18;;;4439:10;4459:4;4466:6;4420:53;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4399:115;;;;;;;;;;;;:::i;:::-;;;;;;;;;4552:16;:29;4569:11;4552:29;;;;;;;;;;;;;;;4587:299;;;;;;;;4630:6;4587:299;;;;4666:1;4587:299;;;;4692:9;4587:299;;;;4725:8;4587:299;;;;4762:13;4587:299;;;;4802:11;4587:299;;;;4838:9;4587:299;;;;;;4870:5;4587:299;;;;::::0;4552:335:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4925:20;:33;4946:11;4925:33;;;;;;;;;;;;;;;;:35;;;;;;;;;:::i;:::-;;;;;;4970:21;;:23;;;;;;;;;:::i;:::-;;;;;;5071:6;5037:17;:31;5055:12;5037:31;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:40;;;;:::i;:::-;5003:17;:31;5021:12;5003:31;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:74;;;;5190:1;5154:20;:33;5175:11;5154:33;;;;;;;;;;;;;;;;:37;;;;:::i;:::-;5129:11;5093:154;;;5205:12;5231:6;5093:154;;;;;;;:::i;:::-;;;;;;;;3499:1755:::0;;;;;;;;:::o;1850:84:4:-;1897:4;1920:7;;;;;;;;;;;1913:14;;1850:84;:::o;1860:23:8:-;;;;;;;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;9115:262:8:-;1531:13:0;:11;:13::i;:::-;9220:1:8::1;9197:25;;:11;:25;;::::0;9189:53:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;9252:19;9274:8;;;;;;;;;;;9252:30;;9303:11;9292:8;;:22;;;;;;;;;;;;;;;;;;9358:11;9329:41;;9345:11;9329:41;;;;;;;;;;;;9179:198;9115:262:::0;:::o;9410:61::-;1531:13:0;:11;:13::i;:::-;9456:8:8::1;:6;:8::i;:::-;9410:61::o:0;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1627:55:8:-;;;;;;;;;;;;;;;;;:::o;8030:725::-;8153:19;8182:22;8214:17;8241:16;8267:21;8298:19;8327:14;8351:12;8380:31;8414:16;:29;8431:11;8414:29;;;;;;;;;;;;;;;8444:10;8414:41;;;;;;;;:::i;:::-;;;;;;;;;;;;8380:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8486:8;:20;;;8520:8;:23;;;8557:8;:18;;;8589:8;:17;;;8620:8;:22;;;8656:8;:20;;;8690:8;:18;;;8722:8;:16;;;8465:283;;;;;;;;;;;;;;;;;8030:725;;;;;;;;;;;:::o;1818:36::-;;;;:::o;6192:904::-;1531:13:0;:11;:13::i;:::-;6300:32:8::1;6335:16;:29;6352:11;6335:29;;;;;;;;;;;;;;;6365:10;6335:41;;;;;;;;:::i;:::-;;;;;;;;;;;;6300:76;;6417:1;6394:8;:20;;;:24;6386:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;6457:8;:18;;;;;;;;;;;;6449:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;6512:8;:16;;;;;;;;;;;;6511:17;6503:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;6612:20;6635:30;6656:8;6635:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;:20;:30::i;:::-;6612:53;;6675:20;6721:12;6698:8;:20;;;:35;;;;:::i;:::-;6675:58;;6790:4;6771:8;:16;;;:23;;;;;;;;;;;;;;;;;;6873:1;6858:12;:16;6854:159;;;6915:5;;;;;;;;;;;:14;;;6930:8;;;;;;;;;;;6940:12;6915:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6890:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;6854:159;7064:10;7051:11;7028:61;;;7076:12;7028:61;;;;;;:::i;:::-;;;;;;;;6290:806;;;6192:904:::0;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1530:19:8:-;;;;;;;;;;;;;:::o;8761:293::-;8880:7;8899:31;8933:16;:29;8950:11;8933:29;;;;;;;;;;;;;;;8963:10;8933:41;;;;;;;;:::i;:::-;;;;;;;;;;;;8899:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9024:8;:23;;;8991:30;9012:8;8991:20;:30::i;:::-;:56;;;;:::i;:::-;8984:63;;;8761:293;;;;:::o;2575:307:5:-;1899:1;2702:7;;:18;2698:86;;2743:30;;;;;;;;;;;;;;2698:86;1899:1;2858:7;:17;;;;2575:307::o;7170:812:8:-;7270:7;7311:8;:18;;;7293:15;:36;7289:75;;;7352:1;7345:8;;;;7289:75;7417:8;:22;;;7396:8;:18;;;:43;;;;:::i;:::-;7378:15;:61;7374:100;;;7462:1;7455:8;;;;7374:100;7528:8;:17;;;7507:8;:18;;;:38;;;;:::i;:::-;7488:15;:57;7484:115;;7568:8;:20;;;7561:27;;;;7484:115;7609:21;7651:8;:18;;;7633:15;:36;;;;:::i;:::-;7609:60;;7679:23;7705:8;:20;;;7679:46;;7735:20;7774:15;7758:13;:31;;;;:::i;:::-;7735:54;;7799:21;7838:15;7823:12;:30;;;;:::i;:::-;7799:54;;7864:20;7928:8;:17;;;7911:13;7888:8;:20;;;:36;;;;:::i;:::-;7887:58;;;;:::i;:::-;7864:81;;7963:12;7956:19;;;;;;;7170:812;;;;:::o;2888:208:5:-;1857:1;3068:7;:21;;;;2888:208::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2710:117:4:-;1721:16;:14;:16::i;:::-;2778:5:::1;2768:7;;:15;;;;;;;;;;;;;;;;;;2798:22;2807:12;:10;:12::i;:::-;2798:22;;;;;;:::i;:::-;;;;;;;;2710:117::o:0;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2463:115:4:-;1474:19;:17;:19::i;:::-;2532:4:::1;2522:7;;:14;;;;;;;;;;;;;;;;;;2551:20;2558:12;:10;:12::i;:::-;2551:20;;;;;;:::i;:::-;;;;;;;;2463:115::o:0;656:96:2:-;709:7;735:10;728:17;;656:96;:::o;2202:126:4:-;2265:8;:6;:8::i;:::-;2260:62;;2296:15;;;;;;;;;;;;;;2260:62;2202:126::o;2002:128::-;2067:8;:6;:8::i;:::-;2063:61;;;2098:15;;;;;;;;;;;;;;2063:61;2002:128::o;88:117:9:-;197:1;194;187:12;334:116;424:1;417:5;414:12;404:40;;440:1;437;430:12;404:40;334:116;:::o;456:173::-;519:5;557:6;544:20;535:29;;573:50;617:5;573:50;:::i;:::-;456:173;;;;:::o;635:363::-;711:6;760:2;748:9;739:7;735:23;731:32;728:119;;;766:79;;:::i;:::-;728:119;886:1;911:70;973:7;964:6;953:9;949:22;911:70;:::i;:::-;901:80;;857:134;635:363;;;;:::o;1004:77::-;1041:7;1070:5;1059:16;;1004:77;;;:::o;1087:118::-;1174:24;1192:5;1174:24;:::i;:::-;1169:3;1162:37;1087:118;;:::o;1211:222::-;1304:4;1342:2;1331:9;1327:18;1319:26;;1355:71;1423:1;1412:9;1408:17;1399:6;1355:71;:::i;:::-;1211:222;;;;:::o;1439:122::-;1512:24;1530:5;1512:24;:::i;:::-;1505:5;1502:35;1492:63;;1551:1;1548;1541:12;1492:63;1439:122;:::o;1567:139::-;1613:5;1651:6;1638:20;1629:29;;1667:33;1694:5;1667:33;:::i;:::-;1567:139;;;;:::o;1712:329::-;1771:6;1820:2;1808:9;1799:7;1795:23;1791:32;1788:119;;;1826:79;;:::i;:::-;1788:119;1946:1;1971:53;2016:7;2007:6;1996:9;1992:22;1971:53;:::i;:::-;1961:63;;1917:117;1712:329;;;;:::o;2047:126::-;2084:7;2124:42;2117:5;2113:54;2102:65;;2047:126;;;:::o;2179:96::-;2216:7;2245:24;2263:5;2245:24;:::i;:::-;2234:35;;2179:96;;;:::o;2281:122::-;2354:24;2372:5;2354:24;:::i;:::-;2347:5;2344:35;2334:63;;2393:1;2390;2383:12;2334:63;2281:122;:::o;2409:139::-;2455:5;2493:6;2480:20;2471:29;;2509:33;2536:5;2509:33;:::i;:::-;2409:139;;;;:::o;2554:474::-;2622:6;2630;2679:2;2667:9;2658:7;2654:23;2650:32;2647:119;;;2685:79;;:::i;:::-;2647:119;2805:1;2830:53;2875:7;2866:6;2855:9;2851:22;2830:53;:::i;:::-;2820:63;;2776:117;2932:2;2958:53;3003:7;2994:6;2983:9;2979:22;2958:53;:::i;:::-;2948:63;;2903:118;2554:474;;;;;:::o;3034:90::-;3068:7;3111:5;3104:13;3097:21;3086:32;;3034:90;;;:::o;3130:109::-;3211:21;3226:5;3211:21;:::i;:::-;3206:3;3199:34;3130:109;;:::o;3245:973::-;3522:4;3560:3;3549:9;3545:19;3537:27;;3574:71;3642:1;3631:9;3627:17;3618:6;3574:71;:::i;:::-;3655:72;3723:2;3712:9;3708:18;3699:6;3655:72;:::i;:::-;3737;3805:2;3794:9;3790:18;3781:6;3737:72;:::i;:::-;3819;3887:2;3876:9;3872:18;3863:6;3819:72;:::i;:::-;3901:73;3969:3;3958:9;3954:19;3945:6;3901:73;:::i;:::-;3984;4052:3;4041:9;4037:19;4028:6;3984:73;:::i;:::-;4067:67;4129:3;4118:9;4114:19;4105:6;4067:67;:::i;:::-;4144;4206:3;4195:9;4191:19;4182:6;4144:67;:::i;:::-;3245:973;;;;;;;;;;;:::o;4224:116::-;4294:21;4309:5;4294:21;:::i;:::-;4287:5;4284:32;4274:60;;4330:1;4327;4320:12;4274:60;4224:116;:::o;4346:133::-;4389:5;4427:6;4414:20;4405:29;;4443:30;4467:5;4443:30;:::i;:::-;4346:133;;;;:::o;4485:1377::-;4621:6;4629;4637;4645;4653;4661;4669;4677;4726:3;4714:9;4705:7;4701:23;4697:33;4694:120;;;4733:79;;:::i;:::-;4694:120;4853:1;4878:53;4923:7;4914:6;4903:9;4899:22;4878:53;:::i;:::-;4868:63;;4824:117;4980:2;5006:70;5068:7;5059:6;5048:9;5044:22;5006:70;:::i;:::-;4996:80;;4951:135;5125:2;5151:53;5196:7;5187:6;5176:9;5172:22;5151:53;:::i;:::-;5141:63;;5096:118;5253:2;5279:53;5324:7;5315:6;5304:9;5300:22;5279:53;:::i;:::-;5269:63;;5224:118;5381:3;5408:53;5453:7;5444:6;5433:9;5429:22;5408:53;:::i;:::-;5398:63;;5352:119;5510:3;5537:53;5582:7;5573:6;5562:9;5558:22;5537:53;:::i;:::-;5527:63;;5481:119;5639:3;5666:53;5711:7;5702:6;5691:9;5687:22;5666:53;:::i;:::-;5656:63;;5610:119;5768:3;5795:50;5837:7;5828:6;5817:9;5813:22;5795:50;:::i;:::-;5785:60;;5739:116;4485:1377;;;;;;;;;;;:::o;5868:210::-;5955:4;5993:2;5982:9;5978:18;5970:26;;6006:65;6068:1;6057:9;6053:17;6044:6;6006:65;:::i;:::-;5868:210;;;;:::o;6084:118::-;6171:24;6189:5;6171:24;:::i;:::-;6166:3;6159:37;6084:118;;:::o;6208:222::-;6301:4;6339:2;6328:9;6324:18;6316:26;;6352:71;6420:1;6409:9;6405:17;6396:6;6352:71;:::i;:::-;6208:222;;;;:::o;6436:329::-;6495:6;6544:2;6532:9;6523:7;6519:23;6515:32;6512:119;;;6550:79;;:::i;:::-;6512:119;6670:1;6695:53;6740:7;6731:6;6720:9;6716:22;6695:53;:::i;:::-;6685:63;;6641:117;6436:329;;;;:::o;6771:60::-;6799:3;6820:5;6813:12;;6771:60;;;:::o;6837:142::-;6887:9;6920:53;6938:34;6947:24;6965:5;6947:24;:::i;:::-;6938:34;:::i;:::-;6920:53;:::i;:::-;6907:66;;6837:142;;;:::o;6985:126::-;7035:9;7068:37;7099:5;7068:37;:::i;:::-;7055:50;;6985:126;;;:::o;7117:140::-;7181:9;7214:37;7245:5;7214:37;:::i;:::-;7201:50;;7117:140;;;:::o;7263:159::-;7364:51;7409:5;7364:51;:::i;:::-;7359:3;7352:64;7263:159;;:::o;7428:250::-;7535:4;7573:2;7562:9;7558:18;7550:26;;7586:85;7668:1;7657:9;7653:17;7644:6;7586:85;:::i;:::-;7428:250;;;;:::o;7684:180::-;7732:77;7729:1;7722:88;7829:4;7826:1;7819:15;7853:4;7850:1;7843:15;7870:169;7954:11;7988:6;7983:3;7976:19;8028:4;8023:3;8019:14;8004:29;;7870:169;;;;:::o;8045:166::-;8185:18;8181:1;8173:6;8169:14;8162:42;8045:166;:::o;8217:366::-;8359:3;8380:67;8444:2;8439:3;8380:67;:::i;:::-;8373:74;;8456:93;8545:3;8456:93;:::i;:::-;8574:2;8569:3;8565:12;8558:19;;8217:366;;;:::o;8589:419::-;8755:4;8793:2;8782:9;8778:18;8770:26;;8842:9;8836:4;8832:20;8828:1;8817:9;8813:17;8806:47;8870:131;8996:4;8870:131;:::i;:::-;8862:139;;8589:419;;;:::o;9014:166::-;9154:18;9150:1;9142:6;9138:14;9131:42;9014:166;:::o;9186:366::-;9328:3;9349:67;9413:2;9408:3;9349:67;:::i;:::-;9342:74;;9425:93;9514:3;9425:93;:::i;:::-;9543:2;9538:3;9534:12;9527:19;;9186:366;;;:::o;9558:419::-;9724:4;9762:2;9751:9;9747:18;9739:26;;9811:9;9805:4;9801:20;9797:1;9786:9;9782:17;9775:47;9839:131;9965:4;9839:131;:::i;:::-;9831:139;;9558:419;;;:::o;9983:180::-;10031:77;10028:1;10021:88;10128:4;10125:1;10118:15;10152:4;10149:1;10142:15;10169:194;10209:4;10229:20;10247:1;10229:20;:::i;:::-;10224:25;;10263:20;10281:1;10263:20;:::i;:::-;10258:25;;10307:1;10304;10300:9;10292:17;;10331:1;10325:4;10322:11;10319:37;;;10336:18;;:::i;:::-;10319:37;10169:194;;;;:::o;10369:170::-;10509:22;10505:1;10497:6;10493:14;10486:46;10369:170;:::o;10545:366::-;10687:3;10708:67;10772:2;10767:3;10708:67;:::i;:::-;10701:74;;10784:93;10873:3;10784:93;:::i;:::-;10902:2;10897:3;10893:12;10886:19;;10545:366;;;:::o;10917:419::-;11083:4;11121:2;11110:9;11106:18;11098:26;;11170:9;11164:4;11160:20;11156:1;11145:9;11141:17;11134:47;11198:131;11324:4;11198:131;:::i;:::-;11190:139;;10917:419;;;:::o;11342:191::-;11382:3;11401:20;11419:1;11401:20;:::i;:::-;11396:25;;11435:20;11453:1;11435:20;:::i;:::-;11430:25;;11478:1;11475;11471:9;11464:16;;11499:3;11496:1;11493:10;11490:36;;;11506:18;;:::i;:::-;11490:36;11342:191;;;;:::o;11539:332::-;11660:4;11698:2;11687:9;11683:18;11675:26;;11711:71;11779:1;11768:9;11764:17;11755:6;11711:71;:::i;:::-;11792:72;11860:2;11849:9;11845:18;11836:6;11792:72;:::i;:::-;11539:332;;;;;:::o;11877:137::-;11931:5;11962:6;11956:13;11947:22;;11978:30;12002:5;11978:30;:::i;:::-;11877:137;;;;:::o;12020:345::-;12087:6;12136:2;12124:9;12115:7;12111:23;12107:32;12104:119;;;12142:79;;:::i;:::-;12104:119;12262:1;12287:61;12340:7;12331:6;12320:9;12316:22;12287:61;:::i;:::-;12277:71;;12233:125;12020:345;;;;:::o;12371:165::-;12511:17;12507:1;12499:6;12495:14;12488:41;12371:165;:::o;12542:366::-;12684:3;12705:67;12769:2;12764:3;12705:67;:::i;:::-;12698:74;;12781:93;12870:3;12781:93;:::i;:::-;12899:2;12894:3;12890:12;12883:19;;12542:366;;;:::o;12914:419::-;13080:4;13118:2;13107:9;13103:18;13095:26;;13167:9;13161:4;13157:20;13153:1;13142:9;13138:17;13131:47;13195:131;13321:4;13195:131;:::i;:::-;13187:139;;12914:419;;;:::o;13339:169::-;13479:21;13475:1;13467:6;13463:14;13456:45;13339:169;:::o;13514:366::-;13656:3;13677:67;13741:2;13736:3;13677:67;:::i;:::-;13670:74;;13753:93;13842:3;13753:93;:::i;:::-;13871:2;13866:3;13862:12;13855:19;;13514:366;;;:::o;13886:419::-;14052:4;14090:2;14079:9;14075:18;14067:26;;14139:9;14133:4;14129:20;14125:1;14114:9;14110:17;14103:47;14167:131;14293:4;14167:131;:::i;:::-;14159:139;;13886:419;;;:::o;14311:168::-;14451:20;14447:1;14439:6;14435:14;14428:44;14311:168;:::o;14485:366::-;14627:3;14648:67;14712:2;14707:3;14648:67;:::i;:::-;14641:74;;14724:93;14813:3;14724:93;:::i;:::-;14842:2;14837:3;14833:12;14826:19;;14485:366;;;:::o;14857:419::-;15023:4;15061:2;15050:9;15046:18;15038:26;;15110:9;15104:4;15100:20;15096:1;15085:9;15081:17;15074:47;15138:131;15264:4;15138:131;:::i;:::-;15130:139;;14857:419;;;:::o;15282:170::-;15422:22;15418:1;15410:6;15406:14;15399:46;15282:170;:::o;15458:366::-;15600:3;15621:67;15685:2;15680:3;15621:67;:::i;:::-;15614:74;;15697:93;15786:3;15697:93;:::i;:::-;15815:2;15810:3;15806:12;15799:19;;15458:366;;;:::o;15830:419::-;15996:4;16034:2;16023:9;16019:18;16011:26;;16083:9;16077:4;16073:20;16069:1;16058:9;16054:17;16047:47;16111:131;16237:4;16111:131;:::i;:::-;16103:139;;15830:419;;;:::o;16255:174::-;16395:26;16391:1;16383:6;16379:14;16372:50;16255:174;:::o;16435:366::-;16577:3;16598:67;16662:2;16657:3;16598:67;:::i;:::-;16591:74;;16674:93;16763:3;16674:93;:::i;:::-;16792:2;16787:3;16783:12;16776:19;;16435:366;;;:::o;16807:419::-;16973:4;17011:2;17000:9;16996:18;16988:26;;17060:9;17054:4;17050:20;17046:1;17035:9;17031:17;17024:47;17088:131;17214:4;17088:131;:::i;:::-;17080:139;;16807:419;;;:::o;17232:163::-;17372:15;17368:1;17360:6;17356:14;17349:39;17232:163;:::o;17401:366::-;17543:3;17564:67;17628:2;17623:3;17564:67;:::i;:::-;17557:74;;17640:93;17729:3;17640:93;:::i;:::-;17758:2;17753:3;17749:12;17742:19;;17401:366;;;:::o;17773:419::-;17939:4;17977:2;17966:9;17962:18;17954:26;;18026:9;18020:4;18016:20;18012:1;18001:9;17997:17;17990:47;18054:131;18180:4;18054:131;:::i;:::-;18046:139;;17773:419;;;:::o;18198:166::-;18338:18;18334:1;18326:6;18322:14;18315:42;18198:166;:::o;18370:366::-;18512:3;18533:67;18597:2;18592:3;18533:67;:::i;:::-;18526:74;;18609:93;18698:3;18609:93;:::i;:::-;18727:2;18722:3;18718:12;18711:19;;18370:366;;;:::o;18742:419::-;18908:4;18946:2;18935:9;18931:18;18923:26;;18995:9;18989:4;18985:20;18981:1;18970:9;18966:17;18959:47;19023:131;19149:4;19023:131;:::i;:::-;19015:139;;18742:419;;;:::o;19167:180::-;19215:77;19212:1;19205:88;19312:4;19309:1;19302:15;19336:4;19333:1;19326:15;19353:169;19493:21;19489:1;19481:6;19477:14;19470:45;19353:169;:::o;19528:366::-;19670:3;19691:67;19755:2;19750:3;19691:67;:::i;:::-;19684:74;;19767:93;19856:3;19767:93;:::i;:::-;19885:2;19880:3;19876:12;19869:19;;19528:366;;;:::o;19900:419::-;20066:4;20104:2;20093:9;20089:18;20081:26;;20153:9;20147:4;20143:20;20139:1;20128:9;20124:17;20117:47;20181:131;20307:4;20181:131;:::i;:::-;20173:139;;19900:419;;;:::o;20325:442::-;20474:4;20512:2;20501:9;20497:18;20489:26;;20525:71;20593:1;20582:9;20578:17;20569:6;20525:71;:::i;:::-;20606:72;20674:2;20663:9;20659:18;20650:6;20606:72;:::i;:::-;20688;20756:2;20745:9;20741:18;20732:6;20688:72;:::i;:::-;20325:442;;;;;;:::o;20773:233::-;20812:3;20835:24;20853:5;20835:24;:::i;:::-;20826:33;;20881:66;20874:5;20871:77;20868:103;;20951:18;;:::i;:::-;20868:103;20998:1;20991:5;20987:13;20980:20;;20773:233;;;:::o;21012:122::-;21102:1;21095:5;21092:12;21082:46;;21108:18;;:::i;:::-;21082:46;21012:122;:::o;21140:145::-;21194:7;21223:5;21212:16;;21229:50;21273:5;21229:50;:::i;:::-;21140:145;;;:::o;21291:::-;21356:9;21389:41;21424:5;21389:41;:::i;:::-;21376:54;;21291:145;;;:::o;21442:161::-;21544:52;21590:5;21544:52;:::i;:::-;21539:3;21532:65;21442:161;;:::o;21609:362::-;21745:4;21783:2;21772:9;21768:18;21760:26;;21796:86;21879:1;21868:9;21864:17;21855:6;21796:86;:::i;:::-;21892:72;21960:2;21949:9;21945:18;21936:6;21892:72;:::i;:::-;21609:362;;;;;:::o;21977:165::-;22117:17;22113:1;22105:6;22101:14;22094:41;21977:165;:::o;22148:366::-;22290:3;22311:67;22375:2;22370:3;22311:67;:::i;:::-;22304:74;;22387:93;22476:3;22387:93;:::i;:::-;22505:2;22500:3;22496:12;22489:19;;22148:366;;;:::o;22520:419::-;22686:4;22724:2;22713:9;22709:18;22701:26;;22773:9;22767:4;22763:20;22759:1;22748:9;22744:17;22737:47;22801:131;22927:4;22801:131;:::i;:::-;22793:139;;22520:419;;;:::o;22945:163::-;23085:15;23081:1;23073:6;23069:14;23062:39;22945:163;:::o;23114:366::-;23256:3;23277:67;23341:2;23336:3;23277:67;:::i;:::-;23270:74;;23353:93;23442:3;23353:93;:::i;:::-;23471:2;23466:3;23462:12;23455:19;;23114:366;;;:::o;23486:419::-;23652:4;23690:2;23679:9;23675:18;23667:26;;23739:9;23733:4;23729:20;23725:1;23714:9;23710:17;23703:47;23767:131;23893:4;23767:131;:::i;:::-;23759:139;;23486:419;;;:::o;23911:165::-;24051:17;24047:1;24039:6;24035:14;24028:41;23911:165;:::o;24082:366::-;24224:3;24245:67;24309:2;24304:3;24245:67;:::i;:::-;24238:74;;24321:93;24410:3;24321:93;:::i;:::-;24439:2;24434:3;24430:12;24423:19;;24082:366;;;:::o;24454:419::-;24620:4;24658:2;24647:9;24643:18;24635:26;;24707:9;24701:4;24697:20;24693:1;24682:9;24678:17;24671:47;24735:131;24861:4;24735:131;:::i;:::-;24727:139;;24454:419;;;:::o;24879:180::-;24927:77;24924:1;24917:88;25024:4;25021:1;25014:15;25048:4;25045:1;25038:15;25065:185;25105:1;25122:20;25140:1;25122:20;:::i;:::-;25117:25;;25156:20;25174:1;25156:20;:::i;:::-;25151:25;;25195:1;25185:35;;25200:18;;:::i;:::-;25185:35;25242:1;25239;25235:9;25230:14;;25065:185;;;;:::o;25256:410::-;25296:7;25319:20;25337:1;25319:20;:::i;:::-;25314:25;;25353:20;25371:1;25353:20;:::i;:::-;25348:25;;25408:1;25405;25401:9;25430:30;25448:11;25430:30;:::i;:::-;25419:41;;25609:1;25600:7;25596:15;25593:1;25590:22;25570:1;25563:9;25543:83;25520:139;;25639:18;;:::i;:::-;25520:139;25304:362;25256:410;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1928200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"computeReleasableAmount(address,uint256)": "infinite",
								"createVestingSchedule(address,uint8,uint256,uint256,uint256,uint256,uint256,bool)": "infinite",
								"getVestingSchedule(address,uint256)": "infinite",
								"maxVestingByType(uint8)": "2802",
								"owner()": "2582",
								"pause()": "infinite",
								"paused()": "2540",
								"release(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"revoke(address,uint256)": "infinite",
								"token()": "infinite",
								"totalVestedByType(uint8)": "2736",
								"transferOwnership(address)": "infinite",
								"treasury()": "2597",
								"unpause()": "infinite",
								"updateTreasury(address)": "infinite",
								"vestingScheduleCount(address)": "2891",
								"vestingSchedules(address,uint256)": "infinite",
								"vestingSchedulesCount()": "2447"
							},
							"internal": {
								"_computeVestedAmount(struct TokenVesting.VestingSchedule memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 503,
									"end": 9544,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 503,
									"end": 9544,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 503,
									"end": 9544,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 3432,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 3432,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 3432,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 3432,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2637,
									"end": 3432,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 3432,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2637,
									"end": 3432,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 3432,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 3432,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2637,
									"end": 3432,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 3432,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 3432,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2637,
									"end": 3432,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 3432,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 3432,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 3432,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 3432,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 3432,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 3432,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 3432,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 3432,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 3432,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 3432,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 3432,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2637,
									"end": 3432,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 3432,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 3432,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 3432,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 3432,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2637,
									"end": 3432,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 3432,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 3432,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 2637,
									"end": 3432,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 3432,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2637,
									"end": 3432,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2744,
									"end": 2756,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1857,
									"end": 1858,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2061,
									"end": 2068,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1241,
									"end": 1246,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1231,
									"end": 1238,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1231,
									"end": 1238,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2794,
									"end": 2795,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2776,
									"end": 2796,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2776,
									"end": 2796,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2776,
									"end": 2782,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2776,
									"end": 2796,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2776,
									"end": 2796,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2776,
									"end": 2796,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2768,
									"end": 2822,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 2768,
									"end": 2822,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2768,
									"end": 2822,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2768,
									"end": 2822,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2768,
									"end": 2822,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2768,
									"end": 2822,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2768,
									"end": 2822,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2768,
									"end": 2822,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2768,
									"end": 2822,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2768,
									"end": 2822,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 2768,
									"end": 2822,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2768,
									"end": 2822,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 2768,
									"end": 2822,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2768,
									"end": 2822,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 2768,
									"end": 2822,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2768,
									"end": 2822,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2768,
									"end": 2822,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2768,
									"end": 2822,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2768,
									"end": 2822,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2768,
									"end": 2822,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2768,
									"end": 2822,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2768,
									"end": 2822,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2768,
									"end": 2822,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 2768,
									"end": 2822,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2861,
									"end": 2862,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2840,
									"end": 2863,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2840,
									"end": 2863,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2840,
									"end": 2849,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2840,
									"end": 2863,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2840,
									"end": 2863,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2840,
									"end": 2863,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2832,
									"end": 2892,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2832,
									"end": 2892,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2832,
									"end": 2892,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2832,
									"end": 2892,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2832,
									"end": 2892,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2832,
									"end": 2892,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2832,
									"end": 2892,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2832,
									"end": 2892,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2832,
									"end": 2892,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2832,
									"end": 2892,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 2832,
									"end": 2892,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2832,
									"end": 2892,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 2832,
									"end": 2892,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2832,
									"end": 2892,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 2832,
									"end": 2892,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2832,
									"end": 2892,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2832,
									"end": 2892,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2832,
									"end": 2892,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2832,
									"end": 2892,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2832,
									"end": 2892,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2832,
									"end": 2892,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2832,
									"end": 2892,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2832,
									"end": 2892,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2832,
									"end": 2892,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2926,
									"end": 2932,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2911,
									"end": 2916,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2911,
									"end": 2916,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2911,
									"end": 2933,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 2911,
									"end": 2933,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 2911,
									"end": 2933,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2911,
									"end": 2933,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 2911,
									"end": 2933,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2911,
									"end": 2933,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2911,
									"end": 2933,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2911,
									"end": 2933,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2911,
									"end": 2933,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2911,
									"end": 2933,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2911,
									"end": 2933,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2911,
									"end": 2933,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2911,
									"end": 2933,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2911,
									"end": 2933,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2911,
									"end": 2933,
									"modifierDepth": 1,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2911,
									"end": 2933,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2911,
									"end": 2933,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2911,
									"end": 2933,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2954,
									"end": 2963,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2943,
									"end": 2951,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 2943,
									"end": 2951,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2943,
									"end": 2963,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 2943,
									"end": 2963,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 2943,
									"end": 2963,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2943,
									"end": 2963,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 2943,
									"end": 2963,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2943,
									"end": 2963,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2943,
									"end": 2963,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2943,
									"end": 2963,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2943,
									"end": 2963,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2943,
									"end": 2963,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2943,
									"end": 2963,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2943,
									"end": 2963,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2943,
									"end": 2963,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2943,
									"end": 2963,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2943,
									"end": 2963,
									"modifierDepth": 1,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2943,
									"end": 2963,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2943,
									"end": 2963,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2943,
									"end": 2963,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3062,
									"end": 3082,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "7C13BC4B2C133C56000000"
								},
								{
									"begin": 3024,
									"end": 3040,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 3024,
									"end": 3059,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3024,
									"end": 3059,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 3024,
									"end": 3059,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3024,
									"end": 3059,
									"modifierDepth": 1,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3024,
									"end": 3059,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3024,
									"end": 3059,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 3024,
									"end": 3059,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3024,
									"end": 3059,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 3024,
									"end": 3059,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 3024,
									"end": 3059,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3024,
									"end": 3059,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 3024,
									"end": 3059,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3024,
									"end": 3059,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 3024,
									"end": 3059,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3024,
									"end": 3059,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 3024,
									"end": 3059,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3024,
									"end": 3059,
									"modifierDepth": 1,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3024,
									"end": 3059,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3024,
									"end": 3059,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 3024,
									"end": 3059,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3024,
									"end": 3059,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 3024,
									"end": 3059,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 3024,
									"end": 3059,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3024,
									"end": 3059,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 3024,
									"end": 3059,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3024,
									"end": 3059,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 3024,
									"end": 3059,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3024,
									"end": 3059,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3024,
									"end": 3059,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3024,
									"end": 3059,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3024,
									"end": 3059,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3024,
									"end": 3059,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3024,
									"end": 3059,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3024,
									"end": 3059,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3024,
									"end": 3059,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3024,
									"end": 3059,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3024,
									"end": 3059,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3024,
									"end": 3059,
									"modifierDepth": 1,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 3024,
									"end": 3082,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3024,
									"end": 3082,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3024,
									"end": 3082,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3024,
									"end": 3082,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3149,
									"end": 3169,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "CECB8F27F4200F3A000000"
								},
								{
									"begin": 3106,
									"end": 3122,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 3106,
									"end": 3146,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3123,
									"end": 3145,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3106,
									"end": 3146,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 3106,
									"end": 3146,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3106,
									"end": 3146,
									"modifierDepth": 1,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3106,
									"end": 3146,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3106,
									"end": 3146,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 3106,
									"end": 3146,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3106,
									"end": 3146,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 3106,
									"end": 3146,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 3106,
									"end": 3146,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3106,
									"end": 3146,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 3106,
									"end": 3146,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3106,
									"end": 3146,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 3106,
									"end": 3146,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3106,
									"end": 3146,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 3106,
									"end": 3146,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3106,
									"end": 3146,
									"modifierDepth": 1,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3106,
									"end": 3146,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3106,
									"end": 3146,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 3106,
									"end": 3146,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3106,
									"end": 3146,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 3106,
									"end": 3146,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 3106,
									"end": 3146,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3106,
									"end": 3146,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 3106,
									"end": 3146,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3106,
									"end": 3146,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 3106,
									"end": 3146,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3106,
									"end": 3146,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3106,
									"end": 3146,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3106,
									"end": 3146,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3106,
									"end": 3146,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3106,
									"end": 3146,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3106,
									"end": 3146,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3106,
									"end": 3146,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3106,
									"end": 3146,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3106,
									"end": 3146,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3106,
									"end": 3146,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3106,
									"end": 3146,
									"modifierDepth": 1,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 3106,
									"end": 3169,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3106,
									"end": 3169,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3106,
									"end": 3169,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3106,
									"end": 3169,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3231,
									"end": 3250,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "295BE96E64066972000000"
								},
								{
									"begin": 3188,
									"end": 3204,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 3188,
									"end": 3228,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3205,
									"end": 3227,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 3188,
									"end": 3228,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 3188,
									"end": 3228,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3228,
									"modifierDepth": 1,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3228,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3228,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 3188,
									"end": 3228,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3228,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 3188,
									"end": 3228,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 3188,
									"end": 3228,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3228,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 3188,
									"end": 3228,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3228,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 3188,
									"end": 3228,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3228,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 3188,
									"end": 3228,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3228,
									"modifierDepth": 1,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3228,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3228,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 3188,
									"end": 3228,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3228,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 3188,
									"end": 3228,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 3188,
									"end": 3228,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3228,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 3188,
									"end": 3228,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3228,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 3188,
									"end": 3228,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3228,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3228,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3228,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3188,
									"end": 3228,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3228,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3228,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3228,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3228,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3188,
									"end": 3228,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3228,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3188,
									"end": 3228,
									"modifierDepth": 1,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3250,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3250,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3250,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3250,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3315,
									"end": 3335,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "A56FA5B99019A5C8000000"
								},
								{
									"begin": 3269,
									"end": 3285,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 3269,
									"end": 3312,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3286,
									"end": 3311,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 3269,
									"end": 3312,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 3269,
									"end": 3312,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3269,
									"end": 3312,
									"modifierDepth": 1,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3269,
									"end": 3312,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3269,
									"end": 3312,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 3269,
									"end": 3312,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3269,
									"end": 3312,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 3269,
									"end": 3312,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 3269,
									"end": 3312,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3269,
									"end": 3312,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 3269,
									"end": 3312,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3269,
									"end": 3312,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 3269,
									"end": 3312,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3269,
									"end": 3312,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 3269,
									"end": 3312,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3269,
									"end": 3312,
									"modifierDepth": 1,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3269,
									"end": 3312,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3269,
									"end": 3312,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 3269,
									"end": 3312,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3269,
									"end": 3312,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 3269,
									"end": 3312,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 3269,
									"end": 3312,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3269,
									"end": 3312,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 3269,
									"end": 3312,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3269,
									"end": 3312,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 3269,
									"end": 3312,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3269,
									"end": 3312,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3269,
									"end": 3312,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3269,
									"end": 3312,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3269,
									"end": 3312,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3269,
									"end": 3312,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3269,
									"end": 3312,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3269,
									"end": 3312,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3269,
									"end": 3312,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3269,
									"end": 3312,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3269,
									"end": 3312,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3269,
									"end": 3312,
									"modifierDepth": 1,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 3269,
									"end": 3335,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3269,
									"end": 3335,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3269,
									"end": 3335,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3269,
									"end": 3335,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3397,
									"end": 3417,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "A56FA5B99019A5C8000000"
								},
								{
									"begin": 3352,
									"end": 3368,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 3352,
									"end": 3394,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3369,
									"end": 3393,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 3352,
									"end": 3394,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3352,
									"end": 3394,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3352,
									"end": 3394,
									"modifierDepth": 1,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3352,
									"end": 3394,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3352,
									"end": 3394,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3352,
									"end": 3394,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3352,
									"end": 3394,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 3352,
									"end": 3394,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 3352,
									"end": 3394,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3352,
									"end": 3394,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 3352,
									"end": 3394,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3352,
									"end": 3394,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3352,
									"end": 3394,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3352,
									"end": 3394,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 3352,
									"end": 3394,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3352,
									"end": 3394,
									"modifierDepth": 1,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3352,
									"end": 3394,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3352,
									"end": 3394,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 3352,
									"end": 3394,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3352,
									"end": 3394,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 3352,
									"end": 3394,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 3352,
									"end": 3394,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3352,
									"end": 3394,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 3352,
									"end": 3394,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3352,
									"end": 3394,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 3352,
									"end": 3394,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3352,
									"end": 3394,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3352,
									"end": 3394,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3352,
									"end": 3394,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3352,
									"end": 3394,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3352,
									"end": 3394,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3352,
									"end": 3394,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3352,
									"end": 3394,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3352,
									"end": 3394,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3352,
									"end": 3394,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3352,
									"end": 3394,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3352,
									"end": 3394,
									"modifierDepth": 1,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 3352,
									"end": 3417,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3352,
									"end": 3417,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3352,
									"end": 3417,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3352,
									"end": 3417,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 3432,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 3432,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 3432,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 503,
									"end": 9544,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 503,
									"end": 9544,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 933,
									"end": 939,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 941,
									"end": 947,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 949,
									"end": 955,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 998,
									"end": 1000,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 986,
									"end": 995,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 977,
									"end": 984,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 973,
									"end": 996,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 969,
									"end": 1001,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 1004,
									"end": 1083,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "tag",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "tag",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1124,
									"end": 1125,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 1205,
									"end": 1212,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1196,
									"end": 1202,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1185,
									"end": 1194,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1181,
									"end": 1203,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1149,
									"end": 1213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "tag",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1139,
									"end": 1213,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1139,
									"end": 1213,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1095,
									"end": 1223,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1262,
									"end": 1264,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 1344,
									"end": 1351,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1335,
									"end": 1341,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1324,
									"end": 1333,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1320,
									"end": 1342,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1288,
									"end": 1352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "tag",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1278,
									"end": 1352,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1278,
									"end": 1352,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1233,
									"end": 1362,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1401,
									"end": 1403,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 1483,
									"end": 1490,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1474,
									"end": 1480,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1463,
									"end": 1472,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1459,
									"end": 1481,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1427,
									"end": 1491,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "tag",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1417,
									"end": 1491,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1417,
									"end": 1491,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1372,
									"end": 1501,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1508,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1514,
									"end": 1632,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 1514,
									"end": 1632,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1601,
									"end": 1625,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 1619,
									"end": 1624,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1601,
									"end": 1625,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 1601,
									"end": 1625,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1601,
									"end": 1625,
									"name": "tag",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 1601,
									"end": 1625,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1596,
									"end": 1599,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1589,
									"end": 1626,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1514,
									"end": 1632,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1514,
									"end": 1632,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1514,
									"end": 1632,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "tag",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1731,
									"end": 1735,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1769,
									"end": 1771,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1758,
									"end": 1767,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1754,
									"end": 1772,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1746,
									"end": 1772,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1746,
									"end": 1772,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1782,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1850,
									"end": 1851,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1848,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1835,
									"end": 1852,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1826,
									"end": 1832,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1782,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 1782,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1782,
									"end": 1853,
									"name": "tag",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1782,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1638,
									"end": 1860,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1866,
									"end": 2035,
									"name": "tag",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 1866,
									"end": 2035,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1950,
									"end": 1961,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1984,
									"end": 1990,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1979,
									"end": 1982,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1972,
									"end": 1991,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2024,
									"end": 2028,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2019,
									"end": 2022,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2015,
									"end": 2029,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2000,
									"end": 2029,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2000,
									"end": 2029,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1866,
									"end": 2035,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1866,
									"end": 2035,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1866,
									"end": 2035,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1866,
									"end": 2035,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1866,
									"end": 2035,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2041,
									"end": 2212,
									"name": "tag",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 2041,
									"end": 2212,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2181,
									"end": 2204,
									"name": "PUSH",
									"source": 9,
									"value": "496E76616C696420746F6B656E20616464726573730000000000000000000000"
								},
								{
									"begin": 2177,
									"end": 2178,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2169,
									"end": 2175,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2165,
									"end": 2179,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2158,
									"end": 2205,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2041,
									"end": 2212,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2041,
									"end": 2212,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2218,
									"end": 2584,
									"name": "tag",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 2218,
									"end": 2584,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2360,
									"end": 2363,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2381,
									"end": 2448,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 2445,
									"end": 2447,
									"name": "PUSH",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 2440,
									"end": 2443,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2381,
									"end": 2448,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 2381,
									"end": 2448,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2381,
									"end": 2448,
									"name": "tag",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 2381,
									"end": 2448,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2374,
									"end": 2448,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2374,
									"end": 2448,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2457,
									"end": 2550,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "85"
								},
								{
									"begin": 2546,
									"end": 2549,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2457,
									"end": 2550,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 2457,
									"end": 2550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2457,
									"end": 2550,
									"name": "tag",
									"source": 9,
									"value": "85"
								},
								{
									"begin": 2457,
									"end": 2550,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2575,
									"end": 2577,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2570,
									"end": 2573,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2566,
									"end": 2578,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2559,
									"end": 2578,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2559,
									"end": 2578,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2218,
									"end": 2584,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2218,
									"end": 2584,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2218,
									"end": 2584,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2218,
									"end": 2584,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2590,
									"end": 3009,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 2590,
									"end": 3009,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2756,
									"end": 2760,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2794,
									"end": 2796,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2783,
									"end": 2792,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2779,
									"end": 2797,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2771,
									"end": 2797,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2771,
									"end": 2797,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2843,
									"end": 2852,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2837,
									"end": 2841,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2833,
									"end": 2853,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2829,
									"end": 2830,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2818,
									"end": 2827,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2814,
									"end": 2831,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2807,
									"end": 2854,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2871,
									"end": 3002,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 2997,
									"end": 3001,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2871,
									"end": 3002,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 2871,
									"end": 3002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2871,
									"end": 3002,
									"name": "tag",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 2871,
									"end": 3002,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2863,
									"end": 3002,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2863,
									"end": 3002,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2590,
									"end": 3009,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2590,
									"end": 3009,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2590,
									"end": 3009,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2590,
									"end": 3009,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3015,
									"end": 3189,
									"name": "tag",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 3015,
									"end": 3189,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3155,
									"end": 3181,
									"name": "PUSH",
									"source": 9,
									"value": "496E76616C696420747265617375727920616464726573730000000000000000"
								},
								{
									"begin": 3151,
									"end": 3152,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3143,
									"end": 3149,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3139,
									"end": 3153,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3132,
									"end": 3182,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3015,
									"end": 3189,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3015,
									"end": 3189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3195,
									"end": 3561,
									"name": "tag",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 3195,
									"end": 3561,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3337,
									"end": 3340,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3358,
									"end": 3425,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 3422,
									"end": 3424,
									"name": "PUSH",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 3417,
									"end": 3420,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3358,
									"end": 3425,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 3358,
									"end": 3425,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3358,
									"end": 3425,
									"name": "tag",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 3358,
									"end": 3425,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3351,
									"end": 3425,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3351,
									"end": 3425,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3434,
									"end": 3527,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "91"
								},
								{
									"begin": 3523,
									"end": 3526,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3434,
									"end": 3527,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 3434,
									"end": 3527,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3434,
									"end": 3527,
									"name": "tag",
									"source": 9,
									"value": "91"
								},
								{
									"begin": 3434,
									"end": 3527,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3552,
									"end": 3554,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3547,
									"end": 3550,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3543,
									"end": 3555,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3536,
									"end": 3555,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3536,
									"end": 3555,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3195,
									"end": 3561,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3195,
									"end": 3561,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3195,
									"end": 3561,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3195,
									"end": 3561,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3567,
									"end": 3986,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 3567,
									"end": 3986,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3733,
									"end": 3737,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3771,
									"end": 3773,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3760,
									"end": 3769,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3756,
									"end": 3774,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3748,
									"end": 3774,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3820,
									"end": 3829,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3814,
									"end": 3818,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3810,
									"end": 3830,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 3806,
									"end": 3807,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3795,
									"end": 3804,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3791,
									"end": 3808,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3784,
									"end": 3831,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3848,
									"end": 3979,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 3974,
									"end": 3978,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3848,
									"end": 3979,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 3848,
									"end": 3979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3848,
									"end": 3979,
									"name": "tag",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 3848,
									"end": 3979,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3840,
									"end": 3979,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3840,
									"end": 3979,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3567,
									"end": 3986,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3567,
									"end": 3986,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3567,
									"end": 3986,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3567,
									"end": 3986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3992,
									"end": 4172,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 3992,
									"end": 4172,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4040,
									"end": 4117,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4037,
									"end": 4038,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4030,
									"end": 4118,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4137,
									"end": 4141,
									"name": "PUSH",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 4134,
									"end": 4135,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 4127,
									"end": 4142,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4161,
									"end": 4165,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 4158,
									"end": 4159,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4151,
									"end": 4166,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 503,
									"end": 9544,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 503,
									"end": 9544,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 503,
									"end": 9544,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 503,
									"end": 9544,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 503,
									"end": 9544,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 503,
									"end": 9544,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 503,
									"end": 9544,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 503,
									"end": 9544,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 503,
									"end": 9544,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a1bc69375d4019d8e9697e4eb7089a62746138c0abf55022d0c54d3997eda08264736f6c634300081a0033",
									".code": [
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH",
											"source": 8,
											"value": "7F51BB1F"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH",
											"source": 8,
											"value": "C741D92F"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH",
											"source": 8,
											"value": "C741D92F"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH",
											"source": 8,
											"value": "EAC449D9"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH",
											"source": 8,
											"value": "FC0C546A"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH",
											"source": 8,
											"value": "FC76977F"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH",
											"source": 8,
											"value": "7F51BB1F"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH",
											"source": 8,
											"value": "8456CB59"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH",
											"source": 8,
											"value": "A9BB5C4C"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH",
											"source": 8,
											"value": "BED9757E"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH",
											"source": 8,
											"value": "45626BD6"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH",
											"source": 8,
											"value": "45626BD6"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH",
											"source": 8,
											"value": "4F86F440"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH",
											"source": 8,
											"value": "5C975ABB"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH",
											"source": 8,
											"value": "61D027B3"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH",
											"source": 8,
											"value": "2F622D2"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH",
											"source": 8,
											"value": "37BDC99B"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH",
											"source": 8,
											"value": "3F4BA83A"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH",
											"source": 8,
											"value": "406A99AF"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 503,
											"end": 9544,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1688,
											"end": 1745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 1688,
											"end": 1745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 1688,
											"end": 1745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 5328,
											"end": 6129,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 6129,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5328,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 5328,
											"end": 6129,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 6129,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5328,
											"end": 6129,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5328,
											"end": 6129,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5328,
											"end": 6129,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5328,
											"end": 6129,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5328,
											"end": 6129,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5328,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 5328,
											"end": 6129,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5328,
											"end": 6129,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5328,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 5328,
											"end": 6129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5328,
											"end": 6129,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 5328,
											"end": 6129,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5328,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 5328,
											"end": 6129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5328,
											"end": 6129,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 5328,
											"end": 6129,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5328,
											"end": 6129,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 9477,
											"end": 9542,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 9477,
											"end": 9542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9477,
											"end": 9542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 9477,
											"end": 9542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 9477,
											"end": 9542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9477,
											"end": 9542,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 9477,
											"end": 9542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9477,
											"end": 9542,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1751,
											"end": 1807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 1751,
											"end": 1807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 1751,
											"end": 1807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 1560,
											"end": 1621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1560,
											"end": 1621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 1560,
											"end": 1621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 5254,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 3499,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 3499,
											"end": 5254,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3499,
											"end": 5254,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 5254,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 5254,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 5254,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 5254,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 5254,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 3499,
											"end": 5254,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 5254,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 3499,
											"end": 5254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 5254,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 3499,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 3499,
											"end": 5254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 5254,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 3499,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 5254,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1850,
											"end": 1934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1850,
											"end": 1934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 1860,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 1860,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 9115,
											"end": 9377,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 9115,
											"end": 9377,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9115,
											"end": 9377,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 9115,
											"end": 9377,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9115,
											"end": 9377,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9115,
											"end": 9377,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 9115,
											"end": 9377,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9115,
											"end": 9377,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9115,
											"end": 9377,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9115,
											"end": 9377,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9115,
											"end": 9377,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 9115,
											"end": 9377,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9115,
											"end": 9377,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9115,
											"end": 9377,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 9115,
											"end": 9377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9115,
											"end": 9377,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 9115,
											"end": 9377,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9115,
											"end": 9377,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 9115,
											"end": 9377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9115,
											"end": 9377,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 9115,
											"end": 9377,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9115,
											"end": 9377,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 9410,
											"end": 9471,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 9410,
											"end": 9471,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9410,
											"end": 9471,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 9410,
											"end": 9471,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 9410,
											"end": 9471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9410,
											"end": 9471,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 9410,
											"end": 9471,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9410,
											"end": 9471,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 1627,
											"end": 1682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 1627,
											"end": 1682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 1627,
											"end": 1682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 8030,
											"end": 8755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 8030,
											"end": 8755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 8030,
											"end": 8755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 1818,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 1818,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 6192,
											"end": 7096,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 6192,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6192,
											"end": 7096,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 6192,
											"end": 7096,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6192,
											"end": 7096,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6192,
											"end": 7096,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6192,
											"end": 7096,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6192,
											"end": 7096,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6192,
											"end": 7096,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6192,
											"end": 7096,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6192,
											"end": 7096,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 6192,
											"end": 7096,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6192,
											"end": 7096,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6192,
											"end": 7096,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 6192,
											"end": 7096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6192,
											"end": 7096,
											"name": "tag",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 6192,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6192,
											"end": 7096,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 6192,
											"end": 7096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6192,
											"end": 7096,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 6192,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6192,
											"end": 7096,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1549,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1530,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 1530,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 1530,
											"end": 1549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1549,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 1530,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1549,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1530,
											"end": 1549,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 1530,
											"end": 1549,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1549,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 1530,
											"end": 1549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1549,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 1530,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1549,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1530,
											"end": 1549,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1549,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1549,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1549,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1549,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1549,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 8761,
											"end": 9054,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 8761,
											"end": 9054,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8761,
											"end": 9054,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 8761,
											"end": 9054,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8761,
											"end": 9054,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8761,
											"end": 9054,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 8761,
											"end": 9054,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8761,
											"end": 9054,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8761,
											"end": 9054,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8761,
											"end": 9054,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8761,
											"end": 9054,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 8761,
											"end": 9054,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8761,
											"end": 9054,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8761,
											"end": 9054,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 8761,
											"end": 9054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8761,
											"end": 9054,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 8761,
											"end": 9054,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8761,
											"end": 9054,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 8761,
											"end": 9054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8761,
											"end": 9054,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 8761,
											"end": 9054,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8761,
											"end": 9054,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8761,
											"end": 9054,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8761,
											"end": 9054,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 8761,
											"end": 9054,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8761,
											"end": 9054,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8761,
											"end": 9054,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 8761,
											"end": 9054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8761,
											"end": 9054,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 8761,
											"end": 9054,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8761,
											"end": 9054,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8761,
											"end": 9054,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8761,
											"end": 9054,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8761,
											"end": 9054,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8761,
											"end": 9054,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8761,
											"end": 9054,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8761,
											"end": 9054,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1745,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5328,
											"end": 6129,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 5328,
											"end": 6129,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5397,
											"end": 5429,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5432,
											"end": 5448,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 5432,
											"end": 5460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5449,
											"end": 5459,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5432,
											"end": 5460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5432,
											"end": 5460,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5432,
											"end": 5460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5432,
											"end": 5460,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5432,
											"end": 5460,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5432,
											"end": 5460,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5432,
											"end": 5460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5432,
											"end": 5460,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5432,
											"end": 5460,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5432,
											"end": 5460,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5432,
											"end": 5460,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5432,
											"end": 5460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5432,
											"end": 5460,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5432,
											"end": 5460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5432,
											"end": 5460,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5461,
											"end": 5471,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5432,
											"end": 5472,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5432,
											"end": 5472,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5432,
											"end": 5472,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5432,
											"end": 5472,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5432,
											"end": 5472,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 5432,
											"end": 5472,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5432,
											"end": 5472,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5432,
											"end": 5472,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 5432,
											"end": 5472,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5432,
											"end": 5472,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5432,
											"end": 5472,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5432,
											"end": 5472,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 5432,
											"end": 5472,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5432,
											"end": 5472,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5432,
											"end": 5472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5432,
											"end": 5472,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5432,
											"end": 5472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5432,
											"end": 5472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5432,
											"end": 5472,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5432,
											"end": 5472,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5432,
											"end": 5472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 5432,
											"end": 5472,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5432,
											"end": 5472,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5397,
											"end": 5472,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5397,
											"end": 5472,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5513,
											"end": 5514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5490,
											"end": 5498,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5490,
											"end": 5510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5490,
											"end": 5510,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5490,
											"end": 5510,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5490,
											"end": 5514,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5482,
											"end": 5535,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 5482,
											"end": 5535,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5482,
											"end": 5535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5482,
											"end": 5535,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5482,
											"end": 5535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5482,
											"end": 5535,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5482,
											"end": 5535,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5482,
											"end": 5535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5482,
											"end": 5535,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5482,
											"end": 5535,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 5482,
											"end": 5535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5482,
											"end": 5535,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 5482,
											"end": 5535,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5482,
											"end": 5535,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 5482,
											"end": 5535,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5482,
											"end": 5535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5482,
											"end": 5535,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5482,
											"end": 5535,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5482,
											"end": 5535,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5482,
											"end": 5535,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5482,
											"end": 5535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5482,
											"end": 5535,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5482,
											"end": 5535,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 5482,
											"end": 5535,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5554,
											"end": 5562,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5554,
											"end": 5570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 5554,
											"end": 5570,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5554,
											"end": 5570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5554,
											"end": 5570,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5554,
											"end": 5570,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5554,
											"end": 5570,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5554,
											"end": 5570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5554,
											"end": 5570,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 5554,
											"end": 5570,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5554,
											"end": 5570,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 5554,
											"end": 5570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 5554,
											"end": 5570,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5553,
											"end": 5570,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5545,
											"end": 5591,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 5545,
											"end": 5591,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5545,
											"end": 5591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5545,
											"end": 5591,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5545,
											"end": 5591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5545,
											"end": 5591,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5545,
											"end": 5591,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5545,
											"end": 5591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5545,
											"end": 5591,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5545,
											"end": 5591,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 5545,
											"end": 5591,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5545,
											"end": 5591,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 5545,
											"end": 5591,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5545,
											"end": 5591,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 5545,
											"end": 5591,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5545,
											"end": 5591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5545,
											"end": 5591,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5545,
											"end": 5591,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5545,
											"end": 5591,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5545,
											"end": 5591,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5545,
											"end": 5591,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5545,
											"end": 5591,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5545,
											"end": 5591,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 5545,
											"end": 5591,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5602,
											"end": 5622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 5646,
											"end": 5654,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5645,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 5625,
											"end": 5655,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 5625,
											"end": 5655,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5602,
											"end": 5655,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5602,
											"end": 5655,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5665,
											"end": 5689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5707,
											"end": 5715,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5707,
											"end": 5730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5707,
											"end": 5730,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5707,
											"end": 5730,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5704,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5730,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 5692,
											"end": 5730,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5730,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5730,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 5692,
											"end": 5730,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5730,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 5692,
											"end": 5730,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5665,
											"end": 5730,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5665,
											"end": 5730,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5767,
											"end": 5768,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5748,
											"end": 5764,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5748,
											"end": 5768,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5740,
											"end": 5793,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 5740,
											"end": 5793,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5740,
											"end": 5793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5740,
											"end": 5793,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5740,
											"end": 5793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5740,
											"end": 5793,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5740,
											"end": 5793,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5740,
											"end": 5793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5740,
											"end": 5793,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5740,
											"end": 5793,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 5740,
											"end": 5793,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5740,
											"end": 5793,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 5740,
											"end": 5793,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5740,
											"end": 5793,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 5740,
											"end": 5793,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5740,
											"end": 5793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5740,
											"end": 5793,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5740,
											"end": 5793,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5740,
											"end": 5793,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5740,
											"end": 5793,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5740,
											"end": 5793,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5740,
											"end": 5793,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5740,
											"end": 5793,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 5740,
											"end": 5793,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5890,
											"end": 5906,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5864,
											"end": 5872,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5864,
											"end": 5887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5864,
											"end": 5887,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5864,
											"end": 5887,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5864,
											"end": 5906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 5864,
											"end": 5906,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5864,
											"end": 5906,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5864,
											"end": 5906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 5864,
											"end": 5906,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5864,
											"end": 5906,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 5864,
											"end": 5906,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5838,
											"end": 5846,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5838,
											"end": 5861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5838,
											"end": 5861,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5838,
											"end": 5906,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5838,
											"end": 5906,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5838,
											"end": 5906,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5838,
											"end": 5906,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 5970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 5965,
											"end": 5970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5965,
											"end": 5970,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 5970,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 5970,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 5970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5965,
											"end": 5970,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 5970,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 5970,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 5970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5965,
											"end": 5970,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 5979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5965,
											"end": 5979,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 5979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 5980,
											"end": 5990,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5992,
											"end": 6008,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 5965,
											"end": 6009,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5965,
											"end": 6009,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 5965,
											"end": 6009,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 5965,
											"end": 6009,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 6050,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 5944,
											"end": 6050,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 6050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5944,
											"end": 6050,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 6050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5944,
											"end": 6050,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 6050,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 6050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5944,
											"end": 6050,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 6050,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 5944,
											"end": 6050,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 6050,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 5944,
											"end": 6050,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 6050,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 5944,
											"end": 6050,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 6050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5944,
											"end": 6050,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 6050,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 6050,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 6050,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 6050,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 6050,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 6050,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 5944,
											"end": 6050,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6093,
											"end": 6103,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6081,
											"end": 6091,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 6066,
											"end": 6122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6066,
											"end": 6122,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6066,
											"end": 6122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "C5C52C2A9175470464D5EA4429889E7DF2EA88630A3D32F4D0D3D2D448656210"
										},
										{
											"begin": 6105,
											"end": 6121,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6066,
											"end": 6122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6066,
											"end": 6122,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6066,
											"end": 6122,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 6066,
											"end": 6122,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6066,
											"end": 6122,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6066,
											"end": 6122,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 6066,
											"end": 6122,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6066,
											"end": 6122,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 6066,
											"end": 6122,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6066,
											"end": 6122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6066,
											"end": 6122,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6066,
											"end": 6122,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6066,
											"end": 6122,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6066,
											"end": 6122,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6066,
											"end": 6122,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6066,
											"end": 6122,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 5387,
											"end": 6129,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5387,
											"end": 6129,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5387,
											"end": 6129,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2542,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2542,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5328,
											"end": 6129,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5328,
											"end": 6129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9477,
											"end": 9542,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 9477,
											"end": 9542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9525,
											"end": 9535,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 9525,
											"end": 9533,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 9525,
											"end": 9535,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9525,
											"end": 9535,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 9525,
											"end": 9535,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9477,
											"end": 9542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1807,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 5254,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 3499,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3821,
											"end": 3822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3798,
											"end": 3823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3798,
											"end": 3823,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 3809,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 3823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3798,
											"end": 3823,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 3823,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3790,
											"end": 3847,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 3790,
											"end": 3847,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3790,
											"end": 3847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3790,
											"end": 3847,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3790,
											"end": 3847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3790,
											"end": 3847,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3790,
											"end": 3847,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3790,
											"end": 3847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3790,
											"end": 3847,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3790,
											"end": 3847,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 3790,
											"end": 3847,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3790,
											"end": 3847,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 3790,
											"end": 3847,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3790,
											"end": 3847,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 3790,
											"end": 3847,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3790,
											"end": 3847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3790,
											"end": 3847,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3790,
											"end": 3847,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3790,
											"end": 3847,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3790,
											"end": 3847,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3790,
											"end": 3847,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3790,
											"end": 3847,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3790,
											"end": 3847,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 3790,
											"end": 3847,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3874,
											"end": 3875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3865,
											"end": 3871,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3865,
											"end": 3875,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3857,
											"end": 3898,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 3857,
											"end": 3898,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3857,
											"end": 3898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3857,
											"end": 3898,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3857,
											"end": 3898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3857,
											"end": 3898,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3857,
											"end": 3898,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3857,
											"end": 3898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3857,
											"end": 3898,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3857,
											"end": 3898,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 3857,
											"end": 3898,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3857,
											"end": 3898,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 3857,
											"end": 3898,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3857,
											"end": 3898,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 3857,
											"end": 3898,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3857,
											"end": 3898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3857,
											"end": 3898,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3857,
											"end": 3898,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3857,
											"end": 3898,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3857,
											"end": 3898,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3857,
											"end": 3898,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3857,
											"end": 3898,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3857,
											"end": 3898,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 3857,
											"end": 3898,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3927,
											"end": 3928,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3916,
											"end": 3924,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3916,
											"end": 3928,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 3953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 3908,
											"end": 3953,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 3953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3908,
											"end": 3953,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 3953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3908,
											"end": 3953,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 3953,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 3953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3908,
											"end": 3953,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 3953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 3908,
											"end": 3953,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 3953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 3908,
											"end": 3953,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 3953,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 3908,
											"end": 3953,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 3953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3908,
											"end": 3953,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 3953,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 3953,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 3953,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 3953,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 3953,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 3953,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 3908,
											"end": 3953,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3985,
											"end": 3986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3982,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3971,
											"end": 3986,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3963,
											"end": 4015,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 3963,
											"end": 4015,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3963,
											"end": 4015,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3963,
											"end": 4015,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3963,
											"end": 4015,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3963,
											"end": 4015,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3963,
											"end": 4015,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3963,
											"end": 4015,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3963,
											"end": 4015,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3963,
											"end": 4015,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 3963,
											"end": 4015,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3963,
											"end": 4015,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 3963,
											"end": 4015,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3963,
											"end": 4015,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 3963,
											"end": 4015,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3963,
											"end": 4015,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3963,
											"end": 4015,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3963,
											"end": 4015,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3963,
											"end": 4015,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3963,
											"end": 4015,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3963,
											"end": 4015,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3963,
											"end": 4015,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3963,
											"end": 4015,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 3963,
											"end": 4015,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4045,
											"end": 4058,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4033,
											"end": 4041,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4033,
											"end": 4058,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4033,
											"end": 4058,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4025,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 4025,
											"end": 4076,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4025,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4025,
											"end": 4076,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4025,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4025,
											"end": 4076,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4025,
											"end": 4076,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4025,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4025,
											"end": 4076,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4025,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 4025,
											"end": 4076,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4025,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 4025,
											"end": 4076,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4025,
											"end": 4076,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 4025,
											"end": 4076,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4025,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4025,
											"end": 4076,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4025,
											"end": 4076,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4025,
											"end": 4076,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4025,
											"end": 4076,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4025,
											"end": 4076,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4025,
											"end": 4076,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4025,
											"end": 4076,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 4025,
											"end": 4076,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4107,
											"end": 4122,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 4094,
											"end": 4103,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4094,
											"end": 4122,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4094,
											"end": 4122,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4143,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 4086,
											"end": 4143,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4086,
											"end": 4143,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4086,
											"end": 4143,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4143,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4086,
											"end": 4143,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4143,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 4086,
											"end": 4143,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4143,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 4086,
											"end": 4143,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4143,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 4086,
											"end": 4143,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4086,
											"end": 4143,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4143,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4143,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4143,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4143,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4143,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4143,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 4086,
											"end": 4143,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4274,
											"end": 4290,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 4274,
											"end": 4304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4291,
											"end": 4303,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4274,
											"end": 4304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4274,
											"end": 4304,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4274,
											"end": 4304,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4274,
											"end": 4304,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4274,
											"end": 4304,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 4274,
											"end": 4304,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4274,
											"end": 4304,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 4274,
											"end": 4304,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 4274,
											"end": 4304,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4274,
											"end": 4304,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 4274,
											"end": 4304,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4274,
											"end": 4304,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 4274,
											"end": 4304,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4274,
											"end": 4304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4274,
											"end": 4304,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4274,
											"end": 4304,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4274,
											"end": 4304,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4274,
											"end": 4304,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 4274,
											"end": 4304,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4274,
											"end": 4304,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 4274,
											"end": 4304,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 4274,
											"end": 4304,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4274,
											"end": 4304,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 4274,
											"end": 4304,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4274,
											"end": 4304,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 4274,
											"end": 4304,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4274,
											"end": 4304,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4274,
											"end": 4304,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4274,
											"end": 4304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4274,
											"end": 4304,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4274,
											"end": 4304,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4274,
											"end": 4304,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4274,
											"end": 4304,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4274,
											"end": 4304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4274,
											"end": 4304,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4274,
											"end": 4304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4274,
											"end": 4304,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4274,
											"end": 4304,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4264,
											"end": 4270,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 4230,
											"end": 4261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4248,
											"end": 4260,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4230,
											"end": 4261,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4261,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4261,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4261,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 4230,
											"end": 4261,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4261,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 4230,
											"end": 4261,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 4230,
											"end": 4261,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4261,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 4230,
											"end": 4261,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4261,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 4230,
											"end": 4261,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4230,
											"end": 4261,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4261,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4261,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4261,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 4230,
											"end": 4261,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4261,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 4230,
											"end": 4261,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 4230,
											"end": 4261,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4261,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 4230,
											"end": 4261,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4261,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 4230,
											"end": 4261,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4261,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4261,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4230,
											"end": 4261,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4261,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4261,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4261,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4230,
											"end": 4261,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4230,
											"end": 4261,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4261,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4270,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 4230,
											"end": 4270,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4270,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4270,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 4230,
											"end": 4270,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4270,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 4230,
											"end": 4270,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4304,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4304,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4349,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 4209,
											"end": 4349,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4209,
											"end": 4349,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4209,
											"end": 4349,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4349,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4209,
											"end": 4349,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4349,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 4209,
											"end": 4349,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4349,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 4209,
											"end": 4349,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4349,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 4209,
											"end": 4349,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4209,
											"end": 4349,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4349,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4349,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4349,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4349,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4349,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4349,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 4209,
											"end": 4349,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4420,
											"end": 4425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4420,
											"end": 4425,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4425,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4425,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4420,
											"end": 4425,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4425,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4425,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4420,
											"end": 4425,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4420,
											"end": 4438,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 4439,
											"end": 4449,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4459,
											"end": 4463,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 4466,
											"end": 4472,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 4420,
											"end": 4473,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4420,
											"end": 4473,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 4420,
											"end": 4473,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 4420,
											"end": 4473,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4399,
											"end": 4514,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 4399,
											"end": 4514,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4399,
											"end": 4514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4399,
											"end": 4514,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4399,
											"end": 4514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4399,
											"end": 4514,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4399,
											"end": 4514,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4399,
											"end": 4514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4399,
											"end": 4514,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4399,
											"end": 4514,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 4399,
											"end": 4514,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4399,
											"end": 4514,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 4399,
											"end": 4514,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4399,
											"end": 4514,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 4399,
											"end": 4514,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4399,
											"end": 4514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4399,
											"end": 4514,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4399,
											"end": 4514,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4399,
											"end": 4514,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4399,
											"end": 4514,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4399,
											"end": 4514,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4399,
											"end": 4514,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4399,
											"end": 4514,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 4399,
											"end": 4514,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 4552,
											"end": 4581,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4569,
											"end": 4580,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4581,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4552,
											"end": 4581,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4581,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4552,
											"end": 4581,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4581,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4581,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4581,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4552,
											"end": 4581,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4581,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4581,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4581,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4581,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4552,
											"end": 4581,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4581,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4552,
											"end": 4581,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4630,
											"end": 4636,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4692,
											"end": 4701,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4725,
											"end": 4733,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4762,
											"end": 4775,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4802,
											"end": 4813,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4838,
											"end": 4847,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4870,
											"end": 4875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4587,
											"end": 4886,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4587,
											"end": 4886,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4887,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4925,
											"end": 4945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4925,
											"end": 4958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4946,
											"end": 4957,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 4925,
											"end": 4958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4925,
											"end": 4958,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4925,
											"end": 4958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4925,
											"end": 4958,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4925,
											"end": 4958,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4925,
											"end": 4958,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4925,
											"end": 4958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4925,
											"end": 4958,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4925,
											"end": 4958,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4925,
											"end": 4958,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4925,
											"end": 4958,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4925,
											"end": 4958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4925,
											"end": 4958,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4925,
											"end": 4958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4925,
											"end": 4958,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4925,
											"end": 4958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4925,
											"end": 4960,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4925,
											"end": 4960,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4925,
											"end": 4960,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4925,
											"end": 4960,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4925,
											"end": 4960,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4925,
											"end": 4960,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4925,
											"end": 4960,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 4925,
											"end": 4960,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4925,
											"end": 4960,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 4925,
											"end": 4960,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4925,
											"end": 4960,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 4925,
											"end": 4960,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4925,
											"end": 4960,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4925,
											"end": 4960,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4925,
											"end": 4960,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4925,
											"end": 4960,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4925,
											"end": 4960,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4970,
											"end": 4991,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 4970,
											"end": 4991,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4970,
											"end": 4993,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4970,
											"end": 4993,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4970,
											"end": 4993,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4970,
											"end": 4993,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4970,
											"end": 4993,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4970,
											"end": 4993,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4970,
											"end": 4993,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 4970,
											"end": 4993,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4970,
											"end": 4993,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 4970,
											"end": 4993,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4970,
											"end": 4993,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 4970,
											"end": 4993,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4970,
											"end": 4993,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4970,
											"end": 4993,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4970,
											"end": 4993,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4970,
											"end": 4993,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4970,
											"end": 4993,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5077,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5037,
											"end": 5054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 5037,
											"end": 5068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5055,
											"end": 5067,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 5037,
											"end": 5068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5037,
											"end": 5068,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5037,
											"end": 5068,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5037,
											"end": 5068,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5037,
											"end": 5068,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 5037,
											"end": 5068,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5037,
											"end": 5068,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 5037,
											"end": 5068,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 5037,
											"end": 5068,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5037,
											"end": 5068,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 5037,
											"end": 5068,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5037,
											"end": 5068,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 5037,
											"end": 5068,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5037,
											"end": 5068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5037,
											"end": 5068,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5037,
											"end": 5068,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5037,
											"end": 5068,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5037,
											"end": 5068,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 5037,
											"end": 5068,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5037,
											"end": 5068,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 5037,
											"end": 5068,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 5037,
											"end": 5068,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5037,
											"end": 5068,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 5037,
											"end": 5068,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5037,
											"end": 5068,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 5037,
											"end": 5068,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5037,
											"end": 5068,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5037,
											"end": 5068,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5037,
											"end": 5068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5037,
											"end": 5068,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5037,
											"end": 5068,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5037,
											"end": 5068,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5037,
											"end": 5068,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5037,
											"end": 5068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5037,
											"end": 5068,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5037,
											"end": 5068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5037,
											"end": 5068,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5037,
											"end": 5068,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5037,
											"end": 5077,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 5037,
											"end": 5077,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5037,
											"end": 5077,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5037,
											"end": 5077,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 5037,
											"end": 5077,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5037,
											"end": 5077,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 5037,
											"end": 5077,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 5003,
											"end": 5034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5021,
											"end": 5033,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5003,
											"end": 5034,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5034,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5034,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5034,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 5003,
											"end": 5034,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5034,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 5003,
											"end": 5034,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 5003,
											"end": 5034,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5034,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 5003,
											"end": 5034,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5034,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 5003,
											"end": 5034,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5003,
											"end": 5034,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5034,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5034,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5034,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 5003,
											"end": 5034,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5034,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 5003,
											"end": 5034,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 5003,
											"end": 5034,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5034,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 5003,
											"end": 5034,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5034,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 5003,
											"end": 5034,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5034,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5034,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5003,
											"end": 5034,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5034,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5034,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5034,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5003,
											"end": 5034,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5003,
											"end": 5034,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5077,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5077,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5077,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5077,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5190,
											"end": 5191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5154,
											"end": 5174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5154,
											"end": 5187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5175,
											"end": 5186,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 5154,
											"end": 5187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5154,
											"end": 5187,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5154,
											"end": 5187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5154,
											"end": 5187,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5154,
											"end": 5187,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5154,
											"end": 5187,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5154,
											"end": 5187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5154,
											"end": 5187,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5154,
											"end": 5187,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5154,
											"end": 5187,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5154,
											"end": 5187,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5154,
											"end": 5187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5154,
											"end": 5187,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5154,
											"end": 5187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5154,
											"end": 5187,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5154,
											"end": 5187,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5154,
											"end": 5191,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 5154,
											"end": 5191,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5154,
											"end": 5191,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5154,
											"end": 5191,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 5154,
											"end": 5191,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5154,
											"end": 5191,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 5154,
											"end": 5191,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5129,
											"end": 5140,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 5093,
											"end": 5247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5093,
											"end": 5247,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5093,
											"end": 5247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "95B841D5D108F82FDBC6ACD22E5CC30BF7A7C9DDB0DDFB615D3EE5ADC61B0967"
										},
										{
											"begin": 5205,
											"end": 5217,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 5231,
											"end": 5237,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 5093,
											"end": 5247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5093,
											"end": 5247,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5093,
											"end": 5247,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 5093,
											"end": 5247,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5093,
											"end": 5247,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5093,
											"end": 5247,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5093,
											"end": 5247,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 5093,
											"end": 5247,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5093,
											"end": 5247,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 5093,
											"end": 5247,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5093,
											"end": 5247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5093,
											"end": 5247,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5093,
											"end": 5247,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5093,
											"end": 5247,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5093,
											"end": 5247,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5093,
											"end": 5247,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5093,
											"end": 5247,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 5254,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 5254,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 5254,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 5254,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 5254,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 5254,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 5254,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 5254,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 5254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1897,
											"end": 1901,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1913,
											"end": 1927,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1913,
											"end": 1927,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1850,
											"end": 1934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1860,
											"end": 1883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9115,
											"end": 9377,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 9115,
											"end": 9377,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9220,
											"end": 9221,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9197,
											"end": 9222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9197,
											"end": 9222,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9197,
											"end": 9208,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9197,
											"end": 9222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9197,
											"end": 9222,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9197,
											"end": 9222,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9189,
											"end": 9242,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 9189,
											"end": 9242,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9189,
											"end": 9242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9189,
											"end": 9242,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9189,
											"end": 9242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9189,
											"end": 9242,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9189,
											"end": 9242,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9189,
											"end": 9242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9189,
											"end": 9242,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9189,
											"end": 9242,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 9189,
											"end": 9242,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9189,
											"end": 9242,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 9189,
											"end": 9242,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9189,
											"end": 9242,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 9189,
											"end": 9242,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9189,
											"end": 9242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9189,
											"end": 9242,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9189,
											"end": 9242,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9189,
											"end": 9242,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9189,
											"end": 9242,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9189,
											"end": 9242,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9189,
											"end": 9242,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9189,
											"end": 9242,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 9189,
											"end": 9242,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9252,
											"end": 9271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9274,
											"end": 9282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 9274,
											"end": 9282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9274,
											"end": 9282,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9274,
											"end": 9282,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 9274,
											"end": 9282,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9274,
											"end": 9282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 9274,
											"end": 9282,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 9274,
											"end": 9282,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9274,
											"end": 9282,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 9274,
											"end": 9282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9274,
											"end": 9282,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9252,
											"end": 9282,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9252,
											"end": 9282,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9303,
											"end": 9314,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9292,
											"end": 9300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 9292,
											"end": 9300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9292,
											"end": 9314,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 9292,
											"end": 9314,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 9292,
											"end": 9314,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9292,
											"end": 9314,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 9292,
											"end": 9314,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9292,
											"end": 9314,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9292,
											"end": 9314,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 9292,
											"end": 9314,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 9292,
											"end": 9314,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9292,
											"end": 9314,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9292,
											"end": 9314,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9292,
											"end": 9314,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9292,
											"end": 9314,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9292,
											"end": 9314,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 9292,
											"end": 9314,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 9292,
											"end": 9314,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9292,
											"end": 9314,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 9292,
											"end": 9314,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9358,
											"end": 9369,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9329,
											"end": 9370,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9329,
											"end": 9370,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9345,
											"end": 9356,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9329,
											"end": 9370,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9329,
											"end": 9370,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9329,
											"end": 9370,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4AB5BE82436D353E61CA18726E984E561F5C1CC7C6D38B29D2553C790434705A"
										},
										{
											"begin": 9329,
											"end": 9370,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9329,
											"end": 9370,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9329,
											"end": 9370,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9329,
											"end": 9370,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9329,
											"end": 9370,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9329,
											"end": 9370,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9329,
											"end": 9370,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9329,
											"end": 9370,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9329,
											"end": 9370,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 9179,
											"end": 9377,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9115,
											"end": 9377,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9115,
											"end": 9377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9410,
											"end": 9471,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 9410,
											"end": 9471,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9456,
											"end": 9464,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 9456,
											"end": 9462,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 9456,
											"end": 9464,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9456,
											"end": 9464,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 9456,
											"end": 9464,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9410,
											"end": 9471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1682,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1627,
											"end": 1682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8153,
											"end": 8172,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8182,
											"end": 8204,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8214,
											"end": 8231,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8241,
											"end": 8257,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8267,
											"end": 8288,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8298,
											"end": 8317,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8327,
											"end": 8341,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8351,
											"end": 8363,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8411,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8414,
											"end": 8430,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 8414,
											"end": 8443,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8431,
											"end": 8442,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8443,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8414,
											"end": 8443,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8443,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8414,
											"end": 8443,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8443,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8443,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8443,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8414,
											"end": 8443,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8443,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8443,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8443,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8443,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8414,
											"end": 8443,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8443,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8414,
											"end": 8443,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 8444,
											"end": 8454,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8455,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8455,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8455,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8455,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8455,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 8414,
											"end": 8455,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8455,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 8414,
											"end": 8455,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 8414,
											"end": 8455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8455,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 8414,
											"end": 8455,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8455,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 8414,
											"end": 8455,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8455,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8455,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8414,
											"end": 8455,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8455,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8414,
											"end": 8455,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8414,
											"end": 8455,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8455,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8455,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 8414,
											"end": 8455,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8455,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8380,
											"end": 8455,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8486,
											"end": 8494,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8486,
											"end": 8506,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8486,
											"end": 8506,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8486,
											"end": 8506,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8520,
											"end": 8528,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8520,
											"end": 8543,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8520,
											"end": 8543,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8520,
											"end": 8543,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8557,
											"end": 8565,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8557,
											"end": 8575,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8557,
											"end": 8575,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8557,
											"end": 8575,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8589,
											"end": 8597,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8589,
											"end": 8606,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 8589,
											"end": 8606,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8589,
											"end": 8606,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8620,
											"end": 8628,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8620,
											"end": 8642,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 8620,
											"end": 8642,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8620,
											"end": 8642,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8656,
											"end": 8664,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8656,
											"end": 8676,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 8656,
											"end": 8676,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8656,
											"end": 8676,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8690,
											"end": 8698,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8690,
											"end": 8708,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 8690,
											"end": 8708,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8690,
											"end": 8708,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8722,
											"end": 8730,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 8722,
											"end": 8738,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 8722,
											"end": 8738,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8722,
											"end": 8738,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8465,
											"end": 8748,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 8465,
											"end": 8748,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8465,
											"end": 8748,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 8465,
											"end": 8748,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8465,
											"end": 8748,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 8465,
											"end": 8748,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8465,
											"end": 8748,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 8465,
											"end": 8748,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8465,
											"end": 8748,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 8465,
											"end": 8748,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8465,
											"end": 8748,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 8465,
											"end": 8748,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8465,
											"end": 8748,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 8465,
											"end": 8748,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8465,
											"end": 8748,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 8465,
											"end": 8748,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8465,
											"end": 8748,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6192,
											"end": 7096,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 6192,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6300,
											"end": 6332,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6335,
											"end": 6351,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 6335,
											"end": 6364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6352,
											"end": 6363,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6335,
											"end": 6364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6335,
											"end": 6364,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6335,
											"end": 6364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6335,
											"end": 6364,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6335,
											"end": 6364,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6335,
											"end": 6364,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6335,
											"end": 6364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6335,
											"end": 6364,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6335,
											"end": 6364,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6335,
											"end": 6364,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6335,
											"end": 6364,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6335,
											"end": 6364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6335,
											"end": 6364,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6335,
											"end": 6364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6335,
											"end": 6364,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6365,
											"end": 6375,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6335,
											"end": 6376,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6335,
											"end": 6376,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6335,
											"end": 6376,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6335,
											"end": 6376,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6335,
											"end": 6376,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 6335,
											"end": 6376,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6335,
											"end": 6376,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 6335,
											"end": 6376,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 6335,
											"end": 6376,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6335,
											"end": 6376,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 6335,
											"end": 6376,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6335,
											"end": 6376,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 6335,
											"end": 6376,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6335,
											"end": 6376,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6335,
											"end": 6376,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6335,
											"end": 6376,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6335,
											"end": 6376,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6335,
											"end": 6376,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6335,
											"end": 6376,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6335,
											"end": 6376,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6335,
											"end": 6376,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 6335,
											"end": 6376,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6335,
											"end": 6376,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6300,
											"end": 6376,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6300,
											"end": 6376,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6417,
											"end": 6418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6394,
											"end": 6402,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6394,
											"end": 6414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6394,
											"end": 6414,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6394,
											"end": 6414,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6394,
											"end": 6418,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6386,
											"end": 6439,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 6386,
											"end": 6439,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6386,
											"end": 6439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6439,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6386,
											"end": 6439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6439,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6386,
											"end": 6439,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6386,
											"end": 6439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6439,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6386,
											"end": 6439,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 6386,
											"end": 6439,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6386,
											"end": 6439,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 6386,
											"end": 6439,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6386,
											"end": 6439,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 6386,
											"end": 6439,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6386,
											"end": 6439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6439,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6386,
											"end": 6439,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6386,
											"end": 6439,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6386,
											"end": 6439,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6386,
											"end": 6439,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6386,
											"end": 6439,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6386,
											"end": 6439,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 6386,
											"end": 6439,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6457,
											"end": 6465,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6457,
											"end": 6475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 6457,
											"end": 6475,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6457,
											"end": 6475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6475,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6457,
											"end": 6475,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6457,
											"end": 6475,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6457,
											"end": 6475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 6457,
											"end": 6475,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 6457,
											"end": 6475,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6457,
											"end": 6475,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6457,
											"end": 6475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 6457,
											"end": 6475,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6449,
											"end": 6493,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 6449,
											"end": 6493,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6449,
											"end": 6493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6449,
											"end": 6493,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6449,
											"end": 6493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6449,
											"end": 6493,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6449,
											"end": 6493,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6449,
											"end": 6493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6449,
											"end": 6493,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6449,
											"end": 6493,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 6449,
											"end": 6493,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6449,
											"end": 6493,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 6449,
											"end": 6493,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6449,
											"end": 6493,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 6449,
											"end": 6493,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6449,
											"end": 6493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6449,
											"end": 6493,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6449,
											"end": 6493,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6449,
											"end": 6493,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6449,
											"end": 6493,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6449,
											"end": 6493,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6449,
											"end": 6493,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6449,
											"end": 6493,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 6449,
											"end": 6493,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6512,
											"end": 6520,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6512,
											"end": 6528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 6512,
											"end": 6528,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6512,
											"end": 6528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6512,
											"end": 6528,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6512,
											"end": 6528,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6512,
											"end": 6528,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6512,
											"end": 6528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 6512,
											"end": 6528,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 6512,
											"end": 6528,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6512,
											"end": 6528,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6512,
											"end": 6528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 6512,
											"end": 6528,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6511,
											"end": 6528,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6503,
											"end": 6548,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 6503,
											"end": 6548,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6503,
											"end": 6548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6503,
											"end": 6548,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6503,
											"end": 6548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6503,
											"end": 6548,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6503,
											"end": 6548,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6503,
											"end": 6548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6503,
											"end": 6548,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6503,
											"end": 6548,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 6503,
											"end": 6548,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6503,
											"end": 6548,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 6503,
											"end": 6548,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6503,
											"end": 6548,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 6503,
											"end": 6548,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6503,
											"end": 6548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6503,
											"end": 6548,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6503,
											"end": 6548,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6503,
											"end": 6548,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6503,
											"end": 6548,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6503,
											"end": 6548,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6503,
											"end": 6548,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6503,
											"end": 6548,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 6503,
											"end": 6548,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6612,
											"end": 6632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 6656,
											"end": 6664,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6655,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 6635,
											"end": 6665,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 6635,
											"end": 6665,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6612,
											"end": 6665,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6612,
											"end": 6665,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6675,
											"end": 6695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6721,
											"end": 6733,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6698,
											"end": 6706,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6698,
											"end": 6718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6698,
											"end": 6718,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6698,
											"end": 6718,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6698,
											"end": 6733,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 6698,
											"end": 6733,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6698,
											"end": 6733,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6698,
											"end": 6733,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 6698,
											"end": 6733,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6698,
											"end": 6733,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 6698,
											"end": 6733,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6675,
											"end": 6733,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6675,
											"end": 6733,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6790,
											"end": 6794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6771,
											"end": 6779,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6771,
											"end": 6787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 6771,
											"end": 6787,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6771,
											"end": 6787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6771,
											"end": 6794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 6771,
											"end": 6794,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 6771,
											"end": 6794,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6771,
											"end": 6794,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6771,
											"end": 6794,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6771,
											"end": 6794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 6771,
											"end": 6794,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6771,
											"end": 6794,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 6771,
											"end": 6794,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6771,
											"end": 6794,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6771,
											"end": 6794,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6771,
											"end": 6794,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6771,
											"end": 6794,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6771,
											"end": 6794,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6771,
											"end": 6794,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 6771,
											"end": 6794,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6771,
											"end": 6794,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6771,
											"end": 6794,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6873,
											"end": 6874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6858,
											"end": 6870,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6858,
											"end": 6874,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6854,
											"end": 7013,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6854,
											"end": 7013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 6854,
											"end": 7013,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6915,
											"end": 6920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6915,
											"end": 6920,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6920,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6920,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 6915,
											"end": 6920,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6920,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6920,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6915,
											"end": 6920,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6915,
											"end": 6929,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 6930,
											"end": 6938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 6930,
											"end": 6938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6930,
											"end": 6938,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6930,
											"end": 6938,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6930,
											"end": 6938,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6930,
											"end": 6938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 6930,
											"end": 6938,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 6930,
											"end": 6938,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6930,
											"end": 6938,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6930,
											"end": 6938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6930,
											"end": 6938,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6940,
											"end": 6952,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 6915,
											"end": 6953,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6915,
											"end": 6953,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 6915,
											"end": 6953,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 6915,
											"end": 6953,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6890,
											"end": 7002,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 6890,
											"end": 7002,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6890,
											"end": 7002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6890,
											"end": 7002,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6890,
											"end": 7002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6890,
											"end": 7002,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6890,
											"end": 7002,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6890,
											"end": 7002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6890,
											"end": 7002,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6890,
											"end": 7002,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 6890,
											"end": 7002,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6890,
											"end": 7002,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 6890,
											"end": 7002,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6890,
											"end": 7002,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 6890,
											"end": 7002,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6890,
											"end": 7002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6890,
											"end": 7002,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6890,
											"end": 7002,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6890,
											"end": 7002,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6890,
											"end": 7002,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6890,
											"end": 7002,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6890,
											"end": 7002,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6890,
											"end": 7002,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 6890,
											"end": 7002,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6854,
											"end": 7013,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 6854,
											"end": 7013,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7064,
											"end": 7074,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7051,
											"end": 7062,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7028,
											"end": 7089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7028,
											"end": 7089,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7028,
											"end": 7089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5369437781E041AFE7013C48748BCB5985473926A60448846C64D514908AA8FC"
										},
										{
											"begin": 7076,
											"end": 7088,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7028,
											"end": 7089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7028,
											"end": 7089,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7028,
											"end": 7089,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 7028,
											"end": 7089,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7028,
											"end": 7089,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7028,
											"end": 7089,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 7028,
											"end": 7089,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7028,
											"end": 7089,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 7028,
											"end": 7089,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7028,
											"end": 7089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7028,
											"end": 7089,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7028,
											"end": 7089,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7028,
											"end": 7089,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7028,
											"end": 7089,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7028,
											"end": 7089,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7028,
											"end": 7089,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 6290,
											"end": 7096,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6290,
											"end": 7096,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6290,
											"end": 7096,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6192,
											"end": 7096,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6192,
											"end": 7096,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6192,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1549,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 1530,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1549,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1530,
											"end": 1549,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1530,
											"end": 1549,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1549,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1549,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1549,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1530,
											"end": 1549,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1549,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1549,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1549,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1530,
											"end": 1549,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1549,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8761,
											"end": 9054,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 8761,
											"end": 9054,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8880,
											"end": 8887,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8899,
											"end": 8930,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8933,
											"end": 8949,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 8933,
											"end": 8962,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8950,
											"end": 8961,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8933,
											"end": 8962,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8933,
											"end": 8962,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8933,
											"end": 8962,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8933,
											"end": 8962,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8933,
											"end": 8962,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8933,
											"end": 8962,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8933,
											"end": 8962,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8933,
											"end": 8962,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8933,
											"end": 8962,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8933,
											"end": 8962,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8933,
											"end": 8962,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8933,
											"end": 8962,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8933,
											"end": 8962,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8933,
											"end": 8962,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8933,
											"end": 8962,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 8963,
											"end": 8973,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8933,
											"end": 8974,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8933,
											"end": 8974,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8933,
											"end": 8974,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8933,
											"end": 8974,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 8933,
											"end": 8974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 8933,
											"end": 8974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8933,
											"end": 8974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 8933,
											"end": 8974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 8933,
											"end": 8974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8933,
											"end": 8974,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 8933,
											"end": 8974,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8933,
											"end": 8974,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 8933,
											"end": 8974,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8933,
											"end": 8974,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8933,
											"end": 8974,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8933,
											"end": 8974,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8933,
											"end": 8974,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8933,
											"end": 8974,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8933,
											"end": 8974,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 8933,
											"end": 8974,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8933,
											"end": 8974,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 8933,
											"end": 8974,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 8933,
											"end": 8974,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8974,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9024,
											"end": 9032,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9024,
											"end": 9047,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9024,
											"end": 9047,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9024,
											"end": 9047,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8991,
											"end": 9021,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 9012,
											"end": 9020,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8991,
											"end": 9011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 8991,
											"end": 9021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8991,
											"end": 9021,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 8991,
											"end": 9021,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8991,
											"end": 9047,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 8991,
											"end": 9047,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8991,
											"end": 9047,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8991,
											"end": 9047,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 8991,
											"end": 9047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8991,
											"end": 9047,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 8991,
											"end": 9047,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8984,
											"end": 9047,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8984,
											"end": 9047,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8984,
											"end": 9047,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8761,
											"end": 9054,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8761,
											"end": 9054,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8761,
											"end": 9054,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8761,
											"end": 9054,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8761,
											"end": 9054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2575,
											"end": 2882,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2575,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 2720,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 5,
											"value": "3EE5AEB500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2858,
											"end": 2865,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7170,
											"end": 7982,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 7170,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7270,
											"end": 7277,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7311,
											"end": 7319,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7311,
											"end": 7329,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7311,
											"end": 7329,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7311,
											"end": 7329,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7293,
											"end": 7308,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 7293,
											"end": 7329,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7289,
											"end": 7364,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7289,
											"end": 7364,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 7289,
											"end": 7364,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7352,
											"end": 7353,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7345,
											"end": 7353,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7345,
											"end": 7353,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7345,
											"end": 7353,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 7345,
											"end": 7353,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7289,
											"end": 7364,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 7289,
											"end": 7364,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7417,
											"end": 7425,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7417,
											"end": 7439,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 7417,
											"end": 7439,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7417,
											"end": 7439,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7396,
											"end": 7404,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7396,
											"end": 7414,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7396,
											"end": 7414,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7396,
											"end": 7414,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7396,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 7396,
											"end": 7439,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7396,
											"end": 7439,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7396,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 7396,
											"end": 7439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7396,
											"end": 7439,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 7396,
											"end": 7439,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7378,
											"end": 7393,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 7378,
											"end": 7439,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7374,
											"end": 7474,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7374,
											"end": 7474,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 7374,
											"end": 7474,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7462,
											"end": 7463,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7455,
											"end": 7463,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7455,
											"end": 7463,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7455,
											"end": 7463,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 7455,
											"end": 7463,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7374,
											"end": 7474,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 7374,
											"end": 7474,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7528,
											"end": 7536,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7528,
											"end": 7545,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 7528,
											"end": 7545,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7528,
											"end": 7545,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7507,
											"end": 7515,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7507,
											"end": 7525,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7507,
											"end": 7525,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7507,
											"end": 7525,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7507,
											"end": 7545,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 7507,
											"end": 7545,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7507,
											"end": 7545,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7507,
											"end": 7545,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 7507,
											"end": 7545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7507,
											"end": 7545,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 7507,
											"end": 7545,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7488,
											"end": 7503,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 7488,
											"end": 7545,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7484,
											"end": 7599,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 7484,
											"end": 7599,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7568,
											"end": 7576,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7568,
											"end": 7588,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7568,
											"end": 7588,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7568,
											"end": 7588,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7561,
											"end": 7588,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7561,
											"end": 7588,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7561,
											"end": 7588,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 7561,
											"end": 7588,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7484,
											"end": 7599,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 7484,
											"end": 7599,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7609,
											"end": 7630,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7651,
											"end": 7659,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7651,
											"end": 7669,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7651,
											"end": 7669,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7651,
											"end": 7669,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7633,
											"end": 7648,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 7633,
											"end": 7669,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 7633,
											"end": 7669,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7633,
											"end": 7669,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7633,
											"end": 7669,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 7633,
											"end": 7669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7633,
											"end": 7669,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 7633,
											"end": 7669,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7609,
											"end": 7669,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7609,
											"end": 7669,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7679,
											"end": 7702,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7705,
											"end": 7713,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7705,
											"end": 7725,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7679,
											"end": 7725,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7679,
											"end": 7725,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7735,
											"end": 7755,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7774,
											"end": 7789,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7758,
											"end": 7771,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7758,
											"end": 7789,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 7758,
											"end": 7789,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7758,
											"end": 7789,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7758,
											"end": 7789,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 7758,
											"end": 7789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7758,
											"end": 7789,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 7758,
											"end": 7789,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7735,
											"end": 7789,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7735,
											"end": 7789,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7799,
											"end": 7820,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7838,
											"end": 7853,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7823,
											"end": 7835,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 7823,
											"end": 7853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7799,
											"end": 7853,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7799,
											"end": 7853,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7864,
											"end": 7884,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7928,
											"end": 7936,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7928,
											"end": 7945,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 7928,
											"end": 7945,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7928,
											"end": 7945,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7911,
											"end": 7924,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7888,
											"end": 7896,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 7888,
											"end": 7908,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7888,
											"end": 7908,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7888,
											"end": 7908,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7888,
											"end": 7924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 7888,
											"end": 7924,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7888,
											"end": 7924,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7888,
											"end": 7924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 7888,
											"end": 7924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7888,
											"end": 7924,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 7888,
											"end": 7924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7887,
											"end": 7945,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 7887,
											"end": 7945,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7887,
											"end": 7945,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7887,
											"end": 7945,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 7887,
											"end": 7945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7887,
											"end": 7945,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 7887,
											"end": 7945,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7864,
											"end": 7945,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7864,
											"end": 7945,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7963,
											"end": 7975,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7956,
											"end": 7975,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 7956,
											"end": 7975,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7956,
											"end": 7975,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7956,
											"end": 7975,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7956,
											"end": 7975,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7956,
											"end": 7975,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7956,
											"end": 7975,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7170,
											"end": 7982,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 7170,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7170,
											"end": 7982,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7170,
											"end": 7982,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7170,
											"end": 7982,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7170,
											"end": 7982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2888,
											"end": 3096,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2888,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1858,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3068,
											"end": 3075,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 3096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2827,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 2710,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 1721,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 1721,
											"end": 1737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "tag",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2778,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2768,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 2807,
											"end": 2817,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 2807,
											"end": 2819,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2798,
											"end": 2820,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2463,
											"end": 2578,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 2463,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "tag",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2532,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2522,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2522,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 2558,
											"end": 2568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 2558,
											"end": 2570,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2551,
											"end": 2571,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2202,
											"end": 2328,
											"name": "tag",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 2202,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 2265,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 2265,
											"end": 2273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "tag",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 4,
											"value": "8DFC202B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "tag",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2202,
											"end": 2328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2002,
											"end": 2130,
											"name": "tag",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 2002,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 2067,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 2067,
											"end": 2075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "tag",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 4,
											"value": "D93C066500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "tag",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2002,
											"end": 2130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 334,
											"end": 450,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 334,
											"end": 450,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 424,
											"end": 425,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 414,
											"end": 426,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 404,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 404,
											"end": 444,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 440,
											"end": 441,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 437,
											"end": 438,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 430,
											"end": 442,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 404,
											"end": 444,
											"name": "tag",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 404,
											"end": 444,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 334,
											"end": 450,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 456,
											"end": 629,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 456,
											"end": 629,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 519,
											"end": 524,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 563,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 544,
											"end": 564,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 535,
											"end": 564,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 535,
											"end": 564,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 573,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 617,
											"end": 622,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 573,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 573,
											"end": 623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 573,
											"end": 623,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 573,
											"end": 623,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 456,
											"end": 629,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 456,
											"end": 629,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 456,
											"end": 629,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 456,
											"end": 629,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 456,
											"end": 629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 635,
											"end": 998,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 635,
											"end": 998,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 711,
											"end": 717,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 760,
											"end": 762,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 748,
											"end": 757,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 739,
											"end": 746,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 735,
											"end": 758,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 731,
											"end": 763,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 728,
											"end": 847,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 728,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 728,
											"end": 847,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 766,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 766,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 766,
											"end": 845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 766,
											"end": 845,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 766,
											"end": 845,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 728,
											"end": 847,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 728,
											"end": 847,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 886,
											"end": 887,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 911,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 973,
											"end": 980,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 964,
											"end": 970,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 953,
											"end": 962,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 949,
											"end": 971,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 911,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 911,
											"end": 981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 911,
											"end": 981,
											"name": "tag",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 911,
											"end": 981,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 901,
											"end": 981,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 901,
											"end": 981,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 857,
											"end": 991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 635,
											"end": 998,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 635,
											"end": 998,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 635,
											"end": 998,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 635,
											"end": 998,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 635,
											"end": 998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1004,
											"end": 1081,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 1004,
											"end": 1081,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1041,
											"end": 1048,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1070,
											"end": 1075,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1059,
											"end": 1075,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1059,
											"end": 1075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1004,
											"end": 1081,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1004,
											"end": 1081,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1004,
											"end": 1081,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1004,
											"end": 1081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1205,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 1087,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1174,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 1192,
											"end": 1197,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1174,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 1174,
											"end": 1198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1174,
											"end": 1198,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 1174,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1169,
											"end": 1172,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1162,
											"end": 1199,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1205,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1205,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1433,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 1211,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1304,
											"end": 1308,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1342,
											"end": 1344,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1331,
											"end": 1340,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1319,
											"end": 1345,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1319,
											"end": 1345,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 1423,
											"end": 1424,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1412,
											"end": 1421,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1408,
											"end": 1425,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1405,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 1355,
											"end": 1426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1426,
											"name": "tag",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 1355,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1433,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1433,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1433,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1433,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1439,
											"end": 1561,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 1439,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 1530,
											"end": 1535,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 1512,
											"end": 1536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 1536,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 1512,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1505,
											"end": 1510,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1502,
											"end": 1537,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1492,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 1492,
											"end": 1555,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1551,
											"end": 1552,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 1549,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1541,
											"end": 1553,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1492,
											"end": 1555,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 1492,
											"end": 1555,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1439,
											"end": 1561,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1439,
											"end": 1561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1567,
											"end": 1706,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 1567,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1613,
											"end": 1618,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1651,
											"end": 1657,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1658,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1658,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1667,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 1694,
											"end": 1699,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1667,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 1667,
											"end": 1700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1667,
											"end": 1700,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 1667,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1567,
											"end": 1706,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1567,
											"end": 1706,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1567,
											"end": 1706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1567,
											"end": 1706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1567,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 2041,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1712,
											"end": 2041,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1820,
											"end": 1822,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1799,
											"end": 1806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1795,
											"end": 1818,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1791,
											"end": 1823,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1788,
											"end": 1907,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1788,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 1788,
											"end": 1907,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 1826,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 1826,
											"end": 1905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1905,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 1826,
											"end": 1905,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1788,
											"end": 1907,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 1788,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1946,
											"end": 1947,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 2024,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 2016,
											"end": 2023,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2007,
											"end": 2013,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1996,
											"end": 2005,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1992,
											"end": 2014,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 2024,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 1971,
											"end": 2024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 2024,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 1971,
											"end": 2024,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 2024,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 2024,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1917,
											"end": 2034,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 2041,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 2041,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 2041,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 2041,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 2041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2047,
											"end": 2173,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 2047,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2084,
											"end": 2091,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2124,
											"end": 2166,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2117,
											"end": 2122,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2113,
											"end": 2167,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2102,
											"end": 2167,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2102,
											"end": 2167,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2047,
											"end": 2173,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2047,
											"end": 2173,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2047,
											"end": 2173,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2047,
											"end": 2173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2179,
											"end": 2275,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 2179,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2216,
											"end": 2223,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 2263,
											"end": 2268,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2245,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 2245,
											"end": 2269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2245,
											"end": 2269,
											"name": "tag",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 2245,
											"end": 2269,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2234,
											"end": 2269,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2234,
											"end": 2269,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2179,
											"end": 2275,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2179,
											"end": 2275,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2179,
											"end": 2275,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2179,
											"end": 2275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2281,
											"end": 2403,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 2281,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2354,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 2372,
											"end": 2377,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2354,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 2354,
											"end": 2378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2354,
											"end": 2378,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 2354,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2347,
											"end": 2352,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2344,
											"end": 2379,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2334,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 2334,
											"end": 2397,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2393,
											"end": 2394,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2390,
											"end": 2391,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2383,
											"end": 2395,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2334,
											"end": 2397,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 2334,
											"end": 2397,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2281,
											"end": 2403,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2281,
											"end": 2403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2548,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 2409,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2455,
											"end": 2460,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2493,
											"end": 2499,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2500,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2471,
											"end": 2500,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2471,
											"end": 2500,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2509,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 2536,
											"end": 2541,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2509,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 2509,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2509,
											"end": 2542,
											"name": "tag",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 2509,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2548,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2548,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2548,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2548,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2554,
											"end": 3028,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 2554,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2622,
											"end": 2628,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2630,
											"end": 2636,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2679,
											"end": 2681,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2667,
											"end": 2676,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2658,
											"end": 2665,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2654,
											"end": 2677,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2650,
											"end": 2682,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2647,
											"end": 2766,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2647,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 2647,
											"end": 2766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2685,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 2685,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 2685,
											"end": 2764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2685,
											"end": 2764,
											"name": "tag",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 2685,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2647,
											"end": 2766,
											"name": "tag",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 2647,
											"end": 2766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 2875,
											"end": 2882,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2866,
											"end": 2872,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2855,
											"end": 2864,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2851,
											"end": 2873,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2830,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 2830,
											"end": 2883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2830,
											"end": 2883,
											"name": "tag",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 2830,
											"end": 2883,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2820,
											"end": 2883,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2820,
											"end": 2883,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2893,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2932,
											"end": 2934,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2958,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 3003,
											"end": 3010,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2994,
											"end": 3000,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 2992,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 3001,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2958,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 2958,
											"end": 3011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2958,
											"end": 3011,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 2958,
											"end": 3011,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2948,
											"end": 3011,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2948,
											"end": 3011,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 3021,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2554,
											"end": 3028,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2554,
											"end": 3028,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2554,
											"end": 3028,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2554,
											"end": 3028,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2554,
											"end": 3028,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2554,
											"end": 3028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3124,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 3034,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3068,
											"end": 3075,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3111,
											"end": 3116,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3104,
											"end": 3117,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3097,
											"end": 3118,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3118,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3118,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3124,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3124,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3124,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3130,
											"end": 3239,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 3130,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3211,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 3226,
											"end": 3231,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3211,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 3211,
											"end": 3232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3211,
											"end": 3232,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 3211,
											"end": 3232,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3206,
											"end": 3209,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3233,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3130,
											"end": 3239,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3130,
											"end": 3239,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3130,
											"end": 3239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3245,
											"end": 4218,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 3245,
											"end": 4218,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3522,
											"end": 3526,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3560,
											"end": 3563,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3549,
											"end": 3558,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3545,
											"end": 3564,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3537,
											"end": 3564,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3537,
											"end": 3564,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3574,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 3642,
											"end": 3643,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3631,
											"end": 3640,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3627,
											"end": 3644,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3618,
											"end": 3624,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 3574,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 3574,
											"end": 3645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3574,
											"end": 3645,
											"name": "tag",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 3574,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3655,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 3723,
											"end": 3725,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3712,
											"end": 3721,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3726,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3699,
											"end": 3705,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 3655,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 3655,
											"end": 3727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3655,
											"end": 3727,
											"name": "tag",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 3655,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3737,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 3805,
											"end": 3807,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3794,
											"end": 3803,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3790,
											"end": 3808,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3781,
											"end": 3787,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 3737,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 3737,
											"end": 3809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3737,
											"end": 3809,
											"name": "tag",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 3737,
											"end": 3809,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3819,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 3887,
											"end": 3889,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3876,
											"end": 3885,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3872,
											"end": 3890,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3863,
											"end": 3869,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3819,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 3819,
											"end": 3891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3819,
											"end": 3891,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 3819,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 3969,
											"end": 3972,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3958,
											"end": 3967,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3954,
											"end": 3973,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3945,
											"end": 3951,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 3901,
											"end": 3974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3974,
											"name": "tag",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 3901,
											"end": 3974,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3984,
											"end": 4057,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 4052,
											"end": 4055,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 4041,
											"end": 4050,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4037,
											"end": 4056,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4028,
											"end": 4034,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3984,
											"end": 4057,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 3984,
											"end": 4057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3984,
											"end": 4057,
											"name": "tag",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 3984,
											"end": 4057,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4134,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 4129,
											"end": 4132,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 4118,
											"end": 4127,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4114,
											"end": 4133,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4105,
											"end": 4111,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4134,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 4067,
											"end": 4134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4134,
											"name": "tag",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 4067,
											"end": 4134,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4144,
											"end": 4211,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 4206,
											"end": 4209,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 4195,
											"end": 4204,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4191,
											"end": 4210,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4182,
											"end": 4188,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4144,
											"end": 4211,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 4144,
											"end": 4211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4144,
											"end": 4211,
											"name": "tag",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 4144,
											"end": 4211,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3245,
											"end": 4218,
											"name": "SWAP10",
											"source": 9
										},
										{
											"begin": 3245,
											"end": 4218,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 3245,
											"end": 4218,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3245,
											"end": 4218,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3245,
											"end": 4218,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3245,
											"end": 4218,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3245,
											"end": 4218,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3245,
											"end": 4218,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3245,
											"end": 4218,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3245,
											"end": 4218,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3245,
											"end": 4218,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3245,
											"end": 4218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4224,
											"end": 4340,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 4224,
											"end": 4340,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4294,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 4309,
											"end": 4314,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4294,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 4294,
											"end": 4315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4294,
											"end": 4315,
											"name": "tag",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 4294,
											"end": 4315,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4287,
											"end": 4292,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4316,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4274,
											"end": 4334,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 4274,
											"end": 4334,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4330,
											"end": 4331,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4327,
											"end": 4328,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4320,
											"end": 4332,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4274,
											"end": 4334,
											"name": "tag",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 4274,
											"end": 4334,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4224,
											"end": 4340,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4224,
											"end": 4340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4346,
											"end": 4479,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 4346,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4389,
											"end": 4394,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4427,
											"end": 4433,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4434,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4405,
											"end": 4434,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4405,
											"end": 4434,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4443,
											"end": 4473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 4467,
											"end": 4472,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4443,
											"end": 4473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 4443,
											"end": 4473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4443,
											"end": 4473,
											"name": "tag",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 4443,
											"end": 4473,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4346,
											"end": 4479,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4346,
											"end": 4479,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4346,
											"end": 4479,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4346,
											"end": 4479,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4346,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4485,
											"end": 5862,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 4485,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4621,
											"end": 4627,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4629,
											"end": 4635,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4637,
											"end": 4643,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4645,
											"end": 4651,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4653,
											"end": 4659,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4661,
											"end": 4667,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4669,
											"end": 4675,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4677,
											"end": 4683,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4726,
											"end": 4729,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4714,
											"end": 4723,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 4705,
											"end": 4712,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 4701,
											"end": 4724,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4697,
											"end": 4730,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4694,
											"end": 4814,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4694,
											"end": 4814,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 4694,
											"end": 4814,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4733,
											"end": 4812,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 4733,
											"end": 4812,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 4733,
											"end": 4812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4733,
											"end": 4812,
											"name": "tag",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 4733,
											"end": 4812,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4694,
											"end": 4814,
											"name": "tag",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 4694,
											"end": 4814,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4854,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4878,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 4923,
											"end": 4930,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 4914,
											"end": 4920,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4903,
											"end": 4912,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 4899,
											"end": 4921,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 4878,
											"end": 4931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 4931,
											"name": "tag",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 4878,
											"end": 4931,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4868,
											"end": 4931,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 4868,
											"end": 4931,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4824,
											"end": 4941,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4980,
											"end": 4982,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5006,
											"end": 5076,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 5068,
											"end": 5075,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5065,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5048,
											"end": 5057,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 5044,
											"end": 5066,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5006,
											"end": 5076,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 5006,
											"end": 5076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5006,
											"end": 5076,
											"name": "tag",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 5006,
											"end": 5076,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4996,
											"end": 5076,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 4996,
											"end": 5076,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4951,
											"end": 5086,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5125,
											"end": 5127,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5151,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 5196,
											"end": 5203,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 5187,
											"end": 5193,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5176,
											"end": 5185,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 5172,
											"end": 5194,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5151,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 5151,
											"end": 5204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5151,
											"end": 5204,
											"name": "tag",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 5151,
											"end": 5204,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5141,
											"end": 5204,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 5141,
											"end": 5204,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5096,
											"end": 5214,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5253,
											"end": 5255,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5279,
											"end": 5332,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 5324,
											"end": 5331,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 5315,
											"end": 5321,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5304,
											"end": 5313,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 5300,
											"end": 5322,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5279,
											"end": 5332,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 5279,
											"end": 5332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5279,
											"end": 5332,
											"name": "tag",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 5279,
											"end": 5332,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5269,
											"end": 5332,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 5269,
											"end": 5332,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5224,
											"end": 5342,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5381,
											"end": 5384,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 5408,
											"end": 5461,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 5453,
											"end": 5460,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 5444,
											"end": 5450,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5433,
											"end": 5442,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 5429,
											"end": 5451,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5408,
											"end": 5461,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 5408,
											"end": 5461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5408,
											"end": 5461,
											"name": "tag",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 5408,
											"end": 5461,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5398,
											"end": 5461,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 5398,
											"end": 5461,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5510,
											"end": 5513,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 5537,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 5582,
											"end": 5589,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 5573,
											"end": 5579,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5562,
											"end": 5571,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 5558,
											"end": 5580,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 5537,
											"end": 5590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5590,
											"name": "tag",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 5537,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5527,
											"end": 5590,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5527,
											"end": 5590,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5481,
											"end": 5600,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5639,
											"end": 5642,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 5666,
											"end": 5719,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 5711,
											"end": 5718,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 5702,
											"end": 5708,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5700,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 5687,
											"end": 5709,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5666,
											"end": 5719,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 5666,
											"end": 5719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5666,
											"end": 5719,
											"name": "tag",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 5666,
											"end": 5719,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5719,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5719,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5610,
											"end": 5729,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 5771,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 5795,
											"end": 5845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 5837,
											"end": 5844,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 5828,
											"end": 5834,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5817,
											"end": 5826,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 5813,
											"end": 5835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5795,
											"end": 5845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 5795,
											"end": 5845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5795,
											"end": 5845,
											"name": "tag",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 5795,
											"end": 5845,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5785,
											"end": 5845,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5785,
											"end": 5845,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5739,
											"end": 5855,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4485,
											"end": 5862,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4485,
											"end": 5862,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 4485,
											"end": 5862,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 4485,
											"end": 5862,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4485,
											"end": 5862,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4485,
											"end": 5862,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 4485,
											"end": 5862,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 4485,
											"end": 5862,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4485,
											"end": 5862,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4485,
											"end": 5862,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 4485,
											"end": 5862,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4485,
											"end": 5862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5868,
											"end": 6078,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 5868,
											"end": 6078,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5955,
											"end": 5959,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5993,
											"end": 5995,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5982,
											"end": 5991,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5978,
											"end": 5996,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5970,
											"end": 5996,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5970,
											"end": 5996,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6006,
											"end": 6071,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 6068,
											"end": 6069,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6057,
											"end": 6066,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6053,
											"end": 6070,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6044,
											"end": 6050,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6006,
											"end": 6071,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 6006,
											"end": 6071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6006,
											"end": 6071,
											"name": "tag",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 6006,
											"end": 6071,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5868,
											"end": 6078,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5868,
											"end": 6078,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5868,
											"end": 6078,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5868,
											"end": 6078,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5868,
											"end": 6078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6202,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 6084,
											"end": 6202,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6171,
											"end": 6195,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 6189,
											"end": 6194,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6171,
											"end": 6195,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 6171,
											"end": 6195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6171,
											"end": 6195,
											"name": "tag",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 6171,
											"end": 6195,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6166,
											"end": 6169,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6159,
											"end": 6196,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6202,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6202,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6208,
											"end": 6430,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 6208,
											"end": 6430,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6301,
											"end": 6305,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6339,
											"end": 6341,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6328,
											"end": 6337,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6324,
											"end": 6342,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6316,
											"end": 6342,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6316,
											"end": 6342,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6352,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 6420,
											"end": 6421,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6409,
											"end": 6418,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6405,
											"end": 6422,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6396,
											"end": 6402,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6352,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 6352,
											"end": 6423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6352,
											"end": 6423,
											"name": "tag",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 6352,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6208,
											"end": 6430,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6208,
											"end": 6430,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6208,
											"end": 6430,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6208,
											"end": 6430,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6208,
											"end": 6430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6436,
											"end": 6765,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 6436,
											"end": 6765,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6495,
											"end": 6501,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6544,
											"end": 6546,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6532,
											"end": 6541,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6523,
											"end": 6530,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6519,
											"end": 6542,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6515,
											"end": 6547,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6631,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 6512,
											"end": 6631,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6550,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 6550,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 6550,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6550,
											"end": 6629,
											"name": "tag",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 6550,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6631,
											"name": "tag",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 6512,
											"end": 6631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6670,
											"end": 6671,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6695,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 6740,
											"end": 6747,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6731,
											"end": 6737,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 6729,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6716,
											"end": 6738,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6695,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 6695,
											"end": 6748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6695,
											"end": 6748,
											"name": "tag",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 6695,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6685,
											"end": 6748,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6685,
											"end": 6748,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6641,
											"end": 6758,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6436,
											"end": 6765,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6436,
											"end": 6765,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6436,
											"end": 6765,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6436,
											"end": 6765,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6436,
											"end": 6765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6771,
											"end": 6831,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 6771,
											"end": 6831,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6799,
											"end": 6802,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6820,
											"end": 6825,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6813,
											"end": 6825,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6813,
											"end": 6825,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6771,
											"end": 6831,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6771,
											"end": 6831,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6771,
											"end": 6831,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6771,
											"end": 6831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6837,
											"end": 6979,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 6837,
											"end": 6979,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6887,
											"end": 6896,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6920,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 6938,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 6947,
											"end": 6971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 6965,
											"end": 6970,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6947,
											"end": 6971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 6947,
											"end": 6971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6947,
											"end": 6971,
											"name": "tag",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 6947,
											"end": 6971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6938,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 6938,
											"end": 6972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6938,
											"end": 6972,
											"name": "tag",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 6938,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6920,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 6920,
											"end": 6973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6920,
											"end": 6973,
											"name": "tag",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 6920,
											"end": 6973,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6907,
											"end": 6973,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6907,
											"end": 6973,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6837,
											"end": 6979,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6837,
											"end": 6979,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6837,
											"end": 6979,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6837,
											"end": 6979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6985,
											"end": 7111,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 6985,
											"end": 7111,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7035,
											"end": 7044,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7068,
											"end": 7105,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 7099,
											"end": 7104,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7068,
											"end": 7105,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 7068,
											"end": 7105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7068,
											"end": 7105,
											"name": "tag",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 7068,
											"end": 7105,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7055,
											"end": 7105,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7055,
											"end": 7105,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6985,
											"end": 7111,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6985,
											"end": 7111,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6985,
											"end": 7111,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6985,
											"end": 7111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7117,
											"end": 7257,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 7117,
											"end": 7257,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7181,
											"end": 7190,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7214,
											"end": 7251,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 7245,
											"end": 7250,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7214,
											"end": 7251,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 7214,
											"end": 7251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7214,
											"end": 7251,
											"name": "tag",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 7214,
											"end": 7251,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7201,
											"end": 7251,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7201,
											"end": 7251,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7117,
											"end": 7257,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7117,
											"end": 7257,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7117,
											"end": 7257,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7117,
											"end": 7257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7263,
											"end": 7422,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 7263,
											"end": 7422,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7364,
											"end": 7415,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 7409,
											"end": 7414,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7364,
											"end": 7415,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 7364,
											"end": 7415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7364,
											"end": 7415,
											"name": "tag",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 7364,
											"end": 7415,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7359,
											"end": 7362,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7352,
											"end": 7416,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7263,
											"end": 7422,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7263,
											"end": 7422,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7263,
											"end": 7422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7428,
											"end": 7678,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 7428,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7535,
											"end": 7539,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7573,
											"end": 7575,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7562,
											"end": 7571,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7576,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7576,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7586,
											"end": 7671,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 7668,
											"end": 7669,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7657,
											"end": 7666,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7653,
											"end": 7670,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7644,
											"end": 7650,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7586,
											"end": 7671,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 7586,
											"end": 7671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7586,
											"end": 7671,
											"name": "tag",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 7586,
											"end": 7671,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7428,
											"end": 7678,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7428,
											"end": 7678,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7428,
											"end": 7678,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7428,
											"end": 7678,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7428,
											"end": 7678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7684,
											"end": 7864,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 7684,
											"end": 7864,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7732,
											"end": 7809,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7729,
											"end": 7730,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7722,
											"end": 7810,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7829,
											"end": 7833,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 7826,
											"end": 7827,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7819,
											"end": 7834,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7853,
											"end": 7857,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7850,
											"end": 7851,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7843,
											"end": 7858,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7870,
											"end": 8039,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 7870,
											"end": 8039,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7954,
											"end": 7965,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7988,
											"end": 7994,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7983,
											"end": 7986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7976,
											"end": 7995,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8028,
											"end": 8032,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8023,
											"end": 8026,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8019,
											"end": 8033,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8004,
											"end": 8033,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8004,
											"end": 8033,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7870,
											"end": 8039,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7870,
											"end": 8039,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7870,
											"end": 8039,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7870,
											"end": 8039,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7870,
											"end": 8039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8045,
											"end": 8211,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 8045,
											"end": 8211,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8185,
											"end": 8203,
											"name": "PUSH",
											"source": 9,
											"value": "4E6F2073756368207363686564756C6500000000000000000000000000000000"
										},
										{
											"begin": 8181,
											"end": 8182,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8173,
											"end": 8179,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8169,
											"end": 8183,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8162,
											"end": 8204,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8045,
											"end": 8211,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8045,
											"end": 8211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8217,
											"end": 8583,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 8217,
											"end": 8583,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8359,
											"end": 8362,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8380,
											"end": 8447,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 8444,
											"end": 8446,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 8439,
											"end": 8442,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8447,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 8380,
											"end": 8447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8447,
											"name": "tag",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 8380,
											"end": 8447,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8373,
											"end": 8447,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8373,
											"end": 8447,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8456,
											"end": 8549,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 8545,
											"end": 8548,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8456,
											"end": 8549,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 8456,
											"end": 8549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8456,
											"end": 8549,
											"name": "tag",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 8456,
											"end": 8549,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8574,
											"end": 8576,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8569,
											"end": 8572,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8565,
											"end": 8577,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8558,
											"end": 8577,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8558,
											"end": 8577,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8217,
											"end": 8583,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8217,
											"end": 8583,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8217,
											"end": 8583,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8217,
											"end": 8583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8589,
											"end": 9008,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 8589,
											"end": 9008,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8755,
											"end": 8759,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8793,
											"end": 8795,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8782,
											"end": 8791,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8778,
											"end": 8796,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8770,
											"end": 8796,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8770,
											"end": 8796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8842,
											"end": 8851,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8836,
											"end": 8840,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8832,
											"end": 8852,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8828,
											"end": 8829,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8817,
											"end": 8826,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8813,
											"end": 8830,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8853,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8870,
											"end": 9001,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 8996,
											"end": 9000,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8870,
											"end": 9001,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 8870,
											"end": 9001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8870,
											"end": 9001,
											"name": "tag",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 8870,
											"end": 9001,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8862,
											"end": 9001,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8862,
											"end": 9001,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8589,
											"end": 9008,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8589,
											"end": 9008,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8589,
											"end": 9008,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8589,
											"end": 9008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9014,
											"end": 9180,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 9014,
											"end": 9180,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9154,
											"end": 9172,
											"name": "PUSH",
											"source": 9,
											"value": "5363686564756C65207265766F6B656400000000000000000000000000000000"
										},
										{
											"begin": 9150,
											"end": 9151,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9142,
											"end": 9148,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9138,
											"end": 9152,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9131,
											"end": 9173,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9014,
											"end": 9180,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9014,
											"end": 9180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9186,
											"end": 9552,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 9186,
											"end": 9552,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9328,
											"end": 9331,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9349,
											"end": 9416,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 9413,
											"end": 9415,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 9408,
											"end": 9411,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 9416,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 9349,
											"end": 9416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 9416,
											"name": "tag",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 9349,
											"end": 9416,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9342,
											"end": 9416,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9342,
											"end": 9416,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9425,
											"end": 9518,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 9514,
											"end": 9517,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9425,
											"end": 9518,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 9425,
											"end": 9518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9425,
											"end": 9518,
											"name": "tag",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 9425,
											"end": 9518,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9543,
											"end": 9545,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9538,
											"end": 9541,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9534,
											"end": 9546,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9527,
											"end": 9546,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9527,
											"end": 9546,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9186,
											"end": 9552,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9186,
											"end": 9552,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9186,
											"end": 9552,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9186,
											"end": 9552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9558,
											"end": 9977,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 9558,
											"end": 9977,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9724,
											"end": 9728,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9762,
											"end": 9764,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9751,
											"end": 9760,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9739,
											"end": 9765,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9739,
											"end": 9765,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9811,
											"end": 9820,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9805,
											"end": 9809,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9801,
											"end": 9821,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9797,
											"end": 9798,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9786,
											"end": 9795,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9782,
											"end": 9799,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9775,
											"end": 9822,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9839,
											"end": 9970,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 9965,
											"end": 9969,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9839,
											"end": 9970,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 9839,
											"end": 9970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9839,
											"end": 9970,
											"name": "tag",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 9839,
											"end": 9970,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9831,
											"end": 9970,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9831,
											"end": 9970,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9558,
											"end": 9977,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9558,
											"end": 9977,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9558,
											"end": 9977,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9558,
											"end": 9977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9983,
											"end": 10163,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 9983,
											"end": 10163,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10031,
											"end": 10108,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10028,
											"end": 10029,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10021,
											"end": 10109,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10128,
											"end": 10132,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 10125,
											"end": 10126,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10118,
											"end": 10133,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10152,
											"end": 10156,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10149,
											"end": 10150,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10142,
											"end": 10157,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10169,
											"end": 10363,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 10169,
											"end": 10363,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10209,
											"end": 10213,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10229,
											"end": 10249,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 10247,
											"end": 10248,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10229,
											"end": 10249,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 10229,
											"end": 10249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10229,
											"end": 10249,
											"name": "tag",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 10229,
											"end": 10249,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10224,
											"end": 10249,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10224,
											"end": 10249,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10263,
											"end": 10283,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 10281,
											"end": 10282,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10263,
											"end": 10283,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 10263,
											"end": 10283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10263,
											"end": 10283,
											"name": "tag",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 10263,
											"end": 10283,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10258,
											"end": 10283,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10258,
											"end": 10283,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10307,
											"end": 10308,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10304,
											"end": 10305,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10300,
											"end": 10309,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10292,
											"end": 10309,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10292,
											"end": 10309,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10331,
											"end": 10332,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10325,
											"end": 10329,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10322,
											"end": 10333,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 10319,
											"end": 10356,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10319,
											"end": 10356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 10319,
											"end": 10356,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10336,
											"end": 10354,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 10336,
											"end": 10354,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 10336,
											"end": 10354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10336,
											"end": 10354,
											"name": "tag",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 10336,
											"end": 10354,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10319,
											"end": 10356,
											"name": "tag",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 10319,
											"end": 10356,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10169,
											"end": 10363,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10169,
											"end": 10363,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10169,
											"end": 10363,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10169,
											"end": 10363,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10169,
											"end": 10363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10369,
											"end": 10539,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 10369,
											"end": 10539,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10509,
											"end": 10531,
											"name": "PUSH",
											"source": 9,
											"value": "4E6F20746F6B656E7320746F2072656C65617365000000000000000000000000"
										},
										{
											"begin": 10505,
											"end": 10506,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10497,
											"end": 10503,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10493,
											"end": 10507,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10486,
											"end": 10532,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10369,
											"end": 10539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10369,
											"end": 10539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10545,
											"end": 10911,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 10545,
											"end": 10911,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10687,
											"end": 10690,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10708,
											"end": 10775,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 10772,
											"end": 10774,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 10767,
											"end": 10770,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10708,
											"end": 10775,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 10708,
											"end": 10775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10708,
											"end": 10775,
											"name": "tag",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 10708,
											"end": 10775,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10701,
											"end": 10775,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10701,
											"end": 10775,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10784,
											"end": 10877,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 10873,
											"end": 10876,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10784,
											"end": 10877,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 10784,
											"end": 10877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10784,
											"end": 10877,
											"name": "tag",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 10784,
											"end": 10877,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10902,
											"end": 10904,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10897,
											"end": 10900,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10893,
											"end": 10905,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10886,
											"end": 10905,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10886,
											"end": 10905,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10545,
											"end": 10911,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10545,
											"end": 10911,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10545,
											"end": 10911,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10545,
											"end": 10911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10917,
											"end": 11336,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 10917,
											"end": 11336,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11083,
											"end": 11087,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11121,
											"end": 11123,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11110,
											"end": 11119,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11106,
											"end": 11124,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11098,
											"end": 11124,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11098,
											"end": 11124,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11170,
											"end": 11179,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11164,
											"end": 11168,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11160,
											"end": 11180,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11156,
											"end": 11157,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11145,
											"end": 11154,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11141,
											"end": 11158,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11134,
											"end": 11181,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11198,
											"end": 11329,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 11324,
											"end": 11328,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11198,
											"end": 11329,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 11198,
											"end": 11329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11198,
											"end": 11329,
											"name": "tag",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 11198,
											"end": 11329,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11190,
											"end": 11329,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11190,
											"end": 11329,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10917,
											"end": 11336,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10917,
											"end": 11336,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10917,
											"end": 11336,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10917,
											"end": 11336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11342,
											"end": 11533,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 11342,
											"end": 11533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11382,
											"end": 11385,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11401,
											"end": 11421,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 11419,
											"end": 11420,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11401,
											"end": 11421,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 11401,
											"end": 11421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11401,
											"end": 11421,
											"name": "tag",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 11401,
											"end": 11421,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11396,
											"end": 11421,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11396,
											"end": 11421,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11435,
											"end": 11455,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 11453,
											"end": 11454,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11435,
											"end": 11455,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 11435,
											"end": 11455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11435,
											"end": 11455,
											"name": "tag",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 11435,
											"end": 11455,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11430,
											"end": 11455,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11430,
											"end": 11455,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11478,
											"end": 11479,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11475,
											"end": 11476,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11471,
											"end": 11480,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11464,
											"end": 11480,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11464,
											"end": 11480,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11499,
											"end": 11502,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11496,
											"end": 11497,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11493,
											"end": 11503,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11490,
											"end": 11526,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11490,
											"end": 11526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 11490,
											"end": 11526,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11506,
											"end": 11524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 11506,
											"end": 11524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 11506,
											"end": 11524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11506,
											"end": 11524,
											"name": "tag",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 11506,
											"end": 11524,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11490,
											"end": 11526,
											"name": "tag",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 11490,
											"end": 11526,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11342,
											"end": 11533,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11342,
											"end": 11533,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11342,
											"end": 11533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11342,
											"end": 11533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11342,
											"end": 11533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11539,
											"end": 11871,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 11539,
											"end": 11871,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11660,
											"end": 11664,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11698,
											"end": 11700,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11687,
											"end": 11696,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11683,
											"end": 11701,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11675,
											"end": 11701,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11675,
											"end": 11701,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11711,
											"end": 11782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 11779,
											"end": 11780,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11768,
											"end": 11777,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11764,
											"end": 11781,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11755,
											"end": 11761,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11711,
											"end": 11782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 11711,
											"end": 11782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11711,
											"end": 11782,
											"name": "tag",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 11711,
											"end": 11782,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11792,
											"end": 11864,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 11860,
											"end": 11862,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11849,
											"end": 11858,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11845,
											"end": 11863,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11836,
											"end": 11842,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11792,
											"end": 11864,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 11792,
											"end": 11864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11792,
											"end": 11864,
											"name": "tag",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 11792,
											"end": 11864,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11539,
											"end": 11871,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 11539,
											"end": 11871,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11539,
											"end": 11871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11539,
											"end": 11871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11539,
											"end": 11871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11539,
											"end": 11871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11877,
											"end": 12014,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 11877,
											"end": 12014,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11931,
											"end": 11936,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11962,
											"end": 11968,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11956,
											"end": 11969,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11947,
											"end": 11969,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11947,
											"end": 11969,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11978,
											"end": 12008,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "480"
										},
										{
											"begin": 12002,
											"end": 12007,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11978,
											"end": 12008,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 11978,
											"end": 12008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11978,
											"end": 12008,
											"name": "tag",
											"source": 9,
											"value": "480"
										},
										{
											"begin": 11978,
											"end": 12008,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11877,
											"end": 12014,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11877,
											"end": 12014,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11877,
											"end": 12014,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11877,
											"end": 12014,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11877,
											"end": 12014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12020,
											"end": 12365,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 12020,
											"end": 12365,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12087,
											"end": 12093,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12136,
											"end": 12138,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12124,
											"end": 12133,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12122,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12111,
											"end": 12134,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12139,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 12104,
											"end": 12223,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12104,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "482"
										},
										{
											"begin": 12104,
											"end": 12223,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12142,
											"end": 12221,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 12142,
											"end": 12221,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 12142,
											"end": 12221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12142,
											"end": 12221,
											"name": "tag",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 12142,
											"end": 12221,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12104,
											"end": 12223,
											"name": "tag",
											"source": 9,
											"value": "482"
										},
										{
											"begin": 12104,
											"end": 12223,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12262,
											"end": 12263,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12287,
											"end": 12348,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 12340,
											"end": 12347,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12331,
											"end": 12337,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12320,
											"end": 12329,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12316,
											"end": 12338,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12287,
											"end": 12348,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 12287,
											"end": 12348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12287,
											"end": 12348,
											"name": "tag",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 12287,
											"end": 12348,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12277,
											"end": 12348,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12277,
											"end": 12348,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12233,
											"end": 12358,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12020,
											"end": 12365,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12020,
											"end": 12365,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12020,
											"end": 12365,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12020,
											"end": 12365,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12020,
											"end": 12365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12371,
											"end": 12536,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 12371,
											"end": 12536,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12511,
											"end": 12528,
											"name": "PUSH",
											"source": 9,
											"value": "5472616E73666572206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 12507,
											"end": 12508,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12499,
											"end": 12505,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12495,
											"end": 12509,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12488,
											"end": 12529,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12371,
											"end": 12536,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12371,
											"end": 12536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12542,
											"end": 12908,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 12542,
											"end": 12908,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12684,
											"end": 12687,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12705,
											"end": 12772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 12769,
											"end": 12771,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 12764,
											"end": 12767,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12705,
											"end": 12772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 12705,
											"end": 12772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12705,
											"end": 12772,
											"name": "tag",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 12705,
											"end": 12772,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12698,
											"end": 12772,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12698,
											"end": 12772,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12781,
											"end": 12874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 12870,
											"end": 12873,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12781,
											"end": 12874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 12781,
											"end": 12874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12781,
											"end": 12874,
											"name": "tag",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 12781,
											"end": 12874,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12899,
											"end": 12901,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12894,
											"end": 12897,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12890,
											"end": 12902,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12883,
											"end": 12902,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12883,
											"end": 12902,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12542,
											"end": 12908,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12542,
											"end": 12908,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12542,
											"end": 12908,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12542,
											"end": 12908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12914,
											"end": 13333,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 12914,
											"end": 13333,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13080,
											"end": 13084,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13118,
											"end": 13120,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13107,
											"end": 13116,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13103,
											"end": 13121,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13095,
											"end": 13121,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13095,
											"end": 13121,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13167,
											"end": 13176,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13161,
											"end": 13165,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13157,
											"end": 13177,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13153,
											"end": 13154,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13142,
											"end": 13151,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13138,
											"end": 13155,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13131,
											"end": 13178,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13195,
											"end": 13326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 13321,
											"end": 13325,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13195,
											"end": 13326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 13195,
											"end": 13326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13195,
											"end": 13326,
											"name": "tag",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 13195,
											"end": 13326,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13187,
											"end": 13326,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13187,
											"end": 13326,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12914,
											"end": 13333,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12914,
											"end": 13333,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12914,
											"end": 13333,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12914,
											"end": 13333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13339,
											"end": 13508,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 13339,
											"end": 13508,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13479,
											"end": 13500,
											"name": "PUSH",
											"source": 9,
											"value": "496E76616C69642062656E656669636961727900000000000000000000000000"
										},
										{
											"begin": 13475,
											"end": 13476,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13467,
											"end": 13473,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13463,
											"end": 13477,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13456,
											"end": 13501,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13339,
											"end": 13508,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13339,
											"end": 13508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13514,
											"end": 13880,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 13514,
											"end": 13880,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13656,
											"end": 13659,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13677,
											"end": 13744,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 13741,
											"end": 13743,
											"name": "PUSH",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 13736,
											"end": 13739,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13677,
											"end": 13744,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 13677,
											"end": 13744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13677,
											"end": 13744,
											"name": "tag",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 13677,
											"end": 13744,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13670,
											"end": 13744,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13670,
											"end": 13744,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13753,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 13842,
											"end": 13845,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13753,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 13753,
											"end": 13846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13753,
											"end": 13846,
											"name": "tag",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 13753,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13871,
											"end": 13873,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13866,
											"end": 13869,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13862,
											"end": 13874,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13855,
											"end": 13874,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13855,
											"end": 13874,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13514,
											"end": 13880,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13514,
											"end": 13880,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13514,
											"end": 13880,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13514,
											"end": 13880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13886,
											"end": 14305,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 13886,
											"end": 14305,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14052,
											"end": 14056,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14090,
											"end": 14092,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14079,
											"end": 14088,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14075,
											"end": 14093,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14067,
											"end": 14093,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14067,
											"end": 14093,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14139,
											"end": 14148,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14133,
											"end": 14137,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14129,
											"end": 14149,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14125,
											"end": 14126,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14114,
											"end": 14123,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14110,
											"end": 14127,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14103,
											"end": 14150,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14167,
											"end": 14298,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 14293,
											"end": 14297,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14167,
											"end": 14298,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 14167,
											"end": 14298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14167,
											"end": 14298,
											"name": "tag",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 14167,
											"end": 14298,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14159,
											"end": 14298,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14159,
											"end": 14298,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13886,
											"end": 14305,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13886,
											"end": 14305,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13886,
											"end": 14305,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13886,
											"end": 14305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14311,
											"end": 14479,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 14311,
											"end": 14479,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14451,
											"end": 14471,
											"name": "PUSH",
											"source": 9,
											"value": "416D6F756E74206D757374206265203E20300000000000000000000000000000"
										},
										{
											"begin": 14447,
											"end": 14448,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14439,
											"end": 14445,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14435,
											"end": 14449,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14428,
											"end": 14472,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14311,
											"end": 14479,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14311,
											"end": 14479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14485,
											"end": 14851,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 14485,
											"end": 14851,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14627,
											"end": 14630,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14648,
											"end": 14715,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 14712,
											"end": 14714,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 14707,
											"end": 14710,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14648,
											"end": 14715,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 14648,
											"end": 14715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14648,
											"end": 14715,
											"name": "tag",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 14648,
											"end": 14715,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14641,
											"end": 14715,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14641,
											"end": 14715,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14724,
											"end": 14817,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "500"
										},
										{
											"begin": 14813,
											"end": 14816,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14724,
											"end": 14817,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 14724,
											"end": 14817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14724,
											"end": 14817,
											"name": "tag",
											"source": 9,
											"value": "500"
										},
										{
											"begin": 14724,
											"end": 14817,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14842,
											"end": 14844,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14837,
											"end": 14840,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14833,
											"end": 14845,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14826,
											"end": 14845,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14826,
											"end": 14845,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14485,
											"end": 14851,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14485,
											"end": 14851,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14485,
											"end": 14851,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14485,
											"end": 14851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14857,
											"end": 15276,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 14857,
											"end": 15276,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15023,
											"end": 15027,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15061,
											"end": 15063,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15050,
											"end": 15059,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15046,
											"end": 15064,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15038,
											"end": 15064,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15038,
											"end": 15064,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15110,
											"end": 15119,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15104,
											"end": 15108,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15100,
											"end": 15120,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15096,
											"end": 15097,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15085,
											"end": 15094,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15081,
											"end": 15098,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15074,
											"end": 15121,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15138,
											"end": 15269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 15264,
											"end": 15268,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15138,
											"end": 15269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 15138,
											"end": 15269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15138,
											"end": 15269,
											"name": "tag",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 15138,
											"end": 15269,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15130,
											"end": 15269,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15130,
											"end": 15269,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14857,
											"end": 15276,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14857,
											"end": 15276,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14857,
											"end": 15276,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14857,
											"end": 15276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15282,
											"end": 15452,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 15282,
											"end": 15452,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15422,
											"end": 15444,
											"name": "PUSH",
											"source": 9,
											"value": "4475726174696F6E206D757374206265203E2030000000000000000000000000"
										},
										{
											"begin": 15418,
											"end": 15419,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15410,
											"end": 15416,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15406,
											"end": 15420,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15399,
											"end": 15445,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15282,
											"end": 15452,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15282,
											"end": 15452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15458,
											"end": 15824,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 15458,
											"end": 15824,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15600,
											"end": 15603,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15621,
											"end": 15688,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 15685,
											"end": 15687,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 15680,
											"end": 15683,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15621,
											"end": 15688,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 15621,
											"end": 15688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15621,
											"end": 15688,
											"name": "tag",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 15621,
											"end": 15688,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15614,
											"end": 15688,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15614,
											"end": 15688,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15697,
											"end": 15790,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 15786,
											"end": 15789,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15697,
											"end": 15790,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 15697,
											"end": 15790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15697,
											"end": 15790,
											"name": "tag",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 15697,
											"end": 15790,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15815,
											"end": 15817,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15810,
											"end": 15813,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15806,
											"end": 15818,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15799,
											"end": 15818,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15799,
											"end": 15818,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15458,
											"end": 15824,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15458,
											"end": 15824,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15458,
											"end": 15824,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15458,
											"end": 15824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15830,
											"end": 16249,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 15830,
											"end": 16249,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15996,
											"end": 16000,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16034,
											"end": 16036,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16023,
											"end": 16032,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16019,
											"end": 16037,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16011,
											"end": 16037,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16011,
											"end": 16037,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16083,
											"end": 16092,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16077,
											"end": 16081,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16073,
											"end": 16093,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 16069,
											"end": 16070,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16058,
											"end": 16067,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16054,
											"end": 16071,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16047,
											"end": 16094,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16111,
											"end": 16242,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 16237,
											"end": 16241,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16111,
											"end": 16242,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 16111,
											"end": 16242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16111,
											"end": 16242,
											"name": "tag",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 16111,
											"end": 16242,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16103,
											"end": 16242,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16103,
											"end": 16242,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15830,
											"end": 16249,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15830,
											"end": 16249,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15830,
											"end": 16249,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15830,
											"end": 16249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16255,
											"end": 16429,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 16255,
											"end": 16429,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16395,
											"end": 16421,
											"name": "PUSH",
											"source": 9,
											"value": "536C69636520706572696F64206D757374206265203E20300000000000000000"
										},
										{
											"begin": 16391,
											"end": 16392,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16383,
											"end": 16389,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16379,
											"end": 16393,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16372,
											"end": 16422,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16255,
											"end": 16429,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16255,
											"end": 16429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16435,
											"end": 16801,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 16435,
											"end": 16801,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16577,
											"end": 16580,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16598,
											"end": 16665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 16662,
											"end": 16664,
											"name": "PUSH",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 16657,
											"end": 16660,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16598,
											"end": 16665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 16598,
											"end": 16665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16598,
											"end": 16665,
											"name": "tag",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 16598,
											"end": 16665,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16591,
											"end": 16665,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16591,
											"end": 16665,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16674,
											"end": 16767,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "512"
										},
										{
											"begin": 16763,
											"end": 16766,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16674,
											"end": 16767,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 16674,
											"end": 16767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16674,
											"end": 16767,
											"name": "tag",
											"source": 9,
											"value": "512"
										},
										{
											"begin": 16674,
											"end": 16767,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16792,
											"end": 16794,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16787,
											"end": 16790,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16783,
											"end": 16795,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16776,
											"end": 16795,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16776,
											"end": 16795,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16435,
											"end": 16801,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16435,
											"end": 16801,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16435,
											"end": 16801,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16435,
											"end": 16801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16807,
											"end": 17226,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 16807,
											"end": 17226,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16973,
											"end": 16977,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17011,
											"end": 17013,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17000,
											"end": 17009,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16996,
											"end": 17014,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16988,
											"end": 17014,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16988,
											"end": 17014,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17060,
											"end": 17069,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17054,
											"end": 17058,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17050,
											"end": 17070,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17046,
											"end": 17047,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17035,
											"end": 17044,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17031,
											"end": 17048,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17024,
											"end": 17071,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17088,
											"end": 17219,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 17214,
											"end": 17218,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17088,
											"end": 17219,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 17088,
											"end": 17219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17088,
											"end": 17219,
											"name": "tag",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 17088,
											"end": 17219,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17080,
											"end": 17219,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17080,
											"end": 17219,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16807,
											"end": 17226,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16807,
											"end": 17226,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16807,
											"end": 17226,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16807,
											"end": 17226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17232,
											"end": 17395,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 17232,
											"end": 17395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17372,
											"end": 17387,
											"name": "PUSH",
											"source": 9,
											"value": "496E76616C696420636C69666600000000000000000000000000000000000000"
										},
										{
											"begin": 17368,
											"end": 17369,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17360,
											"end": 17366,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17356,
											"end": 17370,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17349,
											"end": 17388,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17232,
											"end": 17395,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17232,
											"end": 17395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17401,
											"end": 17767,
											"name": "tag",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 17401,
											"end": 17767,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17543,
											"end": 17546,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17564,
											"end": 17631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "517"
										},
										{
											"begin": 17628,
											"end": 17630,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 17623,
											"end": 17626,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17564,
											"end": 17631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 17564,
											"end": 17631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17564,
											"end": 17631,
											"name": "tag",
											"source": 9,
											"value": "517"
										},
										{
											"begin": 17564,
											"end": 17631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17557,
											"end": 17631,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17557,
											"end": 17631,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17640,
											"end": 17733,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 17729,
											"end": 17732,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17640,
											"end": 17733,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 17640,
											"end": 17733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17640,
											"end": 17733,
											"name": "tag",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 17640,
											"end": 17733,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17758,
											"end": 17760,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17753,
											"end": 17756,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17749,
											"end": 17761,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17742,
											"end": 17761,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17742,
											"end": 17761,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17401,
											"end": 17767,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17401,
											"end": 17767,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17401,
											"end": 17767,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17401,
											"end": 17767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17773,
											"end": 18192,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 17773,
											"end": 18192,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17939,
											"end": 17943,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17977,
											"end": 17979,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17966,
											"end": 17975,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17962,
											"end": 17980,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17954,
											"end": 17980,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17954,
											"end": 17980,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18026,
											"end": 18035,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18020,
											"end": 18024,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18016,
											"end": 18036,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 18012,
											"end": 18013,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18001,
											"end": 18010,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17997,
											"end": 18014,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17990,
											"end": 18037,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18054,
											"end": 18185,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 18180,
											"end": 18184,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18054,
											"end": 18185,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 18054,
											"end": 18185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18054,
											"end": 18185,
											"name": "tag",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 18054,
											"end": 18185,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18046,
											"end": 18185,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18046,
											"end": 18185,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17773,
											"end": 18192,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17773,
											"end": 18192,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17773,
											"end": 18192,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17773,
											"end": 18192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18198,
											"end": 18364,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 18198,
											"end": 18364,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18338,
											"end": 18356,
											"name": "PUSH",
											"source": 9,
											"value": "53746172742074696D65203C206E6F7700000000000000000000000000000000"
										},
										{
											"begin": 18334,
											"end": 18335,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18326,
											"end": 18332,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18322,
											"end": 18336,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18315,
											"end": 18357,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18198,
											"end": 18364,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18198,
											"end": 18364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18370,
											"end": 18736,
											"name": "tag",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 18370,
											"end": 18736,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18512,
											"end": 18515,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18533,
											"end": 18600,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "523"
										},
										{
											"begin": 18597,
											"end": 18599,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 18592,
											"end": 18595,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18533,
											"end": 18600,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 18533,
											"end": 18600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18533,
											"end": 18600,
											"name": "tag",
											"source": 9,
											"value": "523"
										},
										{
											"begin": 18533,
											"end": 18600,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18526,
											"end": 18600,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18526,
											"end": 18600,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18609,
											"end": 18702,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "524"
										},
										{
											"begin": 18698,
											"end": 18701,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18609,
											"end": 18702,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 18609,
											"end": 18702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18609,
											"end": 18702,
											"name": "tag",
											"source": 9,
											"value": "524"
										},
										{
											"begin": 18609,
											"end": 18702,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18727,
											"end": 18729,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18722,
											"end": 18725,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18718,
											"end": 18730,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18711,
											"end": 18730,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18711,
											"end": 18730,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18370,
											"end": 18736,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18370,
											"end": 18736,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18370,
											"end": 18736,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18370,
											"end": 18736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18742,
											"end": 19161,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 18742,
											"end": 19161,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18908,
											"end": 18912,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18946,
											"end": 18948,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18935,
											"end": 18944,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18931,
											"end": 18949,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18923,
											"end": 18949,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18923,
											"end": 18949,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18995,
											"end": 19004,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18989,
											"end": 18993,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18985,
											"end": 19005,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 18981,
											"end": 18982,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18970,
											"end": 18979,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18966,
											"end": 18983,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18959,
											"end": 19006,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19023,
											"end": 19154,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 19149,
											"end": 19153,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19023,
											"end": 19154,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 19023,
											"end": 19154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19023,
											"end": 19154,
											"name": "tag",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 19023,
											"end": 19154,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19015,
											"end": 19154,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19015,
											"end": 19154,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18742,
											"end": 19161,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18742,
											"end": 19161,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18742,
											"end": 19161,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18742,
											"end": 19161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19167,
											"end": 19347,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 19167,
											"end": 19347,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19215,
											"end": 19292,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19212,
											"end": 19213,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19205,
											"end": 19293,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19312,
											"end": 19316,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 19309,
											"end": 19310,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 19302,
											"end": 19317,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19336,
											"end": 19340,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 19333,
											"end": 19334,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19326,
											"end": 19341,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 19353,
											"end": 19522,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 19353,
											"end": 19522,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19493,
											"end": 19514,
											"name": "PUSH",
											"source": 9,
											"value": "45786365656473206D61782076657374696E6700000000000000000000000000"
										},
										{
											"begin": 19489,
											"end": 19490,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19481,
											"end": 19487,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19477,
											"end": 19491,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19470,
											"end": 19515,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19353,
											"end": 19522,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19353,
											"end": 19522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19528,
											"end": 19894,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 19528,
											"end": 19894,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19670,
											"end": 19673,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19691,
											"end": 19758,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "530"
										},
										{
											"begin": 19755,
											"end": 19757,
											"name": "PUSH",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 19750,
											"end": 19753,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19691,
											"end": 19758,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 19691,
											"end": 19758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19691,
											"end": 19758,
											"name": "tag",
											"source": 9,
											"value": "530"
										},
										{
											"begin": 19691,
											"end": 19758,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19684,
											"end": 19758,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19684,
											"end": 19758,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19767,
											"end": 19860,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 19856,
											"end": 19859,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19767,
											"end": 19860,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 19767,
											"end": 19860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19767,
											"end": 19860,
											"name": "tag",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 19767,
											"end": 19860,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19885,
											"end": 19887,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19880,
											"end": 19883,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19876,
											"end": 19888,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19869,
											"end": 19888,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19869,
											"end": 19888,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19528,
											"end": 19894,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19528,
											"end": 19894,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19528,
											"end": 19894,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19528,
											"end": 19894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19900,
											"end": 20319,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 19900,
											"end": 20319,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20066,
											"end": 20070,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20104,
											"end": 20106,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20093,
											"end": 20102,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20089,
											"end": 20107,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20081,
											"end": 20107,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20081,
											"end": 20107,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20153,
											"end": 20162,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20147,
											"end": 20151,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20143,
											"end": 20163,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 20139,
											"end": 20140,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20128,
											"end": 20137,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20124,
											"end": 20141,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20117,
											"end": 20164,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20181,
											"end": 20312,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "533"
										},
										{
											"begin": 20307,
											"end": 20311,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20181,
											"end": 20312,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 20181,
											"end": 20312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20181,
											"end": 20312,
											"name": "tag",
											"source": 9,
											"value": "533"
										},
										{
											"begin": 20181,
											"end": 20312,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20173,
											"end": 20312,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20173,
											"end": 20312,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19900,
											"end": 20319,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19900,
											"end": 20319,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19900,
											"end": 20319,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19900,
											"end": 20319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20325,
											"end": 20767,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 20325,
											"end": 20767,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20474,
											"end": 20478,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20512,
											"end": 20514,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 20501,
											"end": 20510,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20497,
											"end": 20515,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20489,
											"end": 20515,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20489,
											"end": 20515,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20525,
											"end": 20596,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "535"
										},
										{
											"begin": 20593,
											"end": 20594,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20582,
											"end": 20591,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20578,
											"end": 20595,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20569,
											"end": 20575,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 20525,
											"end": 20596,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 20525,
											"end": 20596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20525,
											"end": 20596,
											"name": "tag",
											"source": 9,
											"value": "535"
										},
										{
											"begin": 20525,
											"end": 20596,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20606,
											"end": 20678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 20674,
											"end": 20676,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20663,
											"end": 20672,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20659,
											"end": 20677,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20650,
											"end": 20656,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 20606,
											"end": 20678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 20606,
											"end": 20678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20606,
											"end": 20678,
											"name": "tag",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 20606,
											"end": 20678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20688,
											"end": 20760,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "537"
										},
										{
											"begin": 20756,
											"end": 20758,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 20745,
											"end": 20754,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20741,
											"end": 20759,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20732,
											"end": 20738,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 20688,
											"end": 20760,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 20688,
											"end": 20760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20688,
											"end": 20760,
											"name": "tag",
											"source": 9,
											"value": "537"
										},
										{
											"begin": 20688,
											"end": 20760,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20325,
											"end": 20767,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 20325,
											"end": 20767,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 20325,
											"end": 20767,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20325,
											"end": 20767,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20325,
											"end": 20767,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20325,
											"end": 20767,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20325,
											"end": 20767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20773,
											"end": 21006,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 20773,
											"end": 21006,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20812,
											"end": 20815,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20835,
											"end": 20859,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "539"
										},
										{
											"begin": 20853,
											"end": 20858,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20835,
											"end": 20859,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 20835,
											"end": 20859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20835,
											"end": 20859,
											"name": "tag",
											"source": 9,
											"value": "539"
										},
										{
											"begin": 20835,
											"end": 20859,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20826,
											"end": 20859,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20826,
											"end": 20859,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20881,
											"end": 20947,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20874,
											"end": 20879,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20871,
											"end": 20948,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 20868,
											"end": 20971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 20868,
											"end": 20971,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 20951,
											"end": 20969,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "541"
										},
										{
											"begin": 20951,
											"end": 20969,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 20951,
											"end": 20969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20951,
											"end": 20969,
											"name": "tag",
											"source": 9,
											"value": "541"
										},
										{
											"begin": 20951,
											"end": 20969,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20868,
											"end": 20971,
											"name": "tag",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 20868,
											"end": 20971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20998,
											"end": 20999,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 20991,
											"end": 20996,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20987,
											"end": 21000,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20980,
											"end": 21000,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20980,
											"end": 21000,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20773,
											"end": 21006,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20773,
											"end": 21006,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20773,
											"end": 21006,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20773,
											"end": 21006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21012,
											"end": 21134,
											"name": "tag",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 21012,
											"end": 21134,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21102,
											"end": 21103,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 21095,
											"end": 21100,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21092,
											"end": 21104,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 21082,
											"end": 21128,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "543"
										},
										{
											"begin": 21082,
											"end": 21128,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 21108,
											"end": 21126,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "544"
										},
										{
											"begin": 21108,
											"end": 21126,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 21108,
											"end": 21126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21108,
											"end": 21126,
											"name": "tag",
											"source": 9,
											"value": "544"
										},
										{
											"begin": 21108,
											"end": 21126,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21082,
											"end": 21128,
											"name": "tag",
											"source": 9,
											"value": "543"
										},
										{
											"begin": 21082,
											"end": 21128,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21012,
											"end": 21134,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21012,
											"end": 21134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21140,
											"end": 21285,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 21140,
											"end": 21285,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21194,
											"end": 21201,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21223,
											"end": 21228,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21212,
											"end": 21228,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21212,
											"end": 21228,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21229,
											"end": 21279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "546"
										},
										{
											"begin": 21273,
											"end": 21278,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21229,
											"end": 21279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 21229,
											"end": 21279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21229,
											"end": 21279,
											"name": "tag",
											"source": 9,
											"value": "546"
										},
										{
											"begin": 21229,
											"end": 21279,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21140,
											"end": 21285,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21140,
											"end": 21285,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21140,
											"end": 21285,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21140,
											"end": 21285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21291,
											"end": 21436,
											"name": "tag",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 21291,
											"end": 21436,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21356,
											"end": 21365,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21389,
											"end": 21430,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "548"
										},
										{
											"begin": 21424,
											"end": 21429,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21389,
											"end": 21430,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 21389,
											"end": 21430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21389,
											"end": 21430,
											"name": "tag",
											"source": 9,
											"value": "548"
										},
										{
											"begin": 21389,
											"end": 21430,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21376,
											"end": 21430,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21376,
											"end": 21430,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21291,
											"end": 21436,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21291,
											"end": 21436,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21291,
											"end": 21436,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21291,
											"end": 21436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21442,
											"end": 21603,
											"name": "tag",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 21442,
											"end": 21603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21544,
											"end": 21596,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "550"
										},
										{
											"begin": 21590,
											"end": 21595,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21544,
											"end": 21596,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 21544,
											"end": 21596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21544,
											"end": 21596,
											"name": "tag",
											"source": 9,
											"value": "550"
										},
										{
											"begin": 21544,
											"end": 21596,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21539,
											"end": 21542,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21532,
											"end": 21597,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21442,
											"end": 21603,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21442,
											"end": 21603,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21442,
											"end": 21603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21609,
											"end": 21971,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 21609,
											"end": 21971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21745,
											"end": 21749,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21783,
											"end": 21785,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 21772,
											"end": 21781,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21768,
											"end": 21786,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21760,
											"end": 21786,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21760,
											"end": 21786,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21796,
											"end": 21882,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "552"
										},
										{
											"begin": 21879,
											"end": 21880,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21868,
											"end": 21877,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21864,
											"end": 21881,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21855,
											"end": 21861,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 21796,
											"end": 21882,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 21796,
											"end": 21882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21796,
											"end": 21882,
											"name": "tag",
											"source": 9,
											"value": "552"
										},
										{
											"begin": 21796,
											"end": 21882,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21892,
											"end": 21964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "553"
										},
										{
											"begin": 21960,
											"end": 21962,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21949,
											"end": 21958,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21945,
											"end": 21963,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21936,
											"end": 21942,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 21892,
											"end": 21964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 21892,
											"end": 21964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21892,
											"end": 21964,
											"name": "tag",
											"source": 9,
											"value": "553"
										},
										{
											"begin": 21892,
											"end": 21964,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21609,
											"end": 21971,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 21609,
											"end": 21971,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 21609,
											"end": 21971,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21609,
											"end": 21971,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21609,
											"end": 21971,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21609,
											"end": 21971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21977,
											"end": 22142,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 21977,
											"end": 22142,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22117,
											"end": 22134,
											"name": "PUSH",
											"source": 9,
											"value": "496E76616C696420616464726573730000000000000000000000000000000000"
										},
										{
											"begin": 22113,
											"end": 22114,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22105,
											"end": 22111,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22101,
											"end": 22115,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22094,
											"end": 22135,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21977,
											"end": 22142,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21977,
											"end": 22142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22148,
											"end": 22514,
											"name": "tag",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 22148,
											"end": 22514,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22290,
											"end": 22293,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22311,
											"end": 22378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "556"
										},
										{
											"begin": 22375,
											"end": 22377,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 22370,
											"end": 22373,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22311,
											"end": 22378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 22311,
											"end": 22378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22311,
											"end": 22378,
											"name": "tag",
											"source": 9,
											"value": "556"
										},
										{
											"begin": 22311,
											"end": 22378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22304,
											"end": 22378,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22304,
											"end": 22378,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22387,
											"end": 22480,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "557"
										},
										{
											"begin": 22476,
											"end": 22479,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22387,
											"end": 22480,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 22387,
											"end": 22480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22387,
											"end": 22480,
											"name": "tag",
											"source": 9,
											"value": "557"
										},
										{
											"begin": 22387,
											"end": 22480,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22505,
											"end": 22507,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22500,
											"end": 22503,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22496,
											"end": 22508,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22489,
											"end": 22508,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22489,
											"end": 22508,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22148,
											"end": 22514,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22148,
											"end": 22514,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22148,
											"end": 22514,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22148,
											"end": 22514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22520,
											"end": 22939,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 22520,
											"end": 22939,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22686,
											"end": 22690,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22724,
											"end": 22726,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22713,
											"end": 22722,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22709,
											"end": 22727,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22701,
											"end": 22727,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22701,
											"end": 22727,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22773,
											"end": 22782,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22767,
											"end": 22771,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22763,
											"end": 22783,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 22759,
											"end": 22760,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22748,
											"end": 22757,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22744,
											"end": 22761,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22737,
											"end": 22784,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22801,
											"end": 22932,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "559"
										},
										{
											"begin": 22927,
											"end": 22931,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22801,
											"end": 22932,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 22801,
											"end": 22932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22801,
											"end": 22932,
											"name": "tag",
											"source": 9,
											"value": "559"
										},
										{
											"begin": 22801,
											"end": 22932,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22793,
											"end": 22932,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22793,
											"end": 22932,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22520,
											"end": 22939,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22520,
											"end": 22939,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22520,
											"end": 22939,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22520,
											"end": 22939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22945,
											"end": 23108,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 22945,
											"end": 23108,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23085,
											"end": 23100,
											"name": "PUSH",
											"source": 9,
											"value": "4E6F74207265766F6361626C6500000000000000000000000000000000000000"
										},
										{
											"begin": 23081,
											"end": 23082,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23073,
											"end": 23079,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23069,
											"end": 23083,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23062,
											"end": 23101,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22945,
											"end": 23108,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22945,
											"end": 23108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23114,
											"end": 23480,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 23114,
											"end": 23480,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23256,
											"end": 23259,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23277,
											"end": 23344,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "562"
										},
										{
											"begin": 23341,
											"end": 23343,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 23336,
											"end": 23339,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 23277,
											"end": 23344,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 23277,
											"end": 23344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23277,
											"end": 23344,
											"name": "tag",
											"source": 9,
											"value": "562"
										},
										{
											"begin": 23277,
											"end": 23344,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23270,
											"end": 23344,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23270,
											"end": 23344,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23353,
											"end": 23446,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "563"
										},
										{
											"begin": 23442,
											"end": 23445,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23353,
											"end": 23446,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 23353,
											"end": 23446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23353,
											"end": 23446,
											"name": "tag",
											"source": 9,
											"value": "563"
										},
										{
											"begin": 23353,
											"end": 23446,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23471,
											"end": 23473,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23466,
											"end": 23469,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23462,
											"end": 23474,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23455,
											"end": 23474,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23455,
											"end": 23474,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23114,
											"end": 23480,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23114,
											"end": 23480,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23114,
											"end": 23480,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23114,
											"end": 23480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23486,
											"end": 23905,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 23486,
											"end": 23905,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23652,
											"end": 23656,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23690,
											"end": 23692,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23679,
											"end": 23688,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23675,
											"end": 23693,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23667,
											"end": 23693,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23667,
											"end": 23693,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23739,
											"end": 23748,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23733,
											"end": 23737,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23729,
											"end": 23749,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 23725,
											"end": 23726,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23714,
											"end": 23723,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 23710,
											"end": 23727,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23703,
											"end": 23750,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23767,
											"end": 23898,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "565"
										},
										{
											"begin": 23893,
											"end": 23897,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23767,
											"end": 23898,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 23767,
											"end": 23898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23767,
											"end": 23898,
											"name": "tag",
											"source": 9,
											"value": "565"
										},
										{
											"begin": 23767,
											"end": 23898,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23759,
											"end": 23898,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23759,
											"end": 23898,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23486,
											"end": 23905,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23486,
											"end": 23905,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23486,
											"end": 23905,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23486,
											"end": 23905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23911,
											"end": 24076,
											"name": "tag",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 23911,
											"end": 24076,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24051,
											"end": 24068,
											"name": "PUSH",
											"source": 9,
											"value": "416C7265616479207265766F6B65640000000000000000000000000000000000"
										},
										{
											"begin": 24047,
											"end": 24048,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24039,
											"end": 24045,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24035,
											"end": 24049,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24028,
											"end": 24069,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23911,
											"end": 24076,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23911,
											"end": 24076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24082,
											"end": 24448,
											"name": "tag",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 24082,
											"end": 24448,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24224,
											"end": 24227,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24245,
											"end": 24312,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "568"
										},
										{
											"begin": 24309,
											"end": 24311,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 24304,
											"end": 24307,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 24245,
											"end": 24312,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 24245,
											"end": 24312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24245,
											"end": 24312,
											"name": "tag",
											"source": 9,
											"value": "568"
										},
										{
											"begin": 24245,
											"end": 24312,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24238,
											"end": 24312,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24238,
											"end": 24312,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24321,
											"end": 24414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "569"
										},
										{
											"begin": 24410,
											"end": 24413,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24321,
											"end": 24414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 24321,
											"end": 24414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24321,
											"end": 24414,
											"name": "tag",
											"source": 9,
											"value": "569"
										},
										{
											"begin": 24321,
											"end": 24414,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24439,
											"end": 24441,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 24434,
											"end": 24437,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24430,
											"end": 24442,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24423,
											"end": 24442,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24423,
											"end": 24442,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24082,
											"end": 24448,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24082,
											"end": 24448,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24082,
											"end": 24448,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24082,
											"end": 24448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24454,
											"end": 24873,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 24454,
											"end": 24873,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24620,
											"end": 24624,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24658,
											"end": 24660,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 24647,
											"end": 24656,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24643,
											"end": 24661,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24635,
											"end": 24661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24635,
											"end": 24661,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24707,
											"end": 24716,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24701,
											"end": 24705,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24697,
											"end": 24717,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 24693,
											"end": 24694,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24682,
											"end": 24691,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 24678,
											"end": 24695,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24671,
											"end": 24718,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 24735,
											"end": 24866,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 24861,
											"end": 24865,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24735,
											"end": 24866,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 24735,
											"end": 24866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24735,
											"end": 24866,
											"name": "tag",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 24735,
											"end": 24866,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24727,
											"end": 24866,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24727,
											"end": 24866,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24454,
											"end": 24873,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24454,
											"end": 24873,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24454,
											"end": 24873,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24454,
											"end": 24873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24879,
											"end": 25059,
											"name": "tag",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 24879,
											"end": 25059,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24927,
											"end": 25004,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24924,
											"end": 24925,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24917,
											"end": 25005,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 25024,
											"end": 25028,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 25021,
											"end": 25022,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 25014,
											"end": 25029,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 25048,
											"end": 25052,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 25045,
											"end": 25046,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25038,
											"end": 25053,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 25065,
											"end": 25250,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 25065,
											"end": 25250,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25105,
											"end": 25106,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25122,
											"end": 25142,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "574"
										},
										{
											"begin": 25140,
											"end": 25141,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25122,
											"end": 25142,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 25122,
											"end": 25142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25122,
											"end": 25142,
											"name": "tag",
											"source": 9,
											"value": "574"
										},
										{
											"begin": 25122,
											"end": 25142,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25117,
											"end": 25142,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25117,
											"end": 25142,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25156,
											"end": 25176,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "575"
										},
										{
											"begin": 25174,
											"end": 25175,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 25156,
											"end": 25176,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 25156,
											"end": 25176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25156,
											"end": 25176,
											"name": "tag",
											"source": 9,
											"value": "575"
										},
										{
											"begin": 25156,
											"end": 25176,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25151,
											"end": 25176,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 25151,
											"end": 25176,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25195,
											"end": 25196,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25185,
											"end": 25220,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "576"
										},
										{
											"begin": 25185,
											"end": 25220,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 25200,
											"end": 25218,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "577"
										},
										{
											"begin": 25200,
											"end": 25218,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 25200,
											"end": 25218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25200,
											"end": 25218,
											"name": "tag",
											"source": 9,
											"value": "577"
										},
										{
											"begin": 25200,
											"end": 25218,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25185,
											"end": 25220,
											"name": "tag",
											"source": 9,
											"value": "576"
										},
										{
											"begin": 25185,
											"end": 25220,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25242,
											"end": 25243,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25239,
											"end": 25240,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25235,
											"end": 25244,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 25230,
											"end": 25244,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25230,
											"end": 25244,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25065,
											"end": 25250,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 25065,
											"end": 25250,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25065,
											"end": 25250,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25065,
											"end": 25250,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25065,
											"end": 25250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25256,
											"end": 25666,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 25256,
											"end": 25666,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25296,
											"end": 25303,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25319,
											"end": 25339,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "579"
										},
										{
											"begin": 25337,
											"end": 25338,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25319,
											"end": 25339,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 25319,
											"end": 25339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25319,
											"end": 25339,
											"name": "tag",
											"source": 9,
											"value": "579"
										},
										{
											"begin": 25319,
											"end": 25339,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25314,
											"end": 25339,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25314,
											"end": 25339,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25353,
											"end": 25373,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "580"
										},
										{
											"begin": 25371,
											"end": 25372,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 25353,
											"end": 25373,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 25353,
											"end": 25373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25353,
											"end": 25373,
											"name": "tag",
											"source": 9,
											"value": "580"
										},
										{
											"begin": 25353,
											"end": 25373,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25348,
											"end": 25373,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 25348,
											"end": 25373,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25408,
											"end": 25409,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25405,
											"end": 25406,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25401,
											"end": 25410,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 25430,
											"end": 25460,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "581"
										},
										{
											"begin": 25448,
											"end": 25459,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25430,
											"end": 25460,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 25430,
											"end": 25460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25430,
											"end": 25460,
											"name": "tag",
											"source": 9,
											"value": "581"
										},
										{
											"begin": 25430,
											"end": 25460,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25419,
											"end": 25460,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25419,
											"end": 25460,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25609,
											"end": 25610,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25600,
											"end": 25607,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25596,
											"end": 25611,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 25593,
											"end": 25594,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 25590,
											"end": 25612,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 25570,
											"end": 25571,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 25563,
											"end": 25572,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 25543,
											"end": 25626,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 25520,
											"end": 25659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "582"
										},
										{
											"begin": 25520,
											"end": 25659,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 25639,
											"end": 25657,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "583"
										},
										{
											"begin": 25639,
											"end": 25657,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 25639,
											"end": 25657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25639,
											"end": 25657,
											"name": "tag",
											"source": 9,
											"value": "583"
										},
										{
											"begin": 25639,
											"end": 25657,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25520,
											"end": 25659,
											"name": "tag",
											"source": 9,
											"value": "582"
										},
										{
											"begin": 25520,
											"end": 25659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25304,
											"end": 25666,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25256,
											"end": 25666,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 25256,
											"end": 25666,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25256,
											"end": 25666,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25256,
											"end": 25666,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25256,
											"end": 25666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"token/TokenVesting.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"computeReleasableAmount(address,uint256)": "fc76977f",
							"createVestingSchedule(address,uint8,uint256,uint256,uint256,uint256,uint256,bool)": "4f86f440",
							"getVestingSchedule(address,uint256)": "bed9757e",
							"maxVestingByType(uint8)": "406a99af",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"release(uint256)": "37bdc99b",
							"renounceOwnership()": "715018a6",
							"revoke(address,uint256)": "eac449d9",
							"token()": "fc0c546a",
							"totalVestedByType(uint8)": "02f622d2",
							"transferOwnership(address)": "f2fde38b",
							"treasury()": "61d027b3",
							"unpause()": "3f4ba83a",
							"updateTreasury(address)": "7f51bb1f",
							"vestingScheduleCount(address)": "a9bb5c4c",
							"vestingSchedules(address,uint256)": "45626bd6",
							"vestingSchedulesCount()": "c741d92f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"scheduleId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldTreasury\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"}],\"name\":\"TreasuryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"scheduleId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum TokenVesting.ScheduleType\",\"name\":\"scheduleType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"VestingScheduleCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"scheduleId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"refundAmount\",\"type\":\"uint256\"}],\"name\":\"VestingScheduleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"scheduleId\",\"type\":\"uint256\"}],\"name\":\"computeReleasableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"enum TokenVesting.ScheduleType\",\"name\":\"scheduleType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cliffDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slicePeriod\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"}],\"name\":\"createVestingSchedule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"scheduleId\",\"type\":\"uint256\"}],\"name\":\"getVestingSchedule\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"releasedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cliffDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slicePeriod\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum TokenVesting.ScheduleType\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"maxVestingByType\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"scheduleId\",\"type\":\"uint256\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"scheduleId\",\"type\":\"uint256\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum TokenVesting.ScheduleType\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"totalVestedByType\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"}],\"name\":\"updateTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vestingScheduleCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"vestingSchedules\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"releasedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cliffDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slicePeriod\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingSchedulesCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Supports multiple beneficiaries with different vesting schedules\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_token\":\"CipherZeroToken address\",\"_treasury\":\"Treasury address\",\"initialOwner\":\"Initial owner address\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"TokenVesting\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor\"},\"createVestingSchedule(address,uint8,uint256,uint256,uint256,uint256,uint256,bool)\":{\"notice\":\"Create a new vesting schedule\"},\"release(uint256)\":{\"notice\":\"Release vested tokens for a schedule\"},\"revoke(address,uint256)\":{\"notice\":\"Revoke a vesting schedule\"},\"updateTreasury(address)\":{\"notice\":\"Update treasury address\"}},\"notice\":\"Manages token vesting schedules for CipherZeroToken\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"token/TokenVesting.sol\":\"TokenVesting\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"token/TokenVesting.sol\":{\"keccak256\":\"0x4e86f14ce253338244bc1d19e26b7b31bed820b9b017cd8de42b014246f8610c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://367daf1091ee11abf69aac1641f095be5eb45fde392548986bae7457c6c8aa39\",\"dweb:/ipfs/QmRk27NPqShqdWbarGhcvMW27qDyr2KgwfujtU25tUR9Fp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "token/TokenVesting.sol:TokenVesting",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 435,
								"contract": "token/TokenVesting.sol:TokenVesting",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 316,
								"contract": "token/TokenVesting.sol:TokenVesting",
								"label": "_paused",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 3907,
								"contract": "token/TokenVesting.sol:TokenVesting",
								"label": "token",
								"offset": 1,
								"slot": "2",
								"type": "t_contract(IERC20)225"
							},
							{
								"astId": 3913,
								"contract": "token/TokenVesting.sol:TokenVesting",
								"label": "vestingSchedules",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_array(t_struct(VestingSchedule)3898_storage)dyn_storage)"
							},
							{
								"astId": 3917,
								"contract": "token/TokenVesting.sol:TokenVesting",
								"label": "vestingScheduleCount",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 3922,
								"contract": "token/TokenVesting.sol:TokenVesting",
								"label": "totalVestedByType",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_enum(ScheduleType)3904,t_uint256)"
							},
							{
								"astId": 3927,
								"contract": "token/TokenVesting.sol:TokenVesting",
								"label": "maxVestingByType",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_enum(ScheduleType)3904,t_uint256)"
							},
							{
								"astId": 3929,
								"contract": "token/TokenVesting.sol:TokenVesting",
								"label": "vestingSchedulesCount",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 3931,
								"contract": "token/TokenVesting.sol:TokenVesting",
								"label": "treasury",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(VestingSchedule)3898_storage)dyn_storage": {
								"base": "t_struct(VestingSchedule)3898_storage",
								"encoding": "dynamic_array",
								"label": "struct TokenVesting.VestingSchedule[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)225": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_enum(ScheduleType)3904": {
								"encoding": "inplace",
								"label": "enum TokenVesting.ScheduleType",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_array(t_struct(VestingSchedule)3898_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct TokenVesting.VestingSchedule[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(VestingSchedule)3898_storage)dyn_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_enum(ScheduleType)3904,t_uint256)": {
								"encoding": "mapping",
								"key": "t_enum(ScheduleType)3904",
								"label": "mapping(enum TokenVesting.ScheduleType => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(VestingSchedule)3898_storage": {
								"encoding": "inplace",
								"label": "struct TokenVesting.VestingSchedule",
								"members": [
									{
										"astId": 3883,
										"contract": "token/TokenVesting.sol:TokenVesting",
										"label": "totalAmount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 3885,
										"contract": "token/TokenVesting.sol:TokenVesting",
										"label": "releasedAmount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 3887,
										"contract": "token/TokenVesting.sol:TokenVesting",
										"label": "startTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 3889,
										"contract": "token/TokenVesting.sol:TokenVesting",
										"label": "duration",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 3891,
										"contract": "token/TokenVesting.sol:TokenVesting",
										"label": "cliffDuration",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 3893,
										"contract": "token/TokenVesting.sol:TokenVesting",
										"label": "slicePeriod",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 3895,
										"contract": "token/TokenVesting.sol:TokenVesting",
										"label": "revocable",
										"offset": 0,
										"slot": "6",
										"type": "t_bool"
									},
									{
										"astId": 3897,
										"contract": "token/TokenVesting.sol:TokenVesting",
										"label": "revoked",
										"offset": 1,
										"slot": "6",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"constructor": {
								"notice": "Constructor"
							},
							"createVestingSchedule(address,uint8,uint256,uint256,uint256,uint256,uint256,bool)": {
								"notice": "Create a new vesting schedule"
							},
							"release(uint256)": {
								"notice": "Release vested tokens for a schedule"
							},
							"revoke(address,uint256)": {
								"notice": "Revoke a vesting schedule"
							},
							"updateTreasury(address)": {
								"notice": "Update treasury address"
							}
						},
						"notice": "Manages token vesting schedules for CipherZeroToken",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							255
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 256,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 255,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 255,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								255
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 237,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:1",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20",
							"nameLocation": "214:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 159,
									"name": "Transfer",
									"nameLocation": "396:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "405:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "427:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "447:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:1"
									},
									"src": "390:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 168,
									"name": "Approval",
									"nameLocation": "627:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "636:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "659:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "684:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:1"
									},
									"src": "621:78:1"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "821:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:1"
									},
									"scope": 225,
									"src": "775:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 225,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1222:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1234:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1267:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:1"
									},
									"scope": 225,
									"src": "1204:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1567:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1582:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1622:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:1"
									},
									"scope": 225,
									"src": "1548:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2326:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2343:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2376:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:1"
									},
									"scope": 225,
									"src": "2309:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2712:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2726:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2738:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2771:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:1"
									},
									"scope": 225,
									"src": "2690:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "204:2575:1",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "106:2674:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							255
						]
					},
					"id": 256,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 228,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 255,
							"linearizedBaseContracts": [
								255
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 233,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 232,
												"id": 235,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 255,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 242,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 241,
												"id": 244,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 255,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 250,
												"id": 252,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 255,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 256,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Panic.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Panic.sol",
					"exportedSymbols": {
						"Panic": [
							307
						]
					},
					"id": 308,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 257,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "99:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Panic",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 258,
								"nodeType": "StructuredDocumentation",
								"src": "125:489:3",
								"text": " @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 307,
							"linearizedBaseContracts": [
								307
							],
							"name": "Panic",
							"nameLocation": "665:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "677:36:3",
										"text": "@dev generic / unspecified error"
									},
									"id": 262,
									"mutability": "constant",
									"name": "GENERIC",
									"nameLocation": "744:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 307,
									"src": "718:40:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 260,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "718:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 261,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "754:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "764:37:3",
										"text": "@dev used by the assert() builtin"
									},
									"id": 266,
									"mutability": "constant",
									"name": "ASSERT",
									"nameLocation": "832:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 307,
									"src": "806:39:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 264,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "806:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783031",
										"id": 265,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "841:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "0x01"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "851:41:3",
										"text": "@dev arithmetic underflow or overflow"
									},
									"id": 270,
									"mutability": "constant",
									"name": "UNDER_OVERFLOW",
									"nameLocation": "923:14:3",
									"nodeType": "VariableDeclaration",
									"scope": 307,
									"src": "897:47:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 268,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "897:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783131",
										"id": 269,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "940:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_17_by_1",
											"typeString": "int_const 17"
										},
										"value": "0x11"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "950:35:3",
										"text": "@dev division or modulo by zero"
									},
									"id": 274,
									"mutability": "constant",
									"name": "DIVISION_BY_ZERO",
									"nameLocation": "1016:16:3",
									"nodeType": "VariableDeclaration",
									"scope": 307,
									"src": "990:49:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 272,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "990:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783132",
										"id": 273,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1035:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "0x12"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "1045:30:3",
										"text": "@dev enum conversion error"
									},
									"id": 278,
									"mutability": "constant",
									"name": "ENUM_CONVERSION_ERROR",
									"nameLocation": "1106:21:3",
									"nodeType": "VariableDeclaration",
									"scope": 307,
									"src": "1080:54:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 276,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1080:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783231",
										"id": 277,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1130:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33_by_1",
											"typeString": "int_const 33"
										},
										"value": "0x21"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "1140:36:3",
										"text": "@dev invalid encoding in storage"
									},
									"id": 282,
									"mutability": "constant",
									"name": "STORAGE_ENCODING_ERROR",
									"nameLocation": "1207:22:3",
									"nodeType": "VariableDeclaration",
									"scope": 307,
									"src": "1181:55:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 280,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1181:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783232",
										"id": 281,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1232:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_34_by_1",
											"typeString": "int_const 34"
										},
										"value": "0x22"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "1242:24:3",
										"text": "@dev empty array pop"
									},
									"id": 286,
									"mutability": "constant",
									"name": "EMPTY_ARRAY_POP",
									"nameLocation": "1297:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 307,
									"src": "1271:48:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 284,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1271:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783331",
										"id": 285,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1315:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49_by_1",
											"typeString": "int_const 49"
										},
										"value": "0x31"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "1325:35:3",
										"text": "@dev array out of bounds access"
									},
									"id": 290,
									"mutability": "constant",
									"name": "ARRAY_OUT_OF_BOUNDS",
									"nameLocation": "1391:19:3",
									"nodeType": "VariableDeclaration",
									"scope": 307,
									"src": "1365:52:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 288,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1365:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783332",
										"id": 289,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1413:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "0x32"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "1423:65:3",
										"text": "@dev resource error (too large allocation or too large array)"
									},
									"id": 294,
									"mutability": "constant",
									"name": "RESOURCE_ERROR",
									"nameLocation": "1519:14:3",
									"nodeType": "VariableDeclaration",
									"scope": 307,
									"src": "1493:47:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 292,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1493:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783431",
										"id": 293,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1536:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65_by_1",
											"typeString": "int_const 65"
										},
										"value": "0x41"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "1546:42:3",
										"text": "@dev calling invalid internal function"
									},
									"id": 298,
									"mutability": "constant",
									"name": "INVALID_INTERNAL_FUNCTION",
									"nameLocation": "1619:25:3",
									"nodeType": "VariableDeclaration",
									"scope": 307,
									"src": "1593:58:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 296,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1593:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783531",
										"id": 297,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1647:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81_by_1",
											"typeString": "int_const 81"
										},
										"value": "0x51"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "1819:151:3",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1854:110:3",
													"nodeType": "YulBlock",
													"src": "1854:110:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1875:4:3",
																		"nodeType": "YulLiteral",
																		"src": "1875:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1881:10:3",
																		"nodeType": "YulLiteral",
																		"src": "1881:10:3",
																		"type": "",
																		"value": "0x4e487b71"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1868:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1868:6:3"
																},
																"nativeSrc": "1868:24:3",
																"nodeType": "YulFunctionCall",
																"src": "1868:24:3"
															},
															"nativeSrc": "1868:24:3",
															"nodeType": "YulExpressionStatement",
															"src": "1868:24:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1912:4:3",
																		"nodeType": "YulLiteral",
																		"src": "1912:4:3",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "code",
																		"nativeSrc": "1918:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "1918:4:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1905:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1905:6:3"
																},
																"nativeSrc": "1905:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1905:18:3"
															},
															"nativeSrc": "1905:18:3",
															"nodeType": "YulExpressionStatement",
															"src": "1905:18:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1943:4:3",
																		"nodeType": "YulLiteral",
																		"src": "1943:4:3",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1949:4:3",
																		"nodeType": "YulLiteral",
																		"src": "1949:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1936:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1936:6:3"
																},
																"nativeSrc": "1936:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1936:18:3"
															},
															"nativeSrc": "1936:18:3",
															"nodeType": "YulExpressionStatement",
															"src": "1936:18:3"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 301,
														"isOffset": false,
														"isSlot": false,
														"src": "1918:4:3",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 304,
												"nodeType": "InlineAssembly",
												"src": "1829:135:3"
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "1658:113:3",
										"text": "@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."
									},
									"id": 306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "panic",
									"nameLocation": "1785:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "code",
												"nameLocation": "1799:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "1791:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1791:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1790:14:3"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1819:0:3"
									},
									"scope": 307,
									"src": "1776:194:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 308,
							"src": "657:1315:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:1874:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							255
						],
						"Pausable": [
							424
						]
					},
					"id": 425,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 309,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 311,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 425,
							"sourceUnit": 256,
							"src": "128:45:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 310,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 255,
										"src": "136:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 313,
										"name": "Context",
										"nameLocations": [
											"645:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 255,
										"src": "645:7:4"
									},
									"id": 314,
									"nodeType": "InheritanceSpecifier",
									"src": "645:7:4"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 312,
								"nodeType": "StructuredDocumentation",
								"src": "175:439:4",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 424,
							"linearizedBaseContracts": [
								424,
								255
							],
							"name": "Pausable",
							"nameLocation": "633:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 316,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "672:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 424,
									"src": "659:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 315,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "659:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "686:73:4",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 321,
									"name": "Paused",
									"nameLocation": "770:6:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "785:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "777:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:17:4"
									},
									"src": "764:30:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 322,
										"nodeType": "StructuredDocumentation",
										"src": "800:70:4",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 326,
									"name": "Unpaused",
									"nameLocation": "881:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "898:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "890:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:17:4"
									},
									"src": "875:32:4"
								},
								{
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "913:76:4",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 329,
									"name": "EnforcedPause",
									"nameLocation": "1000:13:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:2:4"
									},
									"src": "994:22:4"
								},
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "1022:80:4",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 332,
									"name": "ExpectedPause",
									"nameLocation": "1113:13:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:2:4"
									},
									"src": "1107:22:4"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "1221:32:4",
										"statements": [
											{
												"expression": {
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 336,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "1231:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 337,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1241:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1231:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "1231:15:4"
											}
										]
									},
									"documentation": {
										"id": 333,
										"nodeType": "StructuredDocumentation",
										"src": "1135:67:4",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 341,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1218:2:4"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:0:4"
									},
									"scope": 424,
									"src": "1207:46:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "1464:47:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 344,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 378,
														"src": "1474:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1474:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "1474:19:4"
											},
											{
												"id": 347,
												"nodeType": "PlaceholderStatement",
												"src": "1503:1:4"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "1259:175:4",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 349,
									"name": "whenNotPaused",
									"nameLocation": "1448:13:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1461:2:4"
									},
									"src": "1439:72:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "1711:44:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 391,
														"src": "1721:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1721:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "1721:16:4"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "1747:1:4"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "1517:167:4",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 357,
									"name": "whenPaused",
									"nameLocation": "1698:10:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:2:4"
									},
									"src": "1689:66:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 365,
										"nodeType": "Block",
										"src": "1903:31:4",
										"statements": [
											{
												"expression": {
													"id": 363,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 316,
													"src": "1920:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 362,
												"id": 364,
												"nodeType": "Return",
												"src": "1913:14:4"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "1761:84:4",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1859:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1865:2:4"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "1897:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 360,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1897:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1896:6:4"
									},
									"scope": 424,
									"src": "1850:84:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 377,
										"nodeType": "Block",
										"src": "2053:77:4",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 370,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "2067:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2067:8:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 376,
												"nodeType": "IfStatement",
												"src": "2063:61:4",
												"trueBody": {
													"id": 375,
													"nodeType": "Block",
													"src": "2077:47:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 372,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "2098:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2098:15:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 374,
															"nodeType": "RevertStatement",
															"src": "2091:22:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "1940:57:4",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2011:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:4"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2053:0:4"
									},
									"scope": 424,
									"src": "2002:128:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "2250:78:4",
										"statements": [
											{
												"condition": {
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2264:9:4",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 382,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "2265:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2265:8:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 389,
												"nodeType": "IfStatement",
												"src": "2260:62:4",
												"trueBody": {
													"id": 388,
													"nodeType": "Block",
													"src": "2275:47:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 385,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 332,
																	"src": "2296:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2296:15:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 387,
															"nodeType": "RevertStatement",
															"src": "2289:22:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 379,
										"nodeType": "StructuredDocumentation",
										"src": "2136:61:4",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2211:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2225:2:4"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2250:0:4"
									},
									"scope": 424,
									"src": "2202:126:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "2512:66:4",
										"statements": [
											{
												"expression": {
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 397,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "2522:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2532:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2522:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "2522:14:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 402,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 237,
																"src": "2558:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2558:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 401,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "2551:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2551:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "EmitStatement",
												"src": "2546:25:4"
											}
										]
									},
									"documentation": {
										"id": 392,
										"nodeType": "StructuredDocumentation",
										"src": "2334:124:4",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 395,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 394,
												"name": "whenNotPaused",
												"nameLocations": [
													"2498:13:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 349,
												"src": "2498:13:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2498:13:4"
										}
									],
									"name": "_pause",
									"nameLocation": "2472:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2478:2:4"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:4"
									},
									"scope": 424,
									"src": "2463:115:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "2758:69:4",
										"statements": [
											{
												"expression": {
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 413,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "2768:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 414,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2778:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2768:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "2768:15:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 418,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 237,
																"src": "2807:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2807:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 417,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 326,
														"src": "2798:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2798:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 421,
												"nodeType": "EmitStatement",
												"src": "2793:27:4"
											}
										]
									},
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "2584:121:4",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 411,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 410,
												"name": "whenPaused",
												"nameLocations": [
													"2747:10:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2747:10:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2747:10:4"
										}
									],
									"name": "_unpause",
									"nameLocation": "2719:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2727:2:4"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2758:0:4"
									},
									"scope": 424,
									"src": "2710:117:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 425,
							"src": "615:2214:4",
							"usedErrors": [
								329,
								332
							],
							"usedEvents": [
								321,
								326
							]
						}
					],
					"src": "102:2728:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							493
						]
					},
					"id": 494,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 426,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 427,
								"nodeType": "StructuredDocumentation",
								"src": "135:894:5",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 493,
							"linearizedBaseContracts": [
								493
							],
							"name": "ReentrancyGuard",
							"nameLocation": "1048:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 430,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1843:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 493,
									"src": "1818:40:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 428,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1818:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 429,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1857:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 433,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1889:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 493,
									"src": "1864:36:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 431,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1864:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 432,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1899:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 435,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1923:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 493,
									"src": "1907:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 434,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1907:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "1937:52:5",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 438,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "2000:28:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:5"
									},
									"src": "1994:37:5"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "2051:38:5",
										"statements": [
											{
												"expression": {
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 441,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "2061:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 442,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "2071:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2061:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "2061:21:5"
											}
										]
									},
									"id": 446,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2048:2:5"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2051:0:5"
									},
									"scope": 493,
									"src": "2037:52:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "2490:79:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 449,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "2500:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2500:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "2500:21:5"
											},
											{
												"id": 452,
												"nodeType": "PlaceholderStatement",
												"src": "2531:1:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 453,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 481,
														"src": "2542:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2542:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "2542:20:5"
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "2095:366:5",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 457,
									"name": "nonReentrant",
									"nameLocation": "2475:12:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2487:2:5"
									},
									"src": "2466:103:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "2614:268:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 460,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "2702:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 461,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "2713:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2702:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 467,
												"nodeType": "IfStatement",
												"src": "2698:86:5",
												"trueBody": {
													"id": 466,
													"nodeType": "Block",
													"src": "2722:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 463,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 438,
																	"src": "2743:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2743:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 465,
															"nodeType": "RevertStatement",
															"src": "2736:37:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 468,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "2858:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 469,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "2868:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2858:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "2858:17:5"
											}
										]
									},
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2584:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2603:2:5"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2614:0:5"
									},
									"scope": 493,
									"src": "2575:307:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 480,
										"nodeType": "Block",
										"src": "2926:170:5",
										"statements": [
											{
												"expression": {
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 476,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "3068:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 477,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "3078:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3068:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "3068:21:5"
											}
										]
									},
									"id": 481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2897:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2915:2:5"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2926:0:5"
									},
									"scope": 493,
									"src": "2888:208:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "3339:42:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 487,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "3356:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 488,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "3367:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3356:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 486,
												"id": 490,
												"nodeType": "Return",
												"src": "3349:25:5"
											}
										]
									},
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "3102:168:5",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3284:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3307:2:5"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "3333:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 484,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3333:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:6:5"
									},
									"scope": 493,
									"src": "3275:106:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 494,
							"src": "1030:2353:5",
							"usedErrors": [
								438
							],
							"usedEvents": []
						}
					],
					"src": "109:3275:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2099
						],
						"Panic": [
							307
						],
						"SafeCast": [
							3864
						]
					},
					"id": 2100,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 495,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Panic.sol",
							"file": "../Panic.sol",
							"id": 497,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2100,
							"sourceUnit": 308,
							"src": "129:35:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 496,
										"name": "Panic",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 307,
										"src": "137:5:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
							"file": "./SafeCast.sol",
							"id": 499,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2100,
							"sourceUnit": 3865,
							"src": "165:40:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 498,
										"name": "SafeCast",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3864,
										"src": "173:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 500,
								"nodeType": "StructuredDocumentation",
								"src": "207:73:6",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2099,
							"linearizedBaseContracts": [
								2099
							],
							"name": "Math",
							"nameLocation": "289:4:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 505,
									"members": [
										{
											"id": 501,
											"name": "Floor",
											"nameLocation": "324:5:6",
											"nodeType": "EnumValue",
											"src": "324:5:6"
										},
										{
											"id": 502,
											"name": "Ceil",
											"nameLocation": "367:4:6",
											"nodeType": "EnumValue",
											"src": "367:4:6"
										},
										{
											"id": 503,
											"name": "Trunc",
											"nameLocation": "409:5:6",
											"nodeType": "EnumValue",
											"src": "409:5:6"
										},
										{
											"id": 504,
											"name": "Expand",
											"nameLocation": "439:6:6",
											"nodeType": "EnumValue",
											"src": "439:6:6"
										}
									],
									"name": "Rounding",
									"nameLocation": "305:8:6",
									"nodeType": "EnumDefinition",
									"src": "300:169:6"
								},
								{
									"body": {
										"id": 536,
										"nodeType": "Block",
										"src": "677:140:6",
										"statements": [
											{
												"id": 535,
												"nodeType": "UncheckedBlock",
												"src": "687:124:6",
												"statements": [
													{
														"assignments": [
															518
														],
														"declarations": [
															{
																"constant": false,
																"id": 518,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "719:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 535,
																"src": "711:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 517,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "711:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 522,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 519,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 508,
																"src": "723:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 520,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 510,
																"src": "727:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "723:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "711:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 523,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 518,
																"src": "746:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 524,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 508,
																"src": "750:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "746:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 530,
														"nodeType": "IfStatement",
														"src": "742:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "761:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "768:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 528,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "760:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 516,
															"id": 529,
															"nodeType": "Return",
															"src": "753:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "792:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 532,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 518,
																	"src": "798:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 533,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "791:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 516,
														"id": 534,
														"nodeType": "Return",
														"src": "784:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "475:106:6",
										"text": " @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."
									},
									"id": 537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "595:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "610:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "602:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "621:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "613:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "601:22:6"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "652:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "647:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 512,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "647:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "669:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "661:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "646:30:6"
									},
									"scope": 2099,
									"src": "586:231:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "1028:113:6",
										"statements": [
											{
												"id": 563,
												"nodeType": "UncheckedBlock",
												"src": "1038:97:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 549,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 542,
																"src": "1066:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 550,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 540,
																"src": "1070:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1066:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 556,
														"nodeType": "IfStatement",
														"src": "1062:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1081:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1088:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 554,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1080:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 548,
															"id": 555,
															"nodeType": "Return",
															"src": "1073:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1112:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 560,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 558,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 540,
																		"src": "1118:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 559,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 542,
																		"src": "1122:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1118:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 561,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1111:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 548,
														"id": 562,
														"nodeType": "Return",
														"src": "1104:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "823:109:6",
										"text": " @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."
									},
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "946:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "961:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "953:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "953:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "972:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "964:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "964:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "952:22:6"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1003:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "998:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 544,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "998:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1020:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "1012:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "997:30:6"
									},
									"scope": 2099,
									"src": "937:204:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 606,
										"nodeType": "Block",
										"src": "1355:417:6",
										"statements": [
											{
												"id": 605,
												"nodeType": "UncheckedBlock",
												"src": "1365:401:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 577,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 568,
																"src": "1623:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 578,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1628:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1623:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 584,
														"nodeType": "IfStatement",
														"src": "1619:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 580,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1639:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1645:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 582,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1638:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 576,
															"id": 583,
															"nodeType": "Return",
															"src": "1631:16:6"
														}
													},
													{
														"assignments": [
															586
														],
														"declarations": [
															{
																"constant": false,
																"id": 586,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1669:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 605,
																"src": "1661:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 585,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1661:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 590,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 587,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 568,
																"src": "1673:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 588,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 570,
																"src": "1677:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1673:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1661:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 591,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 586,
																	"src": "1696:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 592,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 568,
																	"src": "1700:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1696:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 594,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 570,
																"src": "1705:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1696:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 600,
														"nodeType": "IfStatement",
														"src": "1692:33:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1716:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 597,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1723:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 598,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1715:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 576,
															"id": 599,
															"nodeType": "Return",
															"src": "1708:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1747:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 602,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 586,
																	"src": "1753:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 603,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1746:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 576,
														"id": 604,
														"nodeType": "Return",
														"src": "1739:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "1147:112:6",
										"text": " @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."
									},
									"id": 607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1273:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1288:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "1280:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1280:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1299:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "1291:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1291:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1279:22:6"
									},
									"returnParameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1330:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "1325:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 572,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1325:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1347:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "1339:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:30:6"
									},
									"scope": 2099,
									"src": "1264:508:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 634,
										"nodeType": "Block",
										"src": "1987:114:6",
										"statements": [
											{
												"id": 633,
												"nodeType": "UncheckedBlock",
												"src": "1997:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 619,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 612,
																"src": "2025:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2030:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2025:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 626,
														"nodeType": "IfStatement",
														"src": "2021:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2041:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2048:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 624,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2040:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 618,
															"id": 625,
															"nodeType": "Return",
															"src": "2033:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2072:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 628,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 610,
																		"src": "2078:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 629,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 612,
																		"src": "2082:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2078:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 631,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2071:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 618,
														"id": 632,
														"nodeType": "Return",
														"src": "2064:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "1778:113:6",
										"text": " @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."
									},
									"id": 635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1905:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1920:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "1912:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1912:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1931:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "1923:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1911:22:6"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1962:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "1957:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 614,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1957:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1979:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "1971:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1971:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1956:30:6"
									},
									"scope": 2099,
									"src": "1896:205:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 662,
										"nodeType": "Block",
										"src": "2326:114:6",
										"statements": [
											{
												"id": 661,
												"nodeType": "UncheckedBlock",
												"src": "2336:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 647,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 640,
																"src": "2364:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2369:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2364:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 654,
														"nodeType": "IfStatement",
														"src": "2360:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 650,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2380:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2387:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 652,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2379:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 646,
															"id": 653,
															"nodeType": "Return",
															"src": "2372:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2411:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 656,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 638,
																		"src": "2417:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 657,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 640,
																		"src": "2421:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2417:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 659,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2410:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 646,
														"id": 660,
														"nodeType": "Return",
														"src": "2403:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 636,
										"nodeType": "StructuredDocumentation",
										"src": "2107:123:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."
									},
									"id": 663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2244:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2259:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2251:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2251:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2270:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2262:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2262:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2250:22:6"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2301:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2296:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 642,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2296:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2318:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2310:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2310:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2295:30:6"
									},
									"scope": 2099,
									"src": "2235:205:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "2912:207:6",
										"statements": [
											{
												"id": 688,
												"nodeType": "UncheckedBlock",
												"src": "2922:191:6",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 675,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 670,
																"src": "3060:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 678,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 676,
																						"name": "a",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 668,
																						"src": "3066:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "^",
																					"rightExpression": {
																						"id": 677,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 670,
																						"src": "3070:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3066:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 679,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3065:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 682,
																					"name": "condition",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 666,
																					"src": "3091:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				],
																				"expression": {
																					"id": 680,
																					"name": "SafeCast",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3864,
																					"src": "3075:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SafeCast_$3864_$",
																						"typeString": "type(library SafeCast)"
																					}
																				},
																				"id": 681,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3084:6:6",
																				"memberName": "toUint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3863,
																				"src": "3075:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																					"typeString": "function (bool) pure returns (uint256)"
																				}
																			},
																			"id": 683,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3075:26:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3065:36:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 685,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3064:38:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3060:42:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 674,
														"id": 687,
														"nodeType": "Return",
														"src": "3053:49:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "2446:374:6",
										"text": " @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ternary",
									"nameLocation": "2834:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "condition",
												"nameLocation": "2847:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "2842:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 665,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2842:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2866:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "2858:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2877:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "2869:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2869:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2841:38:6"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "2903:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2903:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2902:9:6"
									},
									"scope": 2099,
									"src": "2825:294:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "3256:44:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 701,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "3281:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 702,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 695,
																"src": "3285:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3281:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 704,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "3288:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 705,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "3291:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 700,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "3273:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3273:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 699,
												"id": 707,
												"nodeType": "Return",
												"src": "3266:27:6"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "3125:59:6",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "3198:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3210:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "3202:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3202:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3221:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "3213:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3213:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3201:22:6"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "3247:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3247:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3246:9:6"
									},
									"scope": 2099,
									"src": "3189:111:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 727,
										"nodeType": "Block",
										"src": "3438:44:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 720,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 712,
																"src": "3463:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 721,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 714,
																"src": "3467:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3463:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 723,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "3470:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 724,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "3473:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 719,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "3455:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3455:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 718,
												"id": 726,
												"nodeType": "Return",
												"src": "3448:27:6"
											}
										]
									},
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "3306:60:6",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "3380:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3392:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "3384:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3384:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3403:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "3395:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3395:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:22:6"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "3429:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3429:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3428:9:6"
									},
									"scope": 2099,
									"src": "3371:111:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 750,
										"nodeType": "Block",
										"src": "3666:82:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 738,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 731,
																	"src": "3721:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 739,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "3725:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3721:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 741,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3720:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 742,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 731,
																		"src": "3731:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 743,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 733,
																		"src": "3735:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3731:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 745,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3730:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3740:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "3730:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3720:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 737,
												"id": 749,
												"nodeType": "Return",
												"src": "3713:28:6"
											}
										]
									},
									"documentation": {
										"id": 729,
										"nodeType": "StructuredDocumentation",
										"src": "3488:102:6",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "3604:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3620:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "3612:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3631:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "3623:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3623:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:22:6"
									},
									"returnParameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "3657:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3657:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3656:9:6"
									},
									"scope": 2099,
									"src": "3595:153:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "4040:633:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 761,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "4054:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 762,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4059:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4054:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 772,
												"nodeType": "IfStatement",
												"src": "4050:150:6",
												"trueBody": {
													"id": 771,
													"nodeType": "Block",
													"src": "4062:138:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 767,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 307,
																			"src": "4166:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$307_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "4172:16:6",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 274,
																		"src": "4166:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 764,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 307,
																		"src": "4154:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$307_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4160:5:6",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 306,
																	"src": "4154:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4154:35:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 770,
															"nodeType": "ExpressionStatement",
															"src": "4154:35:6"
														}
													]
												}
											},
											{
												"id": 790,
												"nodeType": "UncheckedBlock",
												"src": "4583:84:6",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 775,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 754,
																			"src": "4630:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4634:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "4630:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 773,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3864,
																		"src": "4614:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$3864_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4623:6:6",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3863,
																	"src": "4614:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4614:22:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 784,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 781,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 779,
																							"name": "a",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 754,
																							"src": "4641:1:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 780,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4645:1:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "4641:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 782,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4640:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 783,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 756,
																				"src": "4650:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4640:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4654:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "4640:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 787,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4639:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4614:42:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 760,
														"id": 789,
														"nodeType": "Return",
														"src": "4607:49:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "3754:210:6",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3978:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3994:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "3986:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3986:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4005:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "3997:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3997:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3985:22:6"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "4031:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4031:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4030:9:6"
									},
									"scope": 2099,
									"src": "3969:704:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 928,
										"nodeType": "Block",
										"src": "5094:4128:6",
										"statements": [
											{
												"id": 927,
												"nodeType": "UncheckedBlock",
												"src": "5104:4112:6",
												"statements": [
													{
														"assignments": [
															805
														],
														"declarations": [
															{
																"constant": false,
																"id": 805,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "5441:5:6",
																"nodeType": "VariableDeclaration",
																"scope": 927,
																"src": "5433:13:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 804,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5433:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 809,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 806,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "5449:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 807,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 797,
																"src": "5453:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5449:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5433:21:6"
													},
													{
														"assignments": [
															811
														],
														"declarations": [
															{
																"constant": false,
																"id": 811,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "5521:5:6",
																"nodeType": "VariableDeclaration",
																"scope": 927,
																"src": "5513:13:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 810,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5513:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 812,
														"nodeType": "VariableDeclarationStatement",
														"src": "5513:13:6"
													},
													{
														"AST": {
															"nativeSrc": "5593:122:6",
															"nodeType": "YulBlock",
															"src": "5593:122:6",
															"statements": [
																{
																	"nativeSrc": "5611:30:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5611:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5628:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "5628:1:6"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5631:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "5631:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5638:1:6",
																						"nodeType": "YulLiteral",
																						"src": "5638:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5634:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5634:3:6"
																				},
																				"nativeSrc": "5634:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5634:6:6"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5621:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5621:6:6"
																		},
																		"nativeSrc": "5621:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5621:20:6"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "5615:2:6",
																			"nodeType": "YulTypedName",
																			"src": "5615:2:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5658:43:6",
																	"nodeType": "YulAssignment",
																	"src": "5658:43:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "5675:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "5675:2:6"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5679:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5679:5:6"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5671:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5671:3:6"
																				},
																				"nativeSrc": "5671:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5671:14:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "5690:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "5690:2:6"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5694:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5694:5:6"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "5687:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "5687:2:6"
																				},
																				"nativeSrc": "5687:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5687:13:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5667:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5667:3:6"
																		},
																		"nativeSrc": "5667:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5667:34:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5658:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "5658:5:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 805,
																"isOffset": false,
																"isSlot": false,
																"src": "5679:5:6",
																"valueSize": 1
															},
															{
																"declaration": 805,
																"isOffset": false,
																"isSlot": false,
																"src": "5694:5:6",
																"valueSize": 1
															},
															{
																"declaration": 811,
																"isOffset": false,
																"isSlot": false,
																"src": "5658:5:6",
																"valueSize": 1
															},
															{
																"declaration": 795,
																"isOffset": false,
																"isSlot": false,
																"src": "5628:1:6",
																"valueSize": 1
															},
															{
																"declaration": 797,
																"isOffset": false,
																"isSlot": false,
																"src": "5631:1:6",
																"valueSize": 1
															}
														],
														"id": 813,
														"nodeType": "InlineAssembly",
														"src": "5584:131:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 814,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 811,
																"src": "5796:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 815,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5805:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5796:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 822,
														"nodeType": "IfStatement",
														"src": "5792:368:6",
														"trueBody": {
															"id": 821,
															"nodeType": "Block",
															"src": "5808:352:6",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 819,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 817,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 805,
																			"src": "6126:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 818,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 799,
																			"src": "6134:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6126:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 803,
																	"id": 820,
																	"nodeType": "Return",
																	"src": "6119:26:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 823,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 799,
																"src": "6270:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 824,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 811,
																"src": "6285:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6270:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 841,
														"nodeType": "IfStatement",
														"src": "6266:143:6",
														"trueBody": {
															"id": 840,
															"nodeType": "Block",
															"src": "6292:117:6",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 832,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 830,
																							"name": "denominator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 799,
																							"src": "6330:11:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 831,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6345:1:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "6330:16:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					{
																						"expression": {
																							"id": 833,
																							"name": "Panic",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 307,
																							"src": "6348:5:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_Panic_$307_$",
																								"typeString": "type(library Panic)"
																							}
																						},
																						"id": 834,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "6354:16:6",
																						"memberName": "DIVISION_BY_ZERO",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 274,
																						"src": "6348:22:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"expression": {
																							"id": 835,
																							"name": "Panic",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 307,
																							"src": "6372:5:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_Panic_$307_$",
																								"typeString": "type(library Panic)"
																							}
																						},
																						"id": 836,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "6378:14:6",
																						"memberName": "UNDER_OVERFLOW",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 270,
																						"src": "6372:20:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 829,
																					"name": "ternary",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 690,
																					"src": "6322:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 837,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6322:71:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 826,
																				"name": "Panic",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6310:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Panic_$307_$",
																					"typeString": "type(library Panic)"
																				}
																			},
																			"id": 828,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6316:5:6",
																			"memberName": "panic",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 306,
																			"src": "6310:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6310:84:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 839,
																	"nodeType": "ExpressionStatement",
																	"src": "6310:84:6"
																}
															]
														}
													},
													{
														"assignments": [
															843
														],
														"declarations": [
															{
																"constant": false,
																"id": 843,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "6672:9:6",
																"nodeType": "VariableDeclaration",
																"scope": 927,
																"src": "6664:17:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 842,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6664:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 844,
														"nodeType": "VariableDeclarationStatement",
														"src": "6664:17:6"
													},
													{
														"AST": {
															"nativeSrc": "6704:291:6",
															"nodeType": "YulBlock",
															"src": "6704:291:6",
															"statements": [
																{
																	"nativeSrc": "6773:38:6",
																	"nodeType": "YulAssignment",
																	"src": "6773:38:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "6793:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "6793:1:6"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "6796:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "6796:1:6"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "6799:11:6",
																				"nodeType": "YulIdentifier",
																				"src": "6799:11:6"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "6786:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6786:6:6"
																		},
																		"nativeSrc": "6786:25:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6786:25:6"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "6773:9:6",
																			"nodeType": "YulIdentifier",
																			"src": "6773:9:6"
																		}
																	]
																},
																{
																	"nativeSrc": "6893:41:6",
																	"nodeType": "YulAssignment",
																	"src": "6893:41:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "6906:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6906:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "6916:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6916:9:6"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "6927:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "6927:5:6"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "6913:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "6913:2:6"
																				},
																				"nativeSrc": "6913:20:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6913:20:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6902:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6902:3:6"
																		},
																		"nativeSrc": "6902:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6902:32:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "6893:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "6893:5:6"
																		}
																	]
																},
																{
																	"nativeSrc": "6951:30:6",
																	"nodeType": "YulAssignment",
																	"src": "6951:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6964:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6964:5:6"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "6971:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6971:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6960:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6960:3:6"
																		},
																		"nativeSrc": "6960:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6960:21:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6951:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "6951:5:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 799,
																"isOffset": false,
																"isSlot": false,
																"src": "6799:11:6",
																"valueSize": 1
															},
															{
																"declaration": 805,
																"isOffset": false,
																"isSlot": false,
																"src": "6927:5:6",
																"valueSize": 1
															},
															{
																"declaration": 805,
																"isOffset": false,
																"isSlot": false,
																"src": "6951:5:6",
																"valueSize": 1
															},
															{
																"declaration": 805,
																"isOffset": false,
																"isSlot": false,
																"src": "6964:5:6",
																"valueSize": 1
															},
															{
																"declaration": 811,
																"isOffset": false,
																"isSlot": false,
																"src": "6893:5:6",
																"valueSize": 1
															},
															{
																"declaration": 811,
																"isOffset": false,
																"isSlot": false,
																"src": "6906:5:6",
																"valueSize": 1
															},
															{
																"declaration": 843,
																"isOffset": false,
																"isSlot": false,
																"src": "6773:9:6",
																"valueSize": 1
															},
															{
																"declaration": 843,
																"isOffset": false,
																"isSlot": false,
																"src": "6916:9:6",
																"valueSize": 1
															},
															{
																"declaration": 843,
																"isOffset": false,
																"isSlot": false,
																"src": "6971:9:6",
																"valueSize": 1
															},
															{
																"declaration": 795,
																"isOffset": false,
																"isSlot": false,
																"src": "6793:1:6",
																"valueSize": 1
															},
															{
																"declaration": 797,
																"isOffset": false,
																"isSlot": false,
																"src": "6796:1:6",
																"valueSize": 1
															}
														],
														"id": 845,
														"nodeType": "InlineAssembly",
														"src": "6695:300:6"
													},
													{
														"assignments": [
															847
														],
														"declarations": [
															{
																"constant": false,
																"id": 847,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "7207:4:6",
																"nodeType": "VariableDeclaration",
																"scope": 927,
																"src": "7199:12:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 846,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7199:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 854,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 848,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 799,
																"src": "7214:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 849,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7229:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 850,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 799,
																			"src": "7233:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7229:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 852,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7228:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7214:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7199:46:6"
													},
													{
														"AST": {
															"nativeSrc": "7268:366:6",
															"nodeType": "YulBlock",
															"src": "7268:366:6",
															"statements": [
																{
																	"nativeSrc": "7333:37:6",
																	"nodeType": "YulAssignment",
																	"src": "7333:37:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "7352:11:6",
																				"nodeType": "YulIdentifier",
																				"src": "7352:11:6"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "7365:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7365:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "7348:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7348:3:6"
																		},
																		"nativeSrc": "7348:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7348:22:6"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "7333:11:6",
																			"nodeType": "YulIdentifier",
																			"src": "7333:11:6"
																		}
																	]
																},
																{
																	"nativeSrc": "7437:25:6",
																	"nodeType": "YulAssignment",
																	"src": "7437:25:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "7450:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "7450:5:6"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "7457:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7457:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "7446:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7446:3:6"
																		},
																		"nativeSrc": "7446:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7446:16:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "7437:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "7437:5:6"
																		}
																	]
																},
																{
																	"nativeSrc": "7581:39:6",
																	"nodeType": "YulAssignment",
																	"src": "7581:39:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7601:1:6",
																								"nodeType": "YulLiteral",
																								"src": "7601:1:6",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "7604:4:6",
																								"nodeType": "YulIdentifier",
																								"src": "7604:4:6"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "7597:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "7597:3:6"
																						},
																						"nativeSrc": "7597:12:6",
																						"nodeType": "YulFunctionCall",
																						"src": "7597:12:6"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "7611:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "7611:4:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "7593:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7593:3:6"
																				},
																				"nativeSrc": "7593:23:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7593:23:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7618:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7618:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7589:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7589:3:6"
																		},
																		"nativeSrc": "7589:31:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7589:31:6"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "7581:4:6",
																			"nodeType": "YulIdentifier",
																			"src": "7581:4:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 799,
																"isOffset": false,
																"isSlot": false,
																"src": "7333:11:6",
																"valueSize": 1
															},
															{
																"declaration": 799,
																"isOffset": false,
																"isSlot": false,
																"src": "7352:11:6",
																"valueSize": 1
															},
															{
																"declaration": 805,
																"isOffset": false,
																"isSlot": false,
																"src": "7437:5:6",
																"valueSize": 1
															},
															{
																"declaration": 805,
																"isOffset": false,
																"isSlot": false,
																"src": "7450:5:6",
																"valueSize": 1
															},
															{
																"declaration": 847,
																"isOffset": false,
																"isSlot": false,
																"src": "7365:4:6",
																"valueSize": 1
															},
															{
																"declaration": 847,
																"isOffset": false,
																"isSlot": false,
																"src": "7457:4:6",
																"valueSize": 1
															},
															{
																"declaration": 847,
																"isOffset": false,
																"isSlot": false,
																"src": "7581:4:6",
																"valueSize": 1
															},
															{
																"declaration": 847,
																"isOffset": false,
																"isSlot": false,
																"src": "7604:4:6",
																"valueSize": 1
															},
															{
																"declaration": 847,
																"isOffset": false,
																"isSlot": false,
																"src": "7611:4:6",
																"valueSize": 1
															}
														],
														"id": 855,
														"nodeType": "InlineAssembly",
														"src": "7259:375:6"
													},
													{
														"expression": {
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 856,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "7700:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 859,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 857,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 811,
																	"src": "7709:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 858,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 847,
																	"src": "7717:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7709:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7700:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 861,
														"nodeType": "ExpressionStatement",
														"src": "7700:21:6"
													},
													{
														"assignments": [
															863
														],
														"declarations": [
															{
																"constant": false,
																"id": 863,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "8064:7:6",
																"nodeType": "VariableDeclaration",
																"scope": 927,
																"src": "8056:15:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 862,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8056:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 870,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 864,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8075:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 865,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 799,
																			"src": "8079:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8075:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 867,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8074:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 868,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8094:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "8074:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8056:39:6"
													},
													{
														"expression": {
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 871,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 863,
																"src": "8312:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8323:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 873,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "8327:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 874,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 863,
																		"src": "8341:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8327:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8323:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8312:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 878,
														"nodeType": "ExpressionStatement",
														"src": "8312:36:6"
													},
													{
														"expression": {
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 879,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 863,
																"src": "8382:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8393:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 881,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "8397:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 882,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 863,
																		"src": "8411:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8397:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8393:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8382:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 886,
														"nodeType": "ExpressionStatement",
														"src": "8382:36:6"
													},
													{
														"expression": {
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 887,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 863,
																"src": "8454:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8465:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 889,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "8469:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 890,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 863,
																		"src": "8483:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8469:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8465:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8454:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 894,
														"nodeType": "ExpressionStatement",
														"src": "8454:36:6"
													},
													{
														"expression": {
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 895,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 863,
																"src": "8525:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 900,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8536:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 897,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "8540:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 898,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 863,
																		"src": "8554:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8540:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8536:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8525:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 902,
														"nodeType": "ExpressionStatement",
														"src": "8525:36:6"
													},
													{
														"expression": {
															"id": 909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 903,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 863,
																"src": "8598:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 908,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8609:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 905,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "8613:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 906,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 863,
																		"src": "8627:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8613:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8609:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8598:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 910,
														"nodeType": "ExpressionStatement",
														"src": "8598:36:6"
													},
													{
														"expression": {
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 911,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 863,
																"src": "8672:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8683:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 913,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "8687:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 914,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 863,
																		"src": "8701:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8687:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8683:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8672:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 918,
														"nodeType": "ExpressionStatement",
														"src": "8672:36:6"
													},
													{
														"expression": {
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 919,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "9154:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 920,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "9163:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 921,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 863,
																	"src": "9171:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9163:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9154:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 924,
														"nodeType": "ExpressionStatement",
														"src": "9154:24:6"
													},
													{
														"expression": {
															"id": 925,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "9199:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 803,
														"id": 926,
														"nodeType": "Return",
														"src": "9192:13:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "4679:312:6",
										"text": " @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5005:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5020:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "5012:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5012:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5031:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "5023:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5023:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5042:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "5034:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5034:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5011:43:6"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "5086:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "5078:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5078:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5077:16:6"
									},
									"scope": 2099,
									"src": "4996:4226:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "9461:128:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 945,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 932,
																"src": "9485:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 946,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 934,
																"src": "9488:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 947,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 936,
																"src": "9491:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 944,
															"name": "mulDiv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																929,
																966
															],
															"referencedDeclaration": 929,
															"src": "9478:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 948,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9478:25:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 952,
																			"name": "rounding",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 939,
																			"src": "9539:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Rounding_$505",
																				"typeString": "enum Math.Rounding"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_enum$_Rounding_$505",
																				"typeString": "enum Math.Rounding"
																			}
																		],
																		"id": 951,
																		"name": "unsignedRoundsUp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2098,
																		"src": "9522:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$505_$returns$_t_bool_$",
																			"typeString": "function (enum Math.Rounding) pure returns (bool)"
																		}
																	},
																	"id": 953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9522:26:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 955,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 932,
																				"src": "9559:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 956,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 934,
																				"src": "9562:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 957,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 936,
																				"src": "9565:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 954,
																			"name": "mulmod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967280,
																			"src": "9552:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9552:25:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 959,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9580:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9552:29:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "9522:59:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"expression": {
																"id": 949,
																"name": "SafeCast",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3864,
																"src": "9506:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeCast_$3864_$",
																	"typeString": "type(library SafeCast)"
																}
															},
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9515:6:6",
															"memberName": "toUint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3863,
															"src": "9506:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																"typeString": "function (bool) pure returns (uint256)"
															}
														},
														"id": 962,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9506:76:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9478:104:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 943,
												"id": 964,
												"nodeType": "Return",
												"src": "9471:111:6"
											}
										]
									},
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "9228:118:6",
										"text": " @dev Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "9360:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "9375:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "9367:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9367:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "9386:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "9378:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9378:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "9397:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "9389:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9389:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9419:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "9410:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$505",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 938,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 937,
														"name": "Rounding",
														"nameLocations": [
															"9410:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 505,
														"src": "9410:8:6"
													},
													"referencedDeclaration": 505,
													"src": "9410:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$505",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9366:62:6"
									},
									"returnParameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "9452:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9452:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9451:9:6"
									},
									"scope": 2099,
									"src": "9351:238:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1062,
										"nodeType": "Block",
										"src": "10223:1849:6",
										"statements": [
											{
												"id": 1061,
												"nodeType": "UncheckedBlock",
												"src": "10233:1833:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 976,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 971,
																"src": "10261:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10266:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10261:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 981,
														"nodeType": "IfStatement",
														"src": "10257:20:6",
														"trueBody": {
															"expression": {
																"hexValue": "30",
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10276:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 975,
															"id": 980,
															"nodeType": "Return",
															"src": "10269:8:6"
														}
													},
													{
														"assignments": [
															983
														],
														"declarations": [
															{
																"constant": false,
																"id": 983,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "10756:9:6",
																"nodeType": "VariableDeclaration",
																"scope": 1061,
																"src": "10748:17:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 982,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10748:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 987,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 984,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 969,
																"src": "10768:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 985,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 971,
																"src": "10772:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10768:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10748:25:6"
													},
													{
														"assignments": [
															989
														],
														"declarations": [
															{
																"constant": false,
																"id": 989,
																"mutability": "mutable",
																"name": "gcd",
																"nameLocation": "10795:3:6",
																"nodeType": "VariableDeclaration",
																"scope": 1061,
																"src": "10787:11:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 988,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10787:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 991,
														"initialValue": {
															"id": 990,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "10801:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10787:15:6"
													},
													{
														"assignments": [
															993
														],
														"declarations": [
															{
																"constant": false,
																"id": 993,
																"mutability": "mutable",
																"name": "x",
																"nameLocation": "10945:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 1061,
																"src": "10938:8:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 992,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10938:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 995,
														"initialValue": {
															"hexValue": "30",
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10949:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10938:12:6"
													},
													{
														"assignments": [
															997
														],
														"declarations": [
															{
																"constant": false,
																"id": 997,
																"mutability": "mutable",
																"name": "y",
																"nameLocation": "10971:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 1061,
																"src": "10964:8:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 996,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10964:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 999,
														"initialValue": {
															"hexValue": "31",
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10975:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10964:12:6"
													},
													{
														"body": {
															"id": 1036,
															"nodeType": "Block",
															"src": "11014:882:6",
															"statements": [
																{
																	"assignments": [
																		1004
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1004,
																			"mutability": "mutable",
																			"name": "quotient",
																			"nameLocation": "11040:8:6",
																			"nodeType": "VariableDeclaration",
																			"scope": 1036,
																			"src": "11032:16:6",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1003,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "11032:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1008,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1005,
																			"name": "gcd",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 989,
																			"src": "11051:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1006,
																			"name": "remainder",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 983,
																			"src": "11057:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11051:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "11032:34:6"
																},
																{
																	"expression": {
																		"id": 1019,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"components": [
																				{
																					"id": 1009,
																					"name": "gcd",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 989,
																					"src": "11086:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1010,
																					"name": "remainder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 983,
																					"src": "11091:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1011,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "TupleExpression",
																			"src": "11085:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"components": [
																				{
																					"id": 1012,
																					"name": "remainder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 983,
																					"src": "11191:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1017,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1013,
																						"name": "gcd",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 989,
																						"src": "11436:3:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1016,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1014,
																							"name": "remainder",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 983,
																							"src": "11442:9:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 1015,
																							"name": "quotient",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1004,
																							"src": "11454:8:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "11442:20:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11436:26:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1018,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "11104:376:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"src": "11085:395:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1020,
																	"nodeType": "ExpressionStatement",
																	"src": "11085:395:6"
																},
																{
																	"expression": {
																		"id": 1034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"components": [
																				{
																					"id": 1021,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 993,
																					"src": "11500:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				{
																					"id": 1022,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 997,
																					"src": "11503:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 1023,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "TupleExpression",
																			"src": "11499:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
																				"typeString": "tuple(int256,int256)"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"components": [
																				{
																					"id": 1024,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 997,
																					"src": "11585:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				{
																					"commonType": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					},
																					"id": 1032,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1025,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 993,
																						"src": "11839:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						},
																						"id": 1031,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1026,
																							"name": "y",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 997,
																							"src": "11843:1:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"arguments": [
																								{
																									"id": 1029,
																									"name": "quotient",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1004,
																									"src": "11854:8:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 1028,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "11847:6:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_int256_$",
																									"typeString": "type(int256)"
																								},
																								"typeName": {
																									"id": 1027,
																									"name": "int256",
																									"nodeType": "ElementaryTypeName",
																									"src": "11847:6:6",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 1030,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "11847:16:6",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"src": "11843:20:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"src": "11839:24:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 1033,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "11508:373:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
																				"typeString": "tuple(int256,int256)"
																			}
																		},
																		"src": "11499:382:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1035,
																	"nodeType": "ExpressionStatement",
																	"src": "11499:382:6"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1000,
																"name": "remainder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 983,
																"src": "10998:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11011:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10998:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1037,
														"nodeType": "WhileStatement",
														"src": "10991:905:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1038,
																"name": "gcd",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 989,
																"src": "11914:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "31",
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11921:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "11914:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1043,
														"nodeType": "IfStatement",
														"src": "11910:22:6",
														"trueBody": {
															"expression": {
																"hexValue": "30",
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11931:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 975,
															"id": 1042,
															"nodeType": "Return",
															"src": "11924:8:6"
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 1047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1045,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 993,
																		"src": "11983:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11987:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "11983:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1054,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1048,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 971,
																		"src": "11990:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1052,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "-",
																				"prefix": true,
																				"src": "12002:2:6",
																				"subExpression": {
																					"id": 1051,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 993,
																					"src": "12003:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"id": 1050,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11994:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1049,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "11994:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1053,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11994:11:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11990:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1057,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 993,
																			"src": "12015:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 1056,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12007:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1055,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "12007:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12007:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1044,
																"name": "ternary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "11975:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11975:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 975,
														"id": 1060,
														"nodeType": "Return",
														"src": "11968:50:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 967,
										"nodeType": "StructuredDocumentation",
										"src": "9595:553:6",
										"text": " @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."
									},
									"id": 1063,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invMod",
									"nameLocation": "10162:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10177:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "10169:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10169:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "10188:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "10180:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10180:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10168:22:6"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "10214:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10214:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10213:9:6"
									},
									"scope": 2099,
									"src": "10153:1919:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "12672:82:6",
										"statements": [
											{
												"id": 1082,
												"nodeType": "UncheckedBlock",
												"src": "12682:66:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1075,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1066,
																	"src": "12725:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1078,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1076,
																		"name": "p",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1068,
																		"src": "12728:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 1077,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12732:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "12728:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1079,
																	"name": "p",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1068,
																	"src": "12735:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1073,
																	"name": "Math",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2099,
																	"src": "12713:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Math_$2099_$",
																		"typeString": "type(library Math)"
																	}
																},
																"id": 1074,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12718:6:6",
																"memberName": "modExp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1120,
																"src": "12713:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) view returns (uint256)"
																}
															},
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12713:24:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1072,
														"id": 1081,
														"nodeType": "Return",
														"src": "12706:31:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "12078:514:6",
										"text": " @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."
									},
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invModPrime",
									"nameLocation": "12606:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12626:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "12618:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12618:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "p",
												"nameLocation": "12637:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "12629:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12629:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12617:22:6"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "12663:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12663:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12662:9:6"
									},
									"scope": 2099,
									"src": "12597:157:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1119,
										"nodeType": "Block",
										"src": "13524:174:6",
										"statements": [
											{
												"assignments": [
													1097,
													1099
												],
												"declarations": [
													{
														"constant": false,
														"id": 1097,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "13540:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1119,
														"src": "13535:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1096,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13535:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1099,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13557:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1119,
														"src": "13549:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1098,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13549:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1105,
												"initialValue": {
													"arguments": [
														{
															"id": 1101,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "13577:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1102,
															"name": "e",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "13580:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1103,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "13583:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1100,
														"name": "tryModExp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1144,
															1226
														],
														"referencedDeclaration": 1144,
														"src": "13567:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) view returns (bool,uint256)"
														}
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13567:18:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13534:51:6"
											},
											{
												"condition": {
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "13599:8:6",
													"subExpression": {
														"id": 1106,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1097,
														"src": "13600:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1116,
												"nodeType": "IfStatement",
												"src": "13595:74:6",
												"trueBody": {
													"id": 1115,
													"nodeType": "Block",
													"src": "13609:60:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1111,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 307,
																			"src": "13635:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$307_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 1112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "13641:16:6",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 274,
																		"src": "13635:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1108,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 307,
																		"src": "13623:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$307_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 1110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13629:5:6",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 306,
																	"src": "13623:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13623:35:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1114,
															"nodeType": "ExpressionStatement",
															"src": "13623:35:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1117,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1099,
													"src": "13685:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1095,
												"id": 1118,
												"nodeType": "Return",
												"src": "13678:13:6"
											}
										]
									},
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "12760:678:6",
										"text": " @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."
									},
									"id": 1120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "modExp",
									"nameLocation": "13452:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "13467:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "13459:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13459:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "13478:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "13470:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13470:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "13489:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "13481:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13481:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13458:33:6"
									},
									"returnParameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "13515:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13515:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13514:9:6"
									},
									"scope": 2099,
									"src": "13443:255:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1143,
										"nodeType": "Block",
										"src": "14552:1493:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1134,
														"name": "m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1127,
														"src": "14566:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1135,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14571:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14566:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1141,
												"nodeType": "IfStatement",
												"src": "14562:29:6",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 1137,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14582:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 1138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14589:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 1139,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "14581:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 1133,
													"id": 1140,
													"nodeType": "Return",
													"src": "14574:17:6"
												}
											},
											{
												"AST": {
													"nativeSrc": "14626:1413:6",
													"nodeType": "YulBlock",
													"src": "14626:1413:6",
													"statements": [
														{
															"nativeSrc": "14640:22:6",
															"nodeType": "YulVariableDeclaration",
															"src": "14640:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14657:4:6",
																		"nodeType": "YulLiteral",
																		"src": "14657:4:6",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14651:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "14651:5:6"
																},
																"nativeSrc": "14651:11:6",
																"nodeType": "YulFunctionCall",
																"src": "14651:11:6"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "14644:3:6",
																	"nodeType": "YulTypedName",
																	"src": "14644:3:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "15570:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "15570:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15575:4:6",
																		"nodeType": "YulLiteral",
																		"src": "15575:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15563:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "15563:6:6"
																},
																"nativeSrc": "15563:17:6",
																"nodeType": "YulFunctionCall",
																"src": "15563:17:6"
															},
															"nativeSrc": "15563:17:6",
															"nodeType": "YulExpressionStatement",
															"src": "15563:17:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15604:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "15604:3:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15609:4:6",
																				"nodeType": "YulLiteral",
																				"src": "15609:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15600:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "15600:3:6"
																		},
																		"nativeSrc": "15600:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15600:14:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15616:4:6",
																		"nodeType": "YulLiteral",
																		"src": "15616:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15593:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "15593:6:6"
																},
																"nativeSrc": "15593:28:6",
																"nodeType": "YulFunctionCall",
																"src": "15593:28:6"
															},
															"nativeSrc": "15593:28:6",
															"nodeType": "YulExpressionStatement",
															"src": "15593:28:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15645:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "15645:3:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15650:4:6",
																				"nodeType": "YulLiteral",
																				"src": "15650:4:6",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15641:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "15641:3:6"
																		},
																		"nativeSrc": "15641:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15641:14:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15657:4:6",
																		"nodeType": "YulLiteral",
																		"src": "15657:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15634:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "15634:6:6"
																},
																"nativeSrc": "15634:28:6",
																"nodeType": "YulFunctionCall",
																"src": "15634:28:6"
															},
															"nativeSrc": "15634:28:6",
															"nodeType": "YulExpressionStatement",
															"src": "15634:28:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15686:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "15686:3:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15691:4:6",
																				"nodeType": "YulLiteral",
																				"src": "15691:4:6",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15682:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "15682:3:6"
																		},
																		"nativeSrc": "15682:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15682:14:6"
																	},
																	{
																		"name": "b",
																		"nativeSrc": "15698:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "15698:1:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15675:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "15675:6:6"
																},
																"nativeSrc": "15675:25:6",
																"nodeType": "YulFunctionCall",
																"src": "15675:25:6"
															},
															"nativeSrc": "15675:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "15675:25:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15724:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "15724:3:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15729:4:6",
																				"nodeType": "YulLiteral",
																				"src": "15729:4:6",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15720:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "15720:3:6"
																		},
																		"nativeSrc": "15720:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15720:14:6"
																	},
																	{
																		"name": "e",
																		"nativeSrc": "15736:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "15736:1:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15713:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "15713:6:6"
																},
																"nativeSrc": "15713:25:6",
																"nodeType": "YulFunctionCall",
																"src": "15713:25:6"
															},
															"nativeSrc": "15713:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "15713:25:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15762:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "15762:3:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15767:4:6",
																				"nodeType": "YulLiteral",
																				"src": "15767:4:6",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15758:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "15758:3:6"
																		},
																		"nativeSrc": "15758:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15758:14:6"
																	},
																	{
																		"name": "m",
																		"nativeSrc": "15774:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "15774:1:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15751:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "15751:6:6"
																},
																"nativeSrc": "15751:25:6",
																"nodeType": "YulFunctionCall",
																"src": "15751:25:6"
															},
															"nativeSrc": "15751:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "15751:25:6"
														},
														{
															"nativeSrc": "15938:57:6",
															"nodeType": "YulAssignment",
															"src": "15938:57:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "15960:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "15960:3:6"
																		},
																		"nativeSrc": "15960:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15960:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15967:4:6",
																		"nodeType": "YulLiteral",
																		"src": "15967:4:6",
																		"type": "",
																		"value": "0x05"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "15973:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "15973:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15978:4:6",
																		"nodeType": "YulLiteral",
																		"src": "15978:4:6",
																		"type": "",
																		"value": "0xc0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15984:4:6",
																		"nodeType": "YulLiteral",
																		"src": "15984:4:6",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15990:4:6",
																		"nodeType": "YulLiteral",
																		"src": "15990:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nativeSrc": "15949:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "15949:10:6"
																},
																"nativeSrc": "15949:46:6",
																"nodeType": "YulFunctionCall",
																"src": "15949:46:6"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "15938:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "15938:7:6"
																}
															]
														},
														{
															"nativeSrc": "16008:21:6",
															"nodeType": "YulAssignment",
															"src": "16008:21:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16024:4:6",
																		"nodeType": "YulLiteral",
																		"src": "16024:4:6",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16018:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "16018:5:6"
																},
																"nativeSrc": "16018:11:6",
																"nodeType": "YulFunctionCall",
																"src": "16018:11:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16008:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "16008:6:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1123,
														"isOffset": false,
														"isSlot": false,
														"src": "15698:1:6",
														"valueSize": 1
													},
													{
														"declaration": 1125,
														"isOffset": false,
														"isSlot": false,
														"src": "15736:1:6",
														"valueSize": 1
													},
													{
														"declaration": 1127,
														"isOffset": false,
														"isSlot": false,
														"src": "15774:1:6",
														"valueSize": 1
													},
													{
														"declaration": 1132,
														"isOffset": false,
														"isSlot": false,
														"src": "16008:6:6",
														"valueSize": 1
													},
													{
														"declaration": 1130,
														"isOffset": false,
														"isSlot": false,
														"src": "15938:7:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1142,
												"nodeType": "InlineAssembly",
												"src": "14601:1438:6"
											}
										]
									},
									"documentation": {
										"id": 1121,
										"nodeType": "StructuredDocumentation",
										"src": "13704:738:6",
										"text": " @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."
									},
									"id": 1144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryModExp",
									"nameLocation": "14456:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "14474:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "14466:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14466:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "14485:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "14477:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14477:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "14496:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "14488:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14488:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14465:33:6"
									},
									"returnParameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "14527:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "14522:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1129,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14522:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "14544:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "14536:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14536:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14521:30:6"
									},
									"scope": 2099,
									"src": "14447:1598:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1179,
										"nodeType": "Block",
										"src": "16242:179:6",
										"statements": [
											{
												"assignments": [
													1157,
													1159
												],
												"declarations": [
													{
														"constant": false,
														"id": 1157,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "16258:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1179,
														"src": "16253:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1156,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "16253:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1159,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "16280:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1179,
														"src": "16267:19:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1158,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "16267:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1165,
												"initialValue": {
													"arguments": [
														{
															"id": 1161,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "16300:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1162,
															"name": "e",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "16303:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1163,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "16306:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1160,
														"name": "tryModExp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1144,
															1226
														],
														"referencedDeclaration": 1226,
														"src": "16290:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16290:18:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16252:56:6"
											},
											{
												"condition": {
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "16322:8:6",
													"subExpression": {
														"id": 1166,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "16323:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1176,
												"nodeType": "IfStatement",
												"src": "16318:74:6",
												"trueBody": {
													"id": 1175,
													"nodeType": "Block",
													"src": "16332:60:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1171,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 307,
																			"src": "16358:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$307_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 1172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "16364:16:6",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 274,
																		"src": "16358:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1168,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 307,
																		"src": "16346:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$307_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 1170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "16352:5:6",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 306,
																	"src": "16346:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16346:35:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1174,
															"nodeType": "ExpressionStatement",
															"src": "16346:35:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1177,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1159,
													"src": "16408:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1155,
												"id": 1178,
												"nodeType": "Return",
												"src": "16401:13:6"
											}
										]
									},
									"documentation": {
										"id": 1145,
										"nodeType": "StructuredDocumentation",
										"src": "16051:85:6",
										"text": " @dev Variant of {modExp} that supports inputs of arbitrary length."
									},
									"id": 1180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "modExp",
									"nameLocation": "16150:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "16170:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "16157:14:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1146,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16157:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "16186:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "16173:14:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1148,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16173:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "16202:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "16189:14:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1150,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16189:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16156:48:6"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "16228:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1153,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16228:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16227:14:6"
									},
									"scope": 2099,
									"src": "16141:280:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1225,
										"nodeType": "Block",
										"src": "16675:771:6",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 1195,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "16700:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1194,
														"name": "_zeroBytes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1259,
														"src": "16689:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (bytes memory) pure returns (bool)"
														}
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16689:13:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1204,
												"nodeType": "IfStatement",
												"src": "16685:47:6",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 1197,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16712:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16729:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "16719:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (bytes memory)"
																	},
																	"typeName": {
																		"id": 1198,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "16723:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	}
																},
																"id": 1201,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16719:12:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"id": 1202,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "16711:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "tuple(bool,bytes memory)"
														}
													},
													"functionReturnParameters": 1193,
													"id": 1203,
													"nodeType": "Return",
													"src": "16704:28:6"
												}
											},
											{
												"assignments": [
													1206
												],
												"declarations": [
													{
														"constant": false,
														"id": 1206,
														"mutability": "mutable",
														"name": "mLen",
														"nameLocation": "16751:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1225,
														"src": "16743:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1205,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16743:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1209,
												"initialValue": {
													"expression": {
														"id": 1207,
														"name": "m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "16758:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "16760:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "16758:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16743:23:6"
											},
											{
												"expression": {
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1210,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "16848:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1213,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1183,
																	"src": "16874:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16876:6:6",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "16874:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 1215,
																	"name": "e",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1185,
																	"src": "16884:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16886:6:6",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "16884:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1217,
																"name": "mLen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1206,
																"src": "16894:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1218,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "16900:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 1219,
																"name": "e",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1185,
																"src": "16903:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 1220,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "16906:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1211,
																"name": "abi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967295,
																"src": "16857:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_abi",
																	"typeString": "abi"
																}
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "16861:12:6",
															"memberName": "encodePacked",
															"nodeType": "MemberAccess",
															"src": "16857:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																"typeString": "function () pure returns (bytes memory)"
															}
														},
														"id": 1221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16857:51:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "16848:60:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "16848:60:6"
											},
											{
												"AST": {
													"nativeSrc": "16944:496:6",
													"nodeType": "YulBlock",
													"src": "16944:496:6",
													"statements": [
														{
															"nativeSrc": "16958:32:6",
															"nodeType": "YulVariableDeclaration",
															"src": "16958:32:6",
															"value": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "16977:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "16977:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16985:4:6",
																		"nodeType": "YulLiteral",
																		"src": "16985:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16973:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "16973:3:6"
																},
																"nativeSrc": "16973:17:6",
																"nodeType": "YulFunctionCall",
																"src": "16973:17:6"
															},
															"variables": [
																{
																	"name": "dataPtr",
																	"nativeSrc": "16962:7:6",
																	"nodeType": "YulTypedName",
																	"src": "16962:7:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17080:73:6",
															"nodeType": "YulAssignment",
															"src": "17080:73:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "17102:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "17102:3:6"
																		},
																		"nativeSrc": "17102:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "17102:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17109:4:6",
																		"nodeType": "YulLiteral",
																		"src": "17109:4:6",
																		"type": "",
																		"value": "0x05"
																	},
																	{
																		"name": "dataPtr",
																		"nativeSrc": "17115:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "17115:7:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "result",
																				"nativeSrc": "17130:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "17130:6:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "17124:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "17124:5:6"
																		},
																		"nativeSrc": "17124:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "17124:13:6"
																	},
																	{
																		"name": "dataPtr",
																		"nativeSrc": "17139:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "17139:7:6"
																	},
																	{
																		"name": "mLen",
																		"nativeSrc": "17148:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "17148:4:6"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nativeSrc": "17091:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "17091:10:6"
																},
																"nativeSrc": "17091:62:6",
																"nodeType": "YulFunctionCall",
																"src": "17091:62:6"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "17080:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "17080:7:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "17309:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "17309:6:6"
																	},
																	{
																		"name": "mLen",
																		"nativeSrc": "17317:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "17317:4:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17302:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "17302:6:6"
																},
																"nativeSrc": "17302:20:6",
																"nodeType": "YulFunctionCall",
																"src": "17302:20:6"
															},
															"nativeSrc": "17302:20:6",
															"nodeType": "YulExpressionStatement",
															"src": "17302:20:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17405:4:6",
																		"nodeType": "YulLiteral",
																		"src": "17405:4:6",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "dataPtr",
																				"nativeSrc": "17415:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "17415:7:6"
																			},
																			{
																				"name": "mLen",
																				"nativeSrc": "17424:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "17424:4:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17411:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "17411:3:6"
																		},
																		"nativeSrc": "17411:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "17411:18:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17398:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "17398:6:6"
																},
																"nativeSrc": "17398:32:6",
																"nodeType": "YulFunctionCall",
																"src": "17398:32:6"
															},
															"nativeSrc": "17398:32:6",
															"nodeType": "YulExpressionStatement",
															"src": "17398:32:6"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1206,
														"isOffset": false,
														"isSlot": false,
														"src": "17148:4:6",
														"valueSize": 1
													},
													{
														"declaration": 1206,
														"isOffset": false,
														"isSlot": false,
														"src": "17317:4:6",
														"valueSize": 1
													},
													{
														"declaration": 1206,
														"isOffset": false,
														"isSlot": false,
														"src": "17424:4:6",
														"valueSize": 1
													},
													{
														"declaration": 1192,
														"isOffset": false,
														"isSlot": false,
														"src": "16977:6:6",
														"valueSize": 1
													},
													{
														"declaration": 1192,
														"isOffset": false,
														"isSlot": false,
														"src": "17130:6:6",
														"valueSize": 1
													},
													{
														"declaration": 1192,
														"isOffset": false,
														"isSlot": false,
														"src": "17309:6:6",
														"valueSize": 1
													},
													{
														"declaration": 1190,
														"isOffset": false,
														"isSlot": false,
														"src": "17080:7:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1224,
												"nodeType": "InlineAssembly",
												"src": "16919:521:6"
											}
										]
									},
									"documentation": {
										"id": 1181,
										"nodeType": "StructuredDocumentation",
										"src": "16427:88:6",
										"text": " @dev Variant of {tryModExp} that supports inputs of arbitrary length."
									},
									"id": 1226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryModExp",
									"nameLocation": "16529:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "16561:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "16548:14:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1182,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16548:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "16585:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "16572:14:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1184,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16572:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "16609:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "16596:14:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1186,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16596:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16538:78:6"
									},
									"returnParameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "16645:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "16640:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16640:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "16667:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "16654:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1191,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16654:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16639:35:6"
									},
									"scope": 2099,
									"src": "16520:926:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1258,
										"nodeType": "Block",
										"src": "17601:176:6",
										"statements": [
											{
												"body": {
													"id": 1254,
													"nodeType": "Block",
													"src": "17658:92:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																},
																"id": 1249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1245,
																		"name": "byteArray",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1229,
																		"src": "17676:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1247,
																	"indexExpression": {
																		"id": 1246,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1235,
																		"src": "17686:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "17676:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17692:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "17676:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1253,
															"nodeType": "IfStatement",
															"src": "17672:68:6",
															"trueBody": {
																"id": 1252,
																"nodeType": "Block",
																"src": "17695:45:6",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "66616c7365",
																			"id": 1250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17720:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		"functionReturnParameters": 1233,
																		"id": 1251,
																		"nodeType": "Return",
																		"src": "17713:12:6"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1238,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1235,
														"src": "17631:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1239,
															"name": "byteArray",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1229,
															"src": "17635:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17645:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17635:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17631:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1255,
												"initializationExpression": {
													"assignments": [
														1235
													],
													"declarations": [
														{
															"constant": false,
															"id": 1235,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "17624:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1255,
															"src": "17616:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1234,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17616:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1237,
													"initialValue": {
														"hexValue": "30",
														"id": 1236,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17628:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "17616:13:6"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "17653:3:6",
														"subExpression": {
															"id": 1242,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "17655:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1244,
													"nodeType": "ExpressionStatement",
													"src": "17653:3:6"
												},
												"nodeType": "ForStatement",
												"src": "17611:139:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17766:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1233,
												"id": 1257,
												"nodeType": "Return",
												"src": "17759:11:6"
											}
										]
									},
									"documentation": {
										"id": 1227,
										"nodeType": "StructuredDocumentation",
										"src": "17452:72:6",
										"text": " @dev Returns whether the provided byte array is zero."
									},
									"id": 1259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_zeroBytes",
									"nameLocation": "17538:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "byteArray",
												"nameLocation": "17562:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "17549:22:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1228,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17549:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17548:24:6"
									},
									"returnParameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "17595:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1231,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17595:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17594:6:6"
									},
									"scope": 2099,
									"src": "17529:248:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1477,
										"nodeType": "Block",
										"src": "18137:5124:6",
										"statements": [
											{
												"id": 1476,
												"nodeType": "UncheckedBlock",
												"src": "18147:5108:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1267,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1262,
																"src": "18241:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "31",
																"id": 1268,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18246:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "18241:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1273,
														"nodeType": "IfStatement",
														"src": "18237:53:6",
														"trueBody": {
															"id": 1272,
															"nodeType": "Block",
															"src": "18249:41:6",
															"statements": [
																{
																	"expression": {
																		"id": 1270,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1262,
																		"src": "18274:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1266,
																	"id": 1271,
																	"nodeType": "Return",
																	"src": "18267:8:6"
																}
															]
														}
													},
													{
														"assignments": [
															1275
														],
														"declarations": [
															{
																"constant": false,
																"id": 1275,
																"mutability": "mutable",
																"name": "aa",
																"nameLocation": "19225:2:6",
																"nodeType": "VariableDeclaration",
																"scope": 1476,
																"src": "19217:10:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1274,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19217:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1277,
														"initialValue": {
															"id": 1276,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1262,
															"src": "19230:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "19217:14:6"
													},
													{
														"assignments": [
															1279
														],
														"declarations": [
															{
																"constant": false,
																"id": 1279,
																"mutability": "mutable",
																"name": "xn",
																"nameLocation": "19253:2:6",
																"nodeType": "VariableDeclaration",
																"scope": 1476,
																"src": "19245:10:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1278,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19245:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1281,
														"initialValue": {
															"hexValue": "31",
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19258:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "19245:14:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1282,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "19278:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1456"
																		},
																		"id": 1285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1283,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19285:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "313238",
																			"id": 1284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19290:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "19285:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1456"
																		}
																	}
																],
																"id": 1286,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19284:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																	"typeString": "int_const 3402...(31 digits omitted)...1456"
																}
															},
															"src": "19278:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1297,
														"nodeType": "IfStatement",
														"src": "19274:92:6",
														"trueBody": {
															"id": 1296,
															"nodeType": "Block",
															"src": "19296:70:6",
															"statements": [
																{
																	"expression": {
																		"id": 1290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1288,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1275,
																			"src": "19314:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19321:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "19314:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1291,
																	"nodeType": "ExpressionStatement",
																	"src": "19314:10:6"
																},
																{
																	"expression": {
																		"id": 1294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1292,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1279,
																			"src": "19342:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1293,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19349:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "19342:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1295,
																	"nodeType": "ExpressionStatement",
																	"src": "19342:9:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1298,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "19383:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		},
																		"id": 1301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19390:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3634",
																			"id": 1300,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19395:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "19390:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		}
																	}
																],
																"id": 1302,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19389:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18446744073709551616_by_1",
																	"typeString": "int_const 18446744073709551616"
																}
															},
															"src": "19383:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1313,
														"nodeType": "IfStatement",
														"src": "19379:90:6",
														"trueBody": {
															"id": 1312,
															"nodeType": "Block",
															"src": "19400:69:6",
															"statements": [
																{
																	"expression": {
																		"id": 1306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1304,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1275,
																			"src": "19418:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1305,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19425:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "19418:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1307,
																	"nodeType": "ExpressionStatement",
																	"src": "19418:9:6"
																},
																{
																	"expression": {
																		"id": 1310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1308,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1279,
																			"src": "19445:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19452:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "19445:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1311,
																	"nodeType": "ExpressionStatement",
																	"src": "19445:9:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1314,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "19486:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_4294967296_by_1",
																			"typeString": "int_const 4294967296"
																		},
																		"id": 1317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1315,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19493:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3332",
																			"id": 1316,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19498:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "19493:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4294967296_by_1",
																			"typeString": "int_const 4294967296"
																		}
																	}
																],
																"id": 1318,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19492:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "19486:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1329,
														"nodeType": "IfStatement",
														"src": "19482:90:6",
														"trueBody": {
															"id": 1328,
															"nodeType": "Block",
															"src": "19503:69:6",
															"statements": [
																{
																	"expression": {
																		"id": 1322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1320,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1275,
																			"src": "19521:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1321,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19528:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "19521:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1323,
																	"nodeType": "ExpressionStatement",
																	"src": "19521:9:6"
																},
																{
																	"expression": {
																		"id": 1326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1324,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1279,
																			"src": "19548:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1325,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19555:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19548:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1327,
																	"nodeType": "ExpressionStatement",
																	"src": "19548:9:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1330,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "19589:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_65536_by_1",
																			"typeString": "int_const 65536"
																		},
																		"id": 1333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1331,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19596:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3136",
																			"id": 1332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19601:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19596:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_65536_by_1",
																			"typeString": "int_const 65536"
																		}
																	}
																],
																"id": 1334,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19595:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65536_by_1",
																	"typeString": "int_const 65536"
																}
															},
															"src": "19589:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1345,
														"nodeType": "IfStatement",
														"src": "19585:89:6",
														"trueBody": {
															"id": 1344,
															"nodeType": "Block",
															"src": "19606:68:6",
															"statements": [
																{
																	"expression": {
																		"id": 1338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1336,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1275,
																			"src": "19624:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1337,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19631:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19624:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1339,
																	"nodeType": "ExpressionStatement",
																	"src": "19624:9:6"
																},
																{
																	"expression": {
																		"id": 1342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1340,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1279,
																			"src": "19651:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1341,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19658:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19651:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1343,
																	"nodeType": "ExpressionStatement",
																	"src": "19651:8:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1346,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "19691:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		},
																		"id": 1349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1347,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19698:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "38",
																			"id": 1348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19703:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19698:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		}
																	}
																],
																"id": 1350,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19697:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_256_by_1",
																	"typeString": "int_const 256"
																}
															},
															"src": "19691:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1361,
														"nodeType": "IfStatement",
														"src": "19687:87:6",
														"trueBody": {
															"id": 1360,
															"nodeType": "Block",
															"src": "19707:67:6",
															"statements": [
																{
																	"expression": {
																		"id": 1354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1352,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1275,
																			"src": "19725:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1353,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19732:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19725:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1355,
																	"nodeType": "ExpressionStatement",
																	"src": "19725:8:6"
																},
																{
																	"expression": {
																		"id": 1358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1356,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1279,
																			"src": "19751:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19758:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "19751:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1359,
																	"nodeType": "ExpressionStatement",
																	"src": "19751:8:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1362,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "19791:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"id": 1365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1363,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19798:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "34",
																			"id": 1364,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19803:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "19798:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		}
																	}
																],
																"id": 1366,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19797:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_16_by_1",
																	"typeString": "int_const 16"
																}
															},
															"src": "19791:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1377,
														"nodeType": "IfStatement",
														"src": "19787:87:6",
														"trueBody": {
															"id": 1376,
															"nodeType": "Block",
															"src": "19807:67:6",
															"statements": [
																{
																	"expression": {
																		"id": 1370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1368,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1275,
																			"src": "19825:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1369,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19832:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "19825:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1371,
																	"nodeType": "ExpressionStatement",
																	"src": "19825:8:6"
																},
																{
																	"expression": {
																		"id": 1374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1372,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1279,
																			"src": "19851:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1373,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19858:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "19851:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1375,
																	"nodeType": "ExpressionStatement",
																	"src": "19851:8:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1378,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "19891:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		},
																		"id": 1381,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19898:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 1380,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19903:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "19898:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		}
																	}
																],
																"id": 1382,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19897:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																}
															},
															"src": "19891:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1389,
														"nodeType": "IfStatement",
														"src": "19887:61:6",
														"trueBody": {
															"id": 1388,
															"nodeType": "Block",
															"src": "19907:41:6",
															"statements": [
																{
																	"expression": {
																		"id": 1386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1384,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1279,
																			"src": "19925:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1385,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19932:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "19925:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1387,
																	"nodeType": "ExpressionStatement",
																	"src": "19925:8:6"
																}
															]
														}
													},
													{
														"expression": {
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1390,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1279,
																"src": "20368:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "33",
																				"id": 1391,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20374:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				},
																				"value": "3"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1392,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1279,
																				"src": "20378:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "20374:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1394,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "20373:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20385:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20373:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20368:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1398,
														"nodeType": "ExpressionStatement",
														"src": "20368:18:6"
													},
													{
														"expression": {
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1399,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1279,
																"src": "22273:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1404,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1400,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1279,
																				"src": "22279:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1403,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1401,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1262,
																					"src": "22284:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1402,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1279,
																					"src": "22288:2:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22284:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22279:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1405,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22278:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22295:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22278:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22273:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1409,
														"nodeType": "ExpressionStatement",
														"src": "22273:23:6"
													},
													{
														"expression": {
															"id": 1419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1410,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1279,
																"src": "22382:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1411,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1279,
																				"src": "22388:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1414,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1412,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1262,
																					"src": "22393:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1413,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1279,
																					"src": "22397:2:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22393:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22388:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1416,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22387:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22404:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22387:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22382:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1420,
														"nodeType": "ExpressionStatement",
														"src": "22382:23:6"
													},
													{
														"expression": {
															"id": 1430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1421,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1279,
																"src": "22493:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1422,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1279,
																				"src": "22499:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1425,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1423,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1262,
																					"src": "22504:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1424,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1279,
																					"src": "22508:2:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22504:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22499:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1427,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22498:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22515:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22498:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22493:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1431,
														"nodeType": "ExpressionStatement",
														"src": "22493:23:6"
													},
													{
														"expression": {
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1432,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1279,
																"src": "22602:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1437,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1433,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1279,
																				"src": "22608:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1436,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1434,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1262,
																					"src": "22613:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1435,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1279,
																					"src": "22617:2:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22613:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22608:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1438,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22607:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22624:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22607:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22602:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1442,
														"nodeType": "ExpressionStatement",
														"src": "22602:23:6"
													},
													{
														"expression": {
															"id": 1452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1443,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1279,
																"src": "22712:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1448,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1444,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1279,
																				"src": "22718:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1447,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1445,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1262,
																					"src": "22723:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1446,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1279,
																					"src": "22727:2:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22723:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22718:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1449,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22717:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22734:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22717:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22712:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1453,
														"nodeType": "ExpressionStatement",
														"src": "22712:23:6"
													},
													{
														"expression": {
															"id": 1463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1454,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1279,
																"src": "22822:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1459,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1455,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1279,
																				"src": "22828:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1458,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1456,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1262,
																					"src": "22833:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1457,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1279,
																					"src": "22837:2:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22833:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22828:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1460,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22827:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22844:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22827:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22822:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1464,
														"nodeType": "ExpressionStatement",
														"src": "22822:23:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1465,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1279,
																"src": "23211:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1468,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1279,
																			"src": "23232:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1469,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1262,
																				"src": "23237:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1470,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1279,
																				"src": "23241:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "23237:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "23232:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 1466,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3864,
																		"src": "23216:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$3864_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 1467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "23225:6:6",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3863,
																	"src": "23216:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 1473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23216:28:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23211:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1266,
														"id": 1475,
														"nodeType": "Return",
														"src": "23204:40:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1260,
										"nodeType": "StructuredDocumentation",
										"src": "17783:292:6",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."
									},
									"id": 1478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "18089:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "18102:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "18094:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18094:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18093:11:6"
									},
									"returnParameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "18128:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18128:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18127:9:6"
									},
									"scope": 2099,
									"src": "18080:5181:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1511,
										"nodeType": "Block",
										"src": "23434:171:6",
										"statements": [
											{
												"id": 1510,
												"nodeType": "UncheckedBlock",
												"src": "23444:155:6",
												"statements": [
													{
														"assignments": [
															1490
														],
														"declarations": [
															{
																"constant": false,
																"id": 1490,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "23476:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1510,
																"src": "23468:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1489,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "23468:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1494,
														"initialValue": {
															"arguments": [
																{
																	"id": 1492,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1481,
																	"src": "23490:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1491,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1478,
																	1512
																],
																"referencedDeclaration": 1478,
																"src": "23485:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23485:7:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "23468:24:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1495,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1490,
																"src": "23513:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1499,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1484,
																					"src": "23555:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$505",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$505",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 1498,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2098,
																				"src": "23538:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$505_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 1500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23538:26:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1505,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1503,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1501,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1490,
																					"src": "23568:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1502,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1490,
																					"src": "23577:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "23568:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 1504,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1481,
																				"src": "23586:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "23568:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "23538:49:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 1496,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3864,
																		"src": "23522:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$3864_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 1497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "23531:6:6",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3863,
																	"src": "23522:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 1507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23522:66:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23513:75:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1488,
														"id": 1509,
														"nodeType": "Return",
														"src": "23506:82:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1479,
										"nodeType": "StructuredDocumentation",
										"src": "23267:86:6",
										"text": " @dev Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "23367:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "23380:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "23372:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23372:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "23392:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "23383:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$505",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1483,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1482,
														"name": "Rounding",
														"nameLocations": [
															"23383:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 505,
														"src": "23383:8:6"
													},
													"referencedDeclaration": 505,
													"src": "23383:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$505",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23371:30:6"
									},
									"returnParameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "23425:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23425:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23424:9:6"
									},
									"scope": 2099,
									"src": "23358:247:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1707,
										"nodeType": "Block",
										"src": "23796:981:6",
										"statements": [
											{
												"assignments": [
													1521
												],
												"declarations": [
													{
														"constant": false,
														"id": 1521,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "23814:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1707,
														"src": "23806:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1520,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23806:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1523,
												"initialValue": {
													"hexValue": "30",
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "23823:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23806:18:6"
											},
											{
												"assignments": [
													1525
												],
												"declarations": [
													{
														"constant": false,
														"id": 1525,
														"mutability": "mutable",
														"name": "exp",
														"nameLocation": "23842:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 1707,
														"src": "23834:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1524,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23834:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1526,
												"nodeType": "VariableDeclarationStatement",
												"src": "23834:11:6"
											},
											{
												"id": 1704,
												"nodeType": "UncheckedBlock",
												"src": "23855:893:6",
												"statements": [
													{
														"expression": {
															"id": 1541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1527,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1525,
																"src": "23879:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "313238",
																	"id": 1528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23885:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1538,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1531,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1515,
																				"src": "23907:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1455"
																				},
																				"id": 1537,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																								"typeString": "int_const 3402...(31 digits omitted)...1456"
																							},
																							"id": 1534,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 1532,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "23916:1:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "313238",
																								"id": 1533,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "23921:3:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_128_by_1",
																									"typeString": "int_const 128"
																								},
																								"value": "128"
																							},
																							"src": "23916:8:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																								"typeString": "int_const 3402...(31 digits omitted)...1456"
																							}
																						}
																					],
																					"id": 1535,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "23915:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																						"typeString": "int_const 3402...(31 digits omitted)...1456"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1536,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "23928:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "23915:14:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1455"
																				}
																			},
																			"src": "23907:22:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 1529,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3864,
																			"src": "23891:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$3864_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 1530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "23900:6:6",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3863,
																		"src": "23891:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 1539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23891:39:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23885:45:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23879:51:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1542,
														"nodeType": "ExpressionStatement",
														"src": "23879:51:6"
													},
													{
														"expression": {
															"id": 1545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1543,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1515,
																"src": "23944:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 1544,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1525,
																"src": "23954:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23944:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1546,
														"nodeType": "ExpressionStatement",
														"src": "23944:13:6"
													},
													{
														"expression": {
															"id": 1549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1547,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1521,
																"src": "23971:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1548,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1525,
																"src": "23981:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23971:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1550,
														"nodeType": "ExpressionStatement",
														"src": "23971:13:6"
													},
													{
														"expression": {
															"id": 1565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1551,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1525,
																"src": "23999:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3634",
																	"id": 1552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24005:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1555,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1515,
																				"src": "24026:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_18446744073709551615_by_1",
																					"typeString": "int_const 18446744073709551615"
																				},
																				"id": 1561,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_18446744073709551616_by_1",
																								"typeString": "int_const 18446744073709551616"
																							},
																							"id": 1558,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 1556,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24035:1:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "3634",
																								"id": 1557,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24040:2:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_64_by_1",
																									"typeString": "int_const 64"
																								},
																								"value": "64"
																							},
																							"src": "24035:7:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_18446744073709551616_by_1",
																								"typeString": "int_const 18446744073709551616"
																							}
																						}
																					],
																					"id": 1559,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24034:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_18446744073709551616_by_1",
																						"typeString": "int_const 18446744073709551616"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1560,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24046:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24034:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_18446744073709551615_by_1",
																					"typeString": "int_const 18446744073709551615"
																				}
																			},
																			"src": "24026:21:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 1553,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3864,
																			"src": "24010:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$3864_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 1554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24019:6:6",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3863,
																		"src": "24010:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 1563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24010:38:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24005:43:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23999:49:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1566,
														"nodeType": "ExpressionStatement",
														"src": "23999:49:6"
													},
													{
														"expression": {
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1567,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1515,
																"src": "24062:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 1568,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1525,
																"src": "24072:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24062:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1570,
														"nodeType": "ExpressionStatement",
														"src": "24062:13:6"
													},
													{
														"expression": {
															"id": 1573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1571,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1521,
																"src": "24089:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1572,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1525,
																"src": "24099:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24089:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1574,
														"nodeType": "ExpressionStatement",
														"src": "24089:13:6"
													},
													{
														"expression": {
															"id": 1589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1575,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1525,
																"src": "24117:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3332",
																	"id": 1576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24123:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1579,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1515,
																				"src": "24144:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_4294967295_by_1",
																					"typeString": "int_const 4294967295"
																				},
																				"id": 1585,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_4294967296_by_1",
																								"typeString": "int_const 4294967296"
																							},
																							"id": 1582,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 1580,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24153:1:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "3332",
																								"id": 1581,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24158:2:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							},
																							"src": "24153:7:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_4294967296_by_1",
																								"typeString": "int_const 4294967296"
																							}
																						}
																					],
																					"id": 1583,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24152:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_4294967296_by_1",
																						"typeString": "int_const 4294967296"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1584,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24164:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24152:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4294967295_by_1",
																					"typeString": "int_const 4294967295"
																				}
																			},
																			"src": "24144:21:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 1577,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3864,
																			"src": "24128:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$3864_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 1578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24137:6:6",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3863,
																		"src": "24128:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 1587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24128:38:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24123:43:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24117:49:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1590,
														"nodeType": "ExpressionStatement",
														"src": "24117:49:6"
													},
													{
														"expression": {
															"id": 1593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1591,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1515,
																"src": "24180:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 1592,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1525,
																"src": "24190:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24180:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1594,
														"nodeType": "ExpressionStatement",
														"src": "24180:13:6"
													},
													{
														"expression": {
															"id": 1597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1595,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1521,
																"src": "24207:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1596,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1525,
																"src": "24217:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24207:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1598,
														"nodeType": "ExpressionStatement",
														"src": "24207:13:6"
													},
													{
														"expression": {
															"id": 1613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1599,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1525,
																"src": "24235:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3136",
																	"id": 1600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24241:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1610,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1603,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1515,
																				"src": "24262:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_65535_by_1",
																					"typeString": "int_const 65535"
																				},
																				"id": 1609,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_65536_by_1",
																								"typeString": "int_const 65536"
																							},
																							"id": 1606,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 1604,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24271:1:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "3136",
																								"id": 1605,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24276:2:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_16_by_1",
																									"typeString": "int_const 16"
																								},
																								"value": "16"
																							},
																							"src": "24271:7:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_65536_by_1",
																								"typeString": "int_const 65536"
																							}
																						}
																					],
																					"id": 1607,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24270:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_65536_by_1",
																						"typeString": "int_const 65536"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1608,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24282:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24270:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_65535_by_1",
																					"typeString": "int_const 65535"
																				}
																			},
																			"src": "24262:21:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 1601,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3864,
																			"src": "24246:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$3864_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 1602,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24255:6:6",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3863,
																		"src": "24246:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 1611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24246:38:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24241:43:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24235:49:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1614,
														"nodeType": "ExpressionStatement",
														"src": "24235:49:6"
													},
													{
														"expression": {
															"id": 1617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1615,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1515,
																"src": "24298:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 1616,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1525,
																"src": "24308:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24298:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1618,
														"nodeType": "ExpressionStatement",
														"src": "24298:13:6"
													},
													{
														"expression": {
															"id": 1621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1619,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1521,
																"src": "24325:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1620,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1525,
																"src": "24335:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24325:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1622,
														"nodeType": "ExpressionStatement",
														"src": "24325:13:6"
													},
													{
														"expression": {
															"id": 1637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1623,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1525,
																"src": "24353:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "38",
																	"id": 1624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24359:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1634,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1627,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1515,
																				"src": "24379:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"id": 1633,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_256_by_1",
																								"typeString": "int_const 256"
																							},
																							"id": 1630,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 1628,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24388:1:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "38",
																								"id": 1629,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24393:1:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_8_by_1",
																									"typeString": "int_const 8"
																								},
																								"value": "8"
																							},
																							"src": "24388:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_256_by_1",
																								"typeString": "int_const 256"
																							}
																						}
																					],
																					"id": 1631,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24387:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_256_by_1",
																						"typeString": "int_const 256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1632,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24398:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24387:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				}
																			},
																			"src": "24379:20:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 1625,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3864,
																			"src": "24363:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$3864_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 1626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24372:6:6",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3863,
																		"src": "24363:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 1635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24363:37:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24359:41:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24353:47:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1638,
														"nodeType": "ExpressionStatement",
														"src": "24353:47:6"
													},
													{
														"expression": {
															"id": 1641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1639,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1515,
																"src": "24414:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 1640,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1525,
																"src": "24424:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24414:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1642,
														"nodeType": "ExpressionStatement",
														"src": "24414:13:6"
													},
													{
														"expression": {
															"id": 1645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1643,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1521,
																"src": "24441:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1644,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1525,
																"src": "24451:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24441:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1646,
														"nodeType": "ExpressionStatement",
														"src": "24441:13:6"
													},
													{
														"expression": {
															"id": 1661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1647,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1525,
																"src": "24469:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "34",
																	"id": 1648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24475:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1651,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1515,
																				"src": "24495:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_15_by_1",
																					"typeString": "int_const 15"
																				},
																				"id": 1657,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_16_by_1",
																								"typeString": "int_const 16"
																							},
																							"id": 1654,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 1652,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24504:1:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "34",
																								"id": 1653,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24509:1:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_4_by_1",
																									"typeString": "int_const 4"
																								},
																								"value": "4"
																							},
																							"src": "24504:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_16_by_1",
																								"typeString": "int_const 16"
																							}
																						}
																					],
																					"id": 1655,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24503:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_16_by_1",
																						"typeString": "int_const 16"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1656,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24514:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24503:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_15_by_1",
																					"typeString": "int_const 15"
																				}
																			},
																			"src": "24495:20:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 1649,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3864,
																			"src": "24479:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$3864_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 1650,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24488:6:6",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3863,
																		"src": "24479:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 1659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24479:37:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24475:41:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24469:47:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1662,
														"nodeType": "ExpressionStatement",
														"src": "24469:47:6"
													},
													{
														"expression": {
															"id": 1665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1663,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1515,
																"src": "24530:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 1664,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1525,
																"src": "24540:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24530:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1666,
														"nodeType": "ExpressionStatement",
														"src": "24530:13:6"
													},
													{
														"expression": {
															"id": 1669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1667,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1521,
																"src": "24557:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1668,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1525,
																"src": "24567:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24557:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1670,
														"nodeType": "ExpressionStatement",
														"src": "24557:13:6"
													},
													{
														"expression": {
															"id": 1685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1671,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1525,
																"src": "24585:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24591:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1675,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1515,
																				"src": "24611:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				},
																				"id": 1681,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_4_by_1",
																								"typeString": "int_const 4"
																							},
																							"id": 1678,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 1676,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24620:1:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "32",
																								"id": 1677,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24625:1:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_2_by_1",
																									"typeString": "int_const 2"
																								},
																								"value": "2"
																							},
																							"src": "24620:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_4_by_1",
																								"typeString": "int_const 4"
																							}
																						}
																					],
																					"id": 1679,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24619:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_4_by_1",
																						"typeString": "int_const 4"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1680,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24630:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24619:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				}
																			},
																			"src": "24611:20:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 1673,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3864,
																			"src": "24595:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$3864_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 1674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24604:6:6",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3863,
																		"src": "24595:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 1683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24595:37:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24591:41:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24585:47:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1686,
														"nodeType": "ExpressionStatement",
														"src": "24585:47:6"
													},
													{
														"expression": {
															"id": 1689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1687,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1515,
																"src": "24646:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 1688,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1525,
																"src": "24656:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24646:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1690,
														"nodeType": "ExpressionStatement",
														"src": "24646:13:6"
													},
													{
														"expression": {
															"id": 1693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1691,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1521,
																"src": "24673:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1692,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1525,
																"src": "24683:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24673:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1694,
														"nodeType": "ExpressionStatement",
														"src": "24673:13:6"
													},
													{
														"expression": {
															"id": 1702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1695,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1521,
																"src": "24701:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1698,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1515,
																			"src": "24727:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24735:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "24727:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 1696,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3864,
																		"src": "24711:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$3864_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 1697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "24720:6:6",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3863,
																	"src": "24711:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 1701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24711:26:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24701:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1703,
														"nodeType": "ExpressionStatement",
														"src": "24701:36:6"
													}
												]
											},
											{
												"expression": {
													"id": 1705,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1521,
													"src": "24764:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1519,
												"id": 1706,
												"nodeType": "Return",
												"src": "24757:13:6"
											}
										]
									},
									"documentation": {
										"id": 1513,
										"nodeType": "StructuredDocumentation",
										"src": "23611:119:6",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "23744:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23757:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "23749:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23749:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23748:15:6"
									},
									"returnParameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "23787:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23787:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23786:9:6"
									},
									"scope": 2099,
									"src": "23735:1042:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1741,
										"nodeType": "Block",
										"src": "25010:175:6",
										"statements": [
											{
												"id": 1740,
												"nodeType": "UncheckedBlock",
												"src": "25020:159:6",
												"statements": [
													{
														"assignments": [
															1720
														],
														"declarations": [
															{
																"constant": false,
																"id": 1720,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "25052:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1740,
																"src": "25044:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1719,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "25044:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1724,
														"initialValue": {
															"arguments": [
																{
																	"id": 1722,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1711,
																	"src": "25066:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1721,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1708,
																	1742
																],
																"referencedDeclaration": 1708,
																"src": "25061:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25061:11:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "25044:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1725,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1720,
																"src": "25093:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1736,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1729,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1714,
																					"src": "25135:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$505",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$505",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 1728,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2098,
																				"src": "25118:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$505_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 1730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "25118:26:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1735,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1733,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 1731,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "25148:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"id": 1732,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1720,
																					"src": "25153:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25148:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 1734,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1711,
																				"src": "25162:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25148:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "25118:49:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 1726,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3864,
																		"src": "25102:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$3864_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 1727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "25111:6:6",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3863,
																	"src": "25102:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 1737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25102:66:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25093:75:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1718,
														"id": 1739,
														"nodeType": "Return",
														"src": "25086:82:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1709,
										"nodeType": "StructuredDocumentation",
										"src": "24783:142:6",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "24939:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24952:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "24944:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24944:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "24968:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "24959:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$505",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1713,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1712,
														"name": "Rounding",
														"nameLocations": [
															"24959:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 505,
														"src": "24959:8:6"
													},
													"referencedDeclaration": 505,
													"src": "24959:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$505",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24943:34:6"
									},
									"returnParameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "25001:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25001:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25000:9:6"
									},
									"scope": 2099,
									"src": "24930:255:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1870,
										"nodeType": "Block",
										"src": "25378:854:6",
										"statements": [
											{
												"assignments": [
													1751
												],
												"declarations": [
													{
														"constant": false,
														"id": 1751,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "25396:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1870,
														"src": "25388:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1750,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25388:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1753,
												"initialValue": {
													"hexValue": "30",
													"id": 1752,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25405:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25388:18:6"
											},
											{
												"id": 1867,
												"nodeType": "UncheckedBlock",
												"src": "25416:787:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1754,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1745,
																"src": "25444:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1757,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25453:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25459:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "25453:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "25444:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1770,
														"nodeType": "IfStatement",
														"src": "25440:103:6",
														"trueBody": {
															"id": 1769,
															"nodeType": "Block",
															"src": "25463:80:6",
															"statements": [
																{
																	"expression": {
																		"id": 1763,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1759,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1745,
																			"src": "25481:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1762,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1760,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25490:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1761,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25496:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "25490:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "25481:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1764,
																	"nodeType": "ExpressionStatement",
																	"src": "25481:17:6"
																},
																{
																	"expression": {
																		"id": 1767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1765,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1751,
																			"src": "25516:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1766,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25526:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "25516:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1768,
																	"nodeType": "ExpressionStatement",
																	"src": "25516:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1771,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1745,
																"src": "25560:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1774,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25569:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25575:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "25569:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "25560:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1787,
														"nodeType": "IfStatement",
														"src": "25556:103:6",
														"trueBody": {
															"id": 1786,
															"nodeType": "Block",
															"src": "25579:80:6",
															"statements": [
																{
																	"expression": {
																		"id": 1780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1776,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1745,
																			"src": "25597:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1779,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1777,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25606:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1778,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25612:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "25606:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "25597:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1781,
																	"nodeType": "ExpressionStatement",
																	"src": "25597:17:6"
																},
																{
																	"expression": {
																		"id": 1784,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1782,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1751,
																			"src": "25632:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1783,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25642:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "25632:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1785,
																	"nodeType": "ExpressionStatement",
																	"src": "25632:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1788,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1745,
																"src": "25676:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25685:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25691:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "25685:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "25676:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1804,
														"nodeType": "IfStatement",
														"src": "25672:103:6",
														"trueBody": {
															"id": 1803,
															"nodeType": "Block",
															"src": "25695:80:6",
															"statements": [
																{
																	"expression": {
																		"id": 1797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1793,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1745,
																			"src": "25713:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1796,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1794,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25722:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1795,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25728:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "25722:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "25713:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1798,
																	"nodeType": "ExpressionStatement",
																	"src": "25713:17:6"
																},
																{
																	"expression": {
																		"id": 1801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1799,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1751,
																			"src": "25748:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25758:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "25748:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1802,
																	"nodeType": "ExpressionStatement",
																	"src": "25748:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1805,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1745,
																"src": "25792:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25801:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25807:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "25801:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "25792:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1821,
														"nodeType": "IfStatement",
														"src": "25788:100:6",
														"trueBody": {
															"id": 1820,
															"nodeType": "Block",
															"src": "25810:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 1814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1810,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1745,
																			"src": "25828:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1813,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1811,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25837:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1812,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25843:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "25837:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "25828:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1815,
																	"nodeType": "ExpressionStatement",
																	"src": "25828:16:6"
																},
																{
																	"expression": {
																		"id": 1818,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1816,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1751,
																			"src": "25862:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1817,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25872:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "25862:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1819,
																	"nodeType": "ExpressionStatement",
																	"src": "25862:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1822,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1745,
																"src": "25905:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25914:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1824,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25920:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "25914:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "25905:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1838,
														"nodeType": "IfStatement",
														"src": "25901:100:6",
														"trueBody": {
															"id": 1837,
															"nodeType": "Block",
															"src": "25923:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 1831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1827,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1745,
																			"src": "25941:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1830,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1828,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25950:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1829,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25956:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "25950:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "25941:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1832,
																	"nodeType": "ExpressionStatement",
																	"src": "25941:16:6"
																},
																{
																	"expression": {
																		"id": 1835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1833,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1751,
																			"src": "25975:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1834,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25985:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "25975:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1836,
																	"nodeType": "ExpressionStatement",
																	"src": "25975:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1839,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1745,
																"src": "26018:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1842,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26027:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26033:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "26027:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "26018:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1855,
														"nodeType": "IfStatement",
														"src": "26014:100:6",
														"trueBody": {
															"id": 1854,
															"nodeType": "Block",
															"src": "26036:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 1848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1844,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1745,
																			"src": "26054:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1847,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1845,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "26063:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1846,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "26069:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "26063:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "26054:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1849,
																	"nodeType": "ExpressionStatement",
																	"src": "26054:16:6"
																},
																{
																	"expression": {
																		"id": 1852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1850,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1751,
																			"src": "26088:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1851,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26098:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "26088:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1853,
																	"nodeType": "ExpressionStatement",
																	"src": "26088:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1856,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1745,
																"src": "26131:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1859,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26140:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26146:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "26140:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "26131:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1866,
														"nodeType": "IfStatement",
														"src": "26127:66:6",
														"trueBody": {
															"id": 1865,
															"nodeType": "Block",
															"src": "26149:44:6",
															"statements": [
																{
																	"expression": {
																		"id": 1863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1861,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1751,
																			"src": "26167:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1862,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26177:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "26167:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1864,
																	"nodeType": "ExpressionStatement",
																	"src": "26167:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1868,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1751,
													"src": "26219:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1749,
												"id": 1869,
												"nodeType": "Return",
												"src": "26212:13:6"
											}
										]
									},
									"documentation": {
										"id": 1743,
										"nodeType": "StructuredDocumentation",
										"src": "25191:120:6",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "25325:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25339:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1871,
												"src": "25331:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25331:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25330:15:6"
									},
									"returnParameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1871,
												"src": "25369:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25369:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25368:9:6"
									},
									"scope": 2099,
									"src": "25316:916:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1904,
										"nodeType": "Block",
										"src": "26467:177:6",
										"statements": [
											{
												"id": 1903,
												"nodeType": "UncheckedBlock",
												"src": "26477:161:6",
												"statements": [
													{
														"assignments": [
															1883
														],
														"declarations": [
															{
																"constant": false,
																"id": 1883,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "26509:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1903,
																"src": "26501:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1882,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "26501:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1887,
														"initialValue": {
															"arguments": [
																{
																	"id": 1885,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1874,
																	"src": "26524:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1884,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1871,
																	1905
																],
																"referencedDeclaration": 1871,
																"src": "26518:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26518:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "26501:29:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1888,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1883,
																"src": "26551:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1899,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1892,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1877,
																					"src": "26593:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$505",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$505",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 1891,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2098,
																				"src": "26576:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$505_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 1893,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "26576:26:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1896,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 1894,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "26606:2:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"id": 1895,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1883,
																					"src": "26612:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26606:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 1897,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1874,
																				"src": "26621:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "26606:20:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "26576:50:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 1889,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3864,
																		"src": "26560:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$3864_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 1890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "26569:6:6",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3863,
																	"src": "26560:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 1900,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26560:67:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26551:76:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1881,
														"id": 1902,
														"nodeType": "Return",
														"src": "26544:83:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1872,
										"nodeType": "StructuredDocumentation",
										"src": "26238:143:6",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "26395:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1874,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26409:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1905,
												"src": "26401:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26401:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "26425:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1905,
												"src": "26416:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$505",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1876,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1875,
														"name": "Rounding",
														"nameLocations": [
															"26416:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 505,
														"src": "26416:8:6"
													},
													"referencedDeclaration": 505,
													"src": "26416:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$505",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26400:34:6"
									},
									"returnParameters": {
										"id": 1881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1905,
												"src": "26458:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26458:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26457:9:6"
									},
									"scope": 2099,
									"src": "26386:258:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2041,
										"nodeType": "Block",
										"src": "26964:674:6",
										"statements": [
											{
												"assignments": [
													1914
												],
												"declarations": [
													{
														"constant": false,
														"id": 1914,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "26982:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 2041,
														"src": "26974:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1913,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26974:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1916,
												"initialValue": {
													"hexValue": "30",
													"id": 1915,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "26991:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26974:18:6"
											},
											{
												"assignments": [
													1918
												],
												"declarations": [
													{
														"constant": false,
														"id": 1918,
														"mutability": "mutable",
														"name": "isGt",
														"nameLocation": "27010:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 2041,
														"src": "27002:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1917,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27002:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1919,
												"nodeType": "VariableDeclarationStatement",
												"src": "27002:12:6"
											},
											{
												"id": 2038,
												"nodeType": "UncheckedBlock",
												"src": "27024:585:6",
												"statements": [
													{
														"expression": {
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1920,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1918,
																"src": "27048:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1923,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1908,
																			"src": "27071:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1455"
																			},
																			"id": 1929,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																							"typeString": "int_const 3402...(31 digits omitted)...1456"
																						},
																						"id": 1926,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1924,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27080:1:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "313238",
																							"id": 1925,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27085:3:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_128_by_1",
																								"typeString": "int_const 128"
																							},
																							"value": "128"
																						},
																						"src": "27080:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																							"typeString": "int_const 3402...(31 digits omitted)...1456"
																						}
																					}
																				],
																				"id": 1927,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27079:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1456"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1928,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27092:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27079:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1455"
																			}
																		},
																		"src": "27071:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 1921,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3864,
																		"src": "27055:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$3864_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 1922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27064:6:6",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3863,
																	"src": "27055:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 1931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27055:39:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27048:46:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1933,
														"nodeType": "ExpressionStatement",
														"src": "27048:46:6"
													},
													{
														"expression": {
															"id": 1938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1934,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1908,
																"src": "27108:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1937,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1935,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1918,
																	"src": "27118:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27125:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "27118:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27108:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1939,
														"nodeType": "ExpressionStatement",
														"src": "27108:20:6"
													},
													{
														"expression": {
															"id": 1944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1940,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1914,
																"src": "27142:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1943,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1941,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1918,
																	"src": "27152:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1942,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27159:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "27152:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27142:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1945,
														"nodeType": "ExpressionStatement",
														"src": "27142:19:6"
													},
													{
														"expression": {
															"id": 1958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1946,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1918,
																"src": "27176:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1949,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1908,
																			"src": "27199:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_18446744073709551615_by_1",
																				"typeString": "int_const 18446744073709551615"
																			},
																			"id": 1955,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_18446744073709551616_by_1",
																							"typeString": "int_const 18446744073709551616"
																						},
																						"id": 1952,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1950,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27208:1:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "3634",
																							"id": 1951,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27213:2:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_64_by_1",
																								"typeString": "int_const 64"
																							},
																							"value": "64"
																						},
																						"src": "27208:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_18446744073709551616_by_1",
																							"typeString": "int_const 18446744073709551616"
																						}
																					}
																				],
																				"id": 1953,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27207:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_18446744073709551616_by_1",
																					"typeString": "int_const 18446744073709551616"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1954,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27219:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27207:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_18446744073709551615_by_1",
																				"typeString": "int_const 18446744073709551615"
																			}
																		},
																		"src": "27199:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 1947,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3864,
																		"src": "27183:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$3864_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 1948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27192:6:6",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3863,
																	"src": "27183:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 1957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27183:38:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27176:45:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1959,
														"nodeType": "ExpressionStatement",
														"src": "27176:45:6"
													},
													{
														"expression": {
															"id": 1964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1960,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1908,
																"src": "27235:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1963,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1961,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1918,
																	"src": "27245:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27252:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "27245:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27235:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1965,
														"nodeType": "ExpressionStatement",
														"src": "27235:19:6"
													},
													{
														"expression": {
															"id": 1970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1966,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1914,
																"src": "27268:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1967,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1918,
																	"src": "27278:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27285:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "27278:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27268:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1971,
														"nodeType": "ExpressionStatement",
														"src": "27268:18:6"
													},
													{
														"expression": {
															"id": 1984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1972,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1918,
																"src": "27301:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1975,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1908,
																			"src": "27324:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_4294967295_by_1",
																				"typeString": "int_const 4294967295"
																			},
																			"id": 1981,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_4294967296_by_1",
																							"typeString": "int_const 4294967296"
																						},
																						"id": 1978,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1976,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27333:1:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "3332",
																							"id": 1977,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27338:2:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_32_by_1",
																								"typeString": "int_const 32"
																							},
																							"value": "32"
																						},
																						"src": "27333:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_4294967296_by_1",
																							"typeString": "int_const 4294967296"
																						}
																					}
																				],
																				"id": 1979,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27332:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4294967296_by_1",
																					"typeString": "int_const 4294967296"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1980,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27344:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27332:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4294967295_by_1",
																				"typeString": "int_const 4294967295"
																			}
																		},
																		"src": "27324:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 1973,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3864,
																		"src": "27308:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$3864_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 1974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27317:6:6",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3863,
																	"src": "27308:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 1983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27308:38:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27301:45:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1985,
														"nodeType": "ExpressionStatement",
														"src": "27301:45:6"
													},
													{
														"expression": {
															"id": 1990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1986,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1908,
																"src": "27360:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1987,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1918,
																	"src": "27370:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27377:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "27370:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27360:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1991,
														"nodeType": "ExpressionStatement",
														"src": "27360:19:6"
													},
													{
														"expression": {
															"id": 1996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1992,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1914,
																"src": "27393:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1993,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1918,
																	"src": "27403:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27410:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "27403:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27393:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1997,
														"nodeType": "ExpressionStatement",
														"src": "27393:18:6"
													},
													{
														"expression": {
															"id": 2010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1998,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1918,
																"src": "27426:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2001,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1908,
																			"src": "27449:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_65535_by_1",
																				"typeString": "int_const 65535"
																			},
																			"id": 2007,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_65536_by_1",
																							"typeString": "int_const 65536"
																						},
																						"id": 2004,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 2002,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27458:1:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "3136",
																							"id": 2003,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27463:2:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_16_by_1",
																								"typeString": "int_const 16"
																							},
																							"value": "16"
																						},
																						"src": "27458:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_65536_by_1",
																							"typeString": "int_const 65536"
																						}
																					}
																				],
																				"id": 2005,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27457:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_65536_by_1",
																					"typeString": "int_const 65536"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2006,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27469:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27457:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_65535_by_1",
																				"typeString": "int_const 65535"
																			}
																		},
																		"src": "27449:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 1999,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3864,
																		"src": "27433:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$3864_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27442:6:6",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3863,
																	"src": "27433:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27433:38:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27426:45:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2011,
														"nodeType": "ExpressionStatement",
														"src": "27426:45:6"
													},
													{
														"expression": {
															"id": 2016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2012,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1908,
																"src": "27485:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2013,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1918,
																	"src": "27495:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27502:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "27495:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27485:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2017,
														"nodeType": "ExpressionStatement",
														"src": "27485:19:6"
													},
													{
														"expression": {
															"id": 2022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2018,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1914,
																"src": "27518:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2019,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1918,
																	"src": "27528:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27535:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "27528:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27518:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2023,
														"nodeType": "ExpressionStatement",
														"src": "27518:18:6"
													},
													{
														"expression": {
															"id": 2036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2024,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1914,
																"src": "27551:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2027,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1908,
																			"src": "27577:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_255_by_1",
																				"typeString": "int_const 255"
																			},
																			"id": 2033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_256_by_1",
																							"typeString": "int_const 256"
																						},
																						"id": 2030,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 2028,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27586:1:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "38",
																							"id": 2029,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27591:1:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_8_by_1",
																								"typeString": "int_const 8"
																							},
																							"value": "8"
																						},
																						"src": "27586:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_256_by_1",
																							"typeString": "int_const 256"
																						}
																					}
																				],
																				"id": 2031,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27585:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_256_by_1",
																					"typeString": "int_const 256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2032,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27596:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27585:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_255_by_1",
																				"typeString": "int_const 255"
																			}
																		},
																		"src": "27577:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2025,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3864,
																		"src": "27561:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$3864_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2026,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27570:6:6",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3863,
																	"src": "27561:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27561:37:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27551:47:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2037,
														"nodeType": "ExpressionStatement",
														"src": "27551:47:6"
													}
												]
											},
											{
												"expression": {
													"id": 2039,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1914,
													"src": "27625:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1912,
												"id": 2040,
												"nodeType": "Return",
												"src": "27618:13:6"
											}
										]
									},
									"documentation": {
										"id": 1906,
										"nodeType": "StructuredDocumentation",
										"src": "26650:246:6",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "26910:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1908,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26925:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "26917:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26917:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26916:15:6"
									},
									"returnParameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1911,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "26955:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26955:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26954:9:6"
									},
									"scope": 2099,
									"src": "26901:737:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2078,
										"nodeType": "Block",
										"src": "27875:184:6",
										"statements": [
											{
												"id": 2077,
												"nodeType": "UncheckedBlock",
												"src": "27885:168:6",
												"statements": [
													{
														"assignments": [
															2054
														],
														"declarations": [
															{
																"constant": false,
																"id": 2054,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "27917:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 2077,
																"src": "27909:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2053,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "27909:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2058,
														"initialValue": {
															"arguments": [
																{
																	"id": 2056,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2045,
																	"src": "27933:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2055,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2042,
																	2079
																],
																"referencedDeclaration": 2042,
																"src": "27926:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27926:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "27909:30:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2059,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2054,
																"src": "27960:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2073,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2063,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2048,
																					"src": "28002:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$505",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$505",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 2062,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2098,
																				"src": "27985:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$505_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 2064,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "27985:26:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2072,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2070,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 2065,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "28015:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2068,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 2066,
																								"name": "result",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2054,
																								"src": "28021:6:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "33",
																								"id": 2067,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "28031:1:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_3_by_1",
																									"typeString": "int_const 3"
																								},
																								"value": "3"
																							},
																							"src": "28021:11:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2069,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "28020:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "28015:18:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2071,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2045,
																				"src": "28036:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "28015:26:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "27985:56:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2060,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3864,
																		"src": "27969:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$3864_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27978:6:6",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3863,
																	"src": "27969:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2074,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27969:73:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27960:82:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2052,
														"id": 2076,
														"nodeType": "Return",
														"src": "27953:89:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2043,
										"nodeType": "StructuredDocumentation",
										"src": "27644:144:6",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "27802:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27817:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "27809:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27809:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "27833:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "27824:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$505",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2047,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2046,
														"name": "Rounding",
														"nameLocations": [
															"27824:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 505,
														"src": "27824:8:6"
													},
													"referencedDeclaration": 505,
													"src": "27824:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$505",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27808:34:6"
									},
									"returnParameters": {
										"id": 2052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2051,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "27866:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27866:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27865:9:6"
									},
									"scope": 2099,
									"src": "27793:266:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2097,
										"nodeType": "Block",
										"src": "28257:48:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2093,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2090,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2083,
																	"src": "28280:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$505",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$505",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2089,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28274:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2088,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "28274:5:6",
																	"typeDescriptions": {}
																}
															},
															"id": 2091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28274:15:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28292:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "28274:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2094,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28297:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "28274:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2087,
												"id": 2096,
												"nodeType": "Return",
												"src": "28267:31:6"
											}
										]
									},
									"documentation": {
										"id": 2080,
										"nodeType": "StructuredDocumentation",
										"src": "28065:113:6",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2098,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "28192:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2083,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "28218:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2098,
												"src": "28209:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$505",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2082,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2081,
														"name": "Rounding",
														"nameLocations": [
															"28209:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 505,
														"src": "28209:8:6"
													},
													"referencedDeclaration": 505,
													"src": "28209:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$505",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28208:19:6"
									},
									"returnParameters": {
										"id": 2087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2086,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2098,
												"src": "28251:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2085,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28251:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28250:6:6"
									},
									"scope": 2099,
									"src": "28183:122:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2100,
							"src": "281:28026:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:28205:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
					"exportedSymbols": {
						"SafeCast": [
							3864
						]
					},
					"id": 3865,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "192:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeCast",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2102,
								"nodeType": "StructuredDocumentation",
								"src": "218:550:7",
								"text": " @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 3864,
							"linearizedBaseContracts": [
								3864
							],
							"name": "SafeCast",
							"nameLocation": "777:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2103,
										"nodeType": "StructuredDocumentation",
										"src": "792:68:7",
										"text": " @dev Value doesn't fit in an uint of `bits` size."
									},
									"errorSelector": "6dfcc650",
									"id": 2109,
									"name": "SafeCastOverflowedUintDowncast",
									"nameLocation": "871:30:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2105,
												"mutability": "mutable",
												"name": "bits",
												"nameLocation": "908:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "902:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2104,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "902:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "922:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "914:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "901:27:7"
									},
									"src": "865:64:7"
								},
								{
									"documentation": {
										"id": 2110,
										"nodeType": "StructuredDocumentation",
										"src": "935:75:7",
										"text": " @dev An int value doesn't fit in an uint of `bits` size."
									},
									"errorSelector": "a8ce4432",
									"id": 2114,
									"name": "SafeCastOverflowedIntToUint",
									"nameLocation": "1021:27:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2112,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1056:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2114,
												"src": "1049:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2111,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1049:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:14:7"
									},
									"src": "1015:48:7"
								},
								{
									"documentation": {
										"id": 2115,
										"nodeType": "StructuredDocumentation",
										"src": "1069:67:7",
										"text": " @dev Value doesn't fit in an int of `bits` size."
									},
									"errorSelector": "327269a7",
									"id": 2121,
									"name": "SafeCastOverflowedIntDowncast",
									"nameLocation": "1147:29:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2117,
												"mutability": "mutable",
												"name": "bits",
												"nameLocation": "1183:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "1177:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2116,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1177:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2119,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1196:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "1189:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2118,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1189:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:26:7"
									},
									"src": "1141:62:7"
								},
								{
									"documentation": {
										"id": 2122,
										"nodeType": "StructuredDocumentation",
										"src": "1209:75:7",
										"text": " @dev An uint value doesn't fit in an int of `bits` size."
									},
									"errorSelector": "24775e06",
									"id": 2126,
									"name": "SafeCastOverflowedUintToInt",
									"nameLocation": "1295:27:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2124,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1331:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2126,
												"src": "1323:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:15:7"
									},
									"src": "1289:49:7"
								},
								{
									"body": {
										"id": 2153,
										"nodeType": "Block",
										"src": "1695:152:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2134,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2129,
														"src": "1709:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1722:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint248_$",
																		"typeString": "type(uint248)"
																	},
																	"typeName": {
																		"id": 2136,
																		"name": "uint248",
																		"nodeType": "ElementaryTypeName",
																		"src": "1722:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint248_$",
																		"typeString": "type(uint248)"
																	}
																],
																"id": 2135,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1717:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1717:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint248",
																"typeString": "type(uint248)"
															}
														},
														"id": 2139,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1731:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "1717:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint248",
															"typeString": "uint248"
														}
													},
													"src": "1709:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2147,
												"nodeType": "IfStatement",
												"src": "1705:105:7",
												"trueBody": {
													"id": 2146,
													"nodeType": "Block",
													"src": "1736:74:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323438",
																		"id": 2142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1788:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		"value": "248"
																	},
																	{
																		"id": 2143,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2129,
																		"src": "1793:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2141,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "1757:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1757:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2145,
															"nodeType": "RevertStatement",
															"src": "1750:49:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2150,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2129,
															"src": "1834:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2149,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1826:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint248_$",
															"typeString": "type(uint248)"
														},
														"typeName": {
															"id": 2148,
															"name": "uint248",
															"nodeType": "ElementaryTypeName",
															"src": "1826:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 2151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1826:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"functionReturnParameters": 2133,
												"id": 2152,
												"nodeType": "Return",
												"src": "1819:21:7"
											}
										]
									},
									"documentation": {
										"id": 2127,
										"nodeType": "StructuredDocumentation",
										"src": "1344:280:7",
										"text": " @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"
									},
									"id": 2154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint248",
									"nameLocation": "1638:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1656:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2154,
												"src": "1648:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1648:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1647:15:7"
									},
									"returnParameters": {
										"id": 2133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2154,
												"src": "1686:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint248",
													"typeString": "uint248"
												},
												"typeName": {
													"id": 2131,
													"name": "uint248",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1685:9:7"
									},
									"scope": 3864,
									"src": "1629:218:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2181,
										"nodeType": "Block",
										"src": "2204:152:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2162,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2157,
														"src": "2218:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2231:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint240_$",
																		"typeString": "type(uint240)"
																	},
																	"typeName": {
																		"id": 2164,
																		"name": "uint240",
																		"nodeType": "ElementaryTypeName",
																		"src": "2231:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint240_$",
																		"typeString": "type(uint240)"
																	}
																],
																"id": 2163,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2226:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2226:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint240",
																"typeString": "type(uint240)"
															}
														},
														"id": 2167,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2240:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2226:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint240",
															"typeString": "uint240"
														}
													},
													"src": "2218:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2175,
												"nodeType": "IfStatement",
												"src": "2214:105:7",
												"trueBody": {
													"id": 2174,
													"nodeType": "Block",
													"src": "2245:74:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323430",
																		"id": 2170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2297:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		"value": "240"
																	},
																	{
																		"id": 2171,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2157,
																		"src": "2302:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2169,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "2266:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2266:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2173,
															"nodeType": "RevertStatement",
															"src": "2259:49:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2178,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2157,
															"src": "2343:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2177,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2335:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint240_$",
															"typeString": "type(uint240)"
														},
														"typeName": {
															"id": 2176,
															"name": "uint240",
															"nodeType": "ElementaryTypeName",
															"src": "2335:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 2179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2335:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"functionReturnParameters": 2161,
												"id": 2180,
												"nodeType": "Return",
												"src": "2328:21:7"
											}
										]
									},
									"documentation": {
										"id": 2155,
										"nodeType": "StructuredDocumentation",
										"src": "1853:280:7",
										"text": " @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"
									},
									"id": 2182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint240",
									"nameLocation": "2147:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2157,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2165:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2182,
												"src": "2157:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2157:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2156:15:7"
									},
									"returnParameters": {
										"id": 2161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2182,
												"src": "2195:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint240",
													"typeString": "uint240"
												},
												"typeName": {
													"id": 2159,
													"name": "uint240",
													"nodeType": "ElementaryTypeName",
													"src": "2195:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2194:9:7"
									},
									"scope": 3864,
									"src": "2138:218:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2209,
										"nodeType": "Block",
										"src": "2713:152:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2190,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2185,
														"src": "2727:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2740:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint232_$",
																		"typeString": "type(uint232)"
																	},
																	"typeName": {
																		"id": 2192,
																		"name": "uint232",
																		"nodeType": "ElementaryTypeName",
																		"src": "2740:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint232_$",
																		"typeString": "type(uint232)"
																	}
																],
																"id": 2191,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2735:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2735:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint232",
																"typeString": "type(uint232)"
															}
														},
														"id": 2195,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2749:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2735:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint232",
															"typeString": "uint232"
														}
													},
													"src": "2727:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2203,
												"nodeType": "IfStatement",
												"src": "2723:105:7",
												"trueBody": {
													"id": 2202,
													"nodeType": "Block",
													"src": "2754:74:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323332",
																		"id": 2198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2806:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		"value": "232"
																	},
																	{
																		"id": 2199,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2185,
																		"src": "2811:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2197,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "2775:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2775:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2201,
															"nodeType": "RevertStatement",
															"src": "2768:49:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2206,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2185,
															"src": "2852:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2205,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2844:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint232_$",
															"typeString": "type(uint232)"
														},
														"typeName": {
															"id": 2204,
															"name": "uint232",
															"nodeType": "ElementaryTypeName",
															"src": "2844:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 2207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2844:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"functionReturnParameters": 2189,
												"id": 2208,
												"nodeType": "Return",
												"src": "2837:21:7"
											}
										]
									},
									"documentation": {
										"id": 2183,
										"nodeType": "StructuredDocumentation",
										"src": "2362:280:7",
										"text": " @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"
									},
									"id": 2210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint232",
									"nameLocation": "2656:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2185,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2674:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2210,
												"src": "2666:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:15:7"
									},
									"returnParameters": {
										"id": 2189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2210,
												"src": "2704:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint232",
													"typeString": "uint232"
												},
												"typeName": {
													"id": 2187,
													"name": "uint232",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2703:9:7"
									},
									"scope": 3864,
									"src": "2647:218:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2237,
										"nodeType": "Block",
										"src": "3222:152:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2218,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2213,
														"src": "3236:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3249:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint224_$",
																		"typeString": "type(uint224)"
																	},
																	"typeName": {
																		"id": 2220,
																		"name": "uint224",
																		"nodeType": "ElementaryTypeName",
																		"src": "3249:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint224_$",
																		"typeString": "type(uint224)"
																	}
																],
																"id": 2219,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3244:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3244:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint224",
																"typeString": "type(uint224)"
															}
														},
														"id": 2223,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3258:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3244:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"src": "3236:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2231,
												"nodeType": "IfStatement",
												"src": "3232:105:7",
												"trueBody": {
													"id": 2230,
													"nodeType": "Block",
													"src": "3263:74:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323234",
																		"id": 2226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3315:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "224"
																	},
																	{
																		"id": 2227,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2213,
																		"src": "3320:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2225,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "3284:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3284:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2229,
															"nodeType": "RevertStatement",
															"src": "3277:49:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2234,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2213,
															"src": "3361:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2233,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3353:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint224_$",
															"typeString": "type(uint224)"
														},
														"typeName": {
															"id": 2232,
															"name": "uint224",
															"nodeType": "ElementaryTypeName",
															"src": "3353:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 2235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3353:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"functionReturnParameters": 2217,
												"id": 2236,
												"nodeType": "Return",
												"src": "3346:21:7"
											}
										]
									},
									"documentation": {
										"id": 2211,
										"nodeType": "StructuredDocumentation",
										"src": "2871:280:7",
										"text": " @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 2238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint224",
									"nameLocation": "3165:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3183:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2238,
												"src": "3175:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3175:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3174:15:7"
									},
									"returnParameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2238,
												"src": "3213:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 2215,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "3213:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3212:9:7"
									},
									"scope": 3864,
									"src": "3156:218:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2265,
										"nodeType": "Block",
										"src": "3731:152:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2246,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2241,
														"src": "3745:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3758:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint216_$",
																		"typeString": "type(uint216)"
																	},
																	"typeName": {
																		"id": 2248,
																		"name": "uint216",
																		"nodeType": "ElementaryTypeName",
																		"src": "3758:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint216_$",
																		"typeString": "type(uint216)"
																	}
																],
																"id": 2247,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3753:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3753:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint216",
																"typeString": "type(uint216)"
															}
														},
														"id": 2251,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3767:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3753:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint216",
															"typeString": "uint216"
														}
													},
													"src": "3745:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2259,
												"nodeType": "IfStatement",
												"src": "3741:105:7",
												"trueBody": {
													"id": 2258,
													"nodeType": "Block",
													"src": "3772:74:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323136",
																		"id": 2254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3824:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		"value": "216"
																	},
																	{
																		"id": 2255,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2241,
																		"src": "3829:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2253,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "3793:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3793:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2257,
															"nodeType": "RevertStatement",
															"src": "3786:49:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2262,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2241,
															"src": "3870:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2261,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3862:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint216_$",
															"typeString": "type(uint216)"
														},
														"typeName": {
															"id": 2260,
															"name": "uint216",
															"nodeType": "ElementaryTypeName",
															"src": "3862:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 2263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3862:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"functionReturnParameters": 2245,
												"id": 2264,
												"nodeType": "Return",
												"src": "3855:21:7"
											}
										]
									},
									"documentation": {
										"id": 2239,
										"nodeType": "StructuredDocumentation",
										"src": "3380:280:7",
										"text": " @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"
									},
									"id": 2266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint216",
									"nameLocation": "3674:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2241,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3692:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "3684:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3684:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3683:15:7"
									},
									"returnParameters": {
										"id": 2245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "3722:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint216",
													"typeString": "uint216"
												},
												"typeName": {
													"id": 2243,
													"name": "uint216",
													"nodeType": "ElementaryTypeName",
													"src": "3722:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3721:9:7"
									},
									"scope": 3864,
									"src": "3665:218:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2293,
										"nodeType": "Block",
										"src": "4240:152:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2274,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2269,
														"src": "4254:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4267:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint208_$",
																		"typeString": "type(uint208)"
																	},
																	"typeName": {
																		"id": 2276,
																		"name": "uint208",
																		"nodeType": "ElementaryTypeName",
																		"src": "4267:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint208_$",
																		"typeString": "type(uint208)"
																	}
																],
																"id": 2275,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4262:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2278,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4262:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint208",
																"typeString": "type(uint208)"
															}
														},
														"id": 2279,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4276:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4262:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint208",
															"typeString": "uint208"
														}
													},
													"src": "4254:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2287,
												"nodeType": "IfStatement",
												"src": "4250:105:7",
												"trueBody": {
													"id": 2286,
													"nodeType": "Block",
													"src": "4281:74:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323038",
																		"id": 2282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4333:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		"value": "208"
																	},
																	{
																		"id": 2283,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2269,
																		"src": "4338:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2281,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "4302:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4302:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2285,
															"nodeType": "RevertStatement",
															"src": "4295:49:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2290,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2269,
															"src": "4379:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2289,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4371:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint208_$",
															"typeString": "type(uint208)"
														},
														"typeName": {
															"id": 2288,
															"name": "uint208",
															"nodeType": "ElementaryTypeName",
															"src": "4371:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 2291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4371:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"functionReturnParameters": 2273,
												"id": 2292,
												"nodeType": "Return",
												"src": "4364:21:7"
											}
										]
									},
									"documentation": {
										"id": 2267,
										"nodeType": "StructuredDocumentation",
										"src": "3889:280:7",
										"text": " @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"
									},
									"id": 2294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint208",
									"nameLocation": "4183:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4201:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2294,
												"src": "4193:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:15:7"
									},
									"returnParameters": {
										"id": 2273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2294,
												"src": "4231:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint208",
													"typeString": "uint208"
												},
												"typeName": {
													"id": 2271,
													"name": "uint208",
													"nodeType": "ElementaryTypeName",
													"src": "4231:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4230:9:7"
									},
									"scope": 3864,
									"src": "4174:218:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2321,
										"nodeType": "Block",
										"src": "4749:152:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2302,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2297,
														"src": "4763:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4776:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint200_$",
																		"typeString": "type(uint200)"
																	},
																	"typeName": {
																		"id": 2304,
																		"name": "uint200",
																		"nodeType": "ElementaryTypeName",
																		"src": "4776:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint200_$",
																		"typeString": "type(uint200)"
																	}
																],
																"id": 2303,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4771:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4771:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint200",
																"typeString": "type(uint200)"
															}
														},
														"id": 2307,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4785:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4771:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint200",
															"typeString": "uint200"
														}
													},
													"src": "4763:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2315,
												"nodeType": "IfStatement",
												"src": "4759:105:7",
												"trueBody": {
													"id": 2314,
													"nodeType": "Block",
													"src": "4790:74:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323030",
																		"id": 2310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4842:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"id": 2311,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2297,
																		"src": "4847:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2309,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "4811:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4811:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2313,
															"nodeType": "RevertStatement",
															"src": "4804:49:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2318,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2297,
															"src": "4888:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2317,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4880:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint200_$",
															"typeString": "type(uint200)"
														},
														"typeName": {
															"id": 2316,
															"name": "uint200",
															"nodeType": "ElementaryTypeName",
															"src": "4880:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 2319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4880:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"functionReturnParameters": 2301,
												"id": 2320,
												"nodeType": "Return",
												"src": "4873:21:7"
											}
										]
									},
									"documentation": {
										"id": 2295,
										"nodeType": "StructuredDocumentation",
										"src": "4398:280:7",
										"text": " @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"
									},
									"id": 2322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint200",
									"nameLocation": "4692:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2297,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4710:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2322,
												"src": "4702:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:15:7"
									},
									"returnParameters": {
										"id": 2301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2322,
												"src": "4740:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint200",
													"typeString": "uint200"
												},
												"typeName": {
													"id": 2299,
													"name": "uint200",
													"nodeType": "ElementaryTypeName",
													"src": "4740:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4739:9:7"
									},
									"scope": 3864,
									"src": "4683:218:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2349,
										"nodeType": "Block",
										"src": "5258:152:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2330,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2325,
														"src": "5272:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5285:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint192_$",
																		"typeString": "type(uint192)"
																	},
																	"typeName": {
																		"id": 2332,
																		"name": "uint192",
																		"nodeType": "ElementaryTypeName",
																		"src": "5285:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint192_$",
																		"typeString": "type(uint192)"
																	}
																],
																"id": 2331,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5280:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5280:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint192",
																"typeString": "type(uint192)"
															}
														},
														"id": 2335,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5294:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5280:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint192",
															"typeString": "uint192"
														}
													},
													"src": "5272:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2343,
												"nodeType": "IfStatement",
												"src": "5268:105:7",
												"trueBody": {
													"id": 2342,
													"nodeType": "Block",
													"src": "5299:74:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313932",
																		"id": 2338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5351:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	{
																		"id": 2339,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2325,
																		"src": "5356:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2337,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "5320:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5320:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2341,
															"nodeType": "RevertStatement",
															"src": "5313:49:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2346,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2325,
															"src": "5397:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2345,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5389:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint192_$",
															"typeString": "type(uint192)"
														},
														"typeName": {
															"id": 2344,
															"name": "uint192",
															"nodeType": "ElementaryTypeName",
															"src": "5389:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 2347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"functionReturnParameters": 2329,
												"id": 2348,
												"nodeType": "Return",
												"src": "5382:21:7"
											}
										]
									},
									"documentation": {
										"id": 2323,
										"nodeType": "StructuredDocumentation",
										"src": "4907:280:7",
										"text": " @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"
									},
									"id": 2350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint192",
									"nameLocation": "5201:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2325,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5219:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2350,
												"src": "5211:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5211:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5210:15:7"
									},
									"returnParameters": {
										"id": 2329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2350,
												"src": "5249:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint192",
													"typeString": "uint192"
												},
												"typeName": {
													"id": 2327,
													"name": "uint192",
													"nodeType": "ElementaryTypeName",
													"src": "5249:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5248:9:7"
									},
									"scope": 3864,
									"src": "5192:218:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2377,
										"nodeType": "Block",
										"src": "5767:152:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2358,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2353,
														"src": "5781:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5794:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint184_$",
																		"typeString": "type(uint184)"
																	},
																	"typeName": {
																		"id": 2360,
																		"name": "uint184",
																		"nodeType": "ElementaryTypeName",
																		"src": "5794:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint184_$",
																		"typeString": "type(uint184)"
																	}
																],
																"id": 2359,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5789:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2362,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5789:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint184",
																"typeString": "type(uint184)"
															}
														},
														"id": 2363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5803:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5789:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint184",
															"typeString": "uint184"
														}
													},
													"src": "5781:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2371,
												"nodeType": "IfStatement",
												"src": "5777:105:7",
												"trueBody": {
													"id": 2370,
													"nodeType": "Block",
													"src": "5808:74:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313834",
																		"id": 2366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5860:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		"value": "184"
																	},
																	{
																		"id": 2367,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2353,
																		"src": "5865:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2365,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "5829:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5829:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2369,
															"nodeType": "RevertStatement",
															"src": "5822:49:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2374,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2353,
															"src": "5906:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2373,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5898:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint184_$",
															"typeString": "type(uint184)"
														},
														"typeName": {
															"id": 2372,
															"name": "uint184",
															"nodeType": "ElementaryTypeName",
															"src": "5898:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 2375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5898:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"functionReturnParameters": 2357,
												"id": 2376,
												"nodeType": "Return",
												"src": "5891:21:7"
											}
										]
									},
									"documentation": {
										"id": 2351,
										"nodeType": "StructuredDocumentation",
										"src": "5416:280:7",
										"text": " @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"
									},
									"id": 2378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint184",
									"nameLocation": "5710:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2353,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5728:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2378,
												"src": "5720:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5720:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5719:15:7"
									},
									"returnParameters": {
										"id": 2357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2378,
												"src": "5758:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint184",
													"typeString": "uint184"
												},
												"typeName": {
													"id": 2355,
													"name": "uint184",
													"nodeType": "ElementaryTypeName",
													"src": "5758:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5757:9:7"
									},
									"scope": 3864,
									"src": "5701:218:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2405,
										"nodeType": "Block",
										"src": "6276:152:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2386,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2381,
														"src": "6290:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6303:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint176_$",
																		"typeString": "type(uint176)"
																	},
																	"typeName": {
																		"id": 2388,
																		"name": "uint176",
																		"nodeType": "ElementaryTypeName",
																		"src": "6303:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint176_$",
																		"typeString": "type(uint176)"
																	}
																],
																"id": 2387,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6298:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6298:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint176",
																"typeString": "type(uint176)"
															}
														},
														"id": 2391,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6312:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6298:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint176",
															"typeString": "uint176"
														}
													},
													"src": "6290:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2399,
												"nodeType": "IfStatement",
												"src": "6286:105:7",
												"trueBody": {
													"id": 2398,
													"nodeType": "Block",
													"src": "6317:74:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313736",
																		"id": 2394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6369:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		"value": "176"
																	},
																	{
																		"id": 2395,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2381,
																		"src": "6374:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2393,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "6338:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6338:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2397,
															"nodeType": "RevertStatement",
															"src": "6331:49:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2402,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2381,
															"src": "6415:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2401,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6407:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint176_$",
															"typeString": "type(uint176)"
														},
														"typeName": {
															"id": 2400,
															"name": "uint176",
															"nodeType": "ElementaryTypeName",
															"src": "6407:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 2403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6407:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"functionReturnParameters": 2385,
												"id": 2404,
												"nodeType": "Return",
												"src": "6400:21:7"
											}
										]
									},
									"documentation": {
										"id": 2379,
										"nodeType": "StructuredDocumentation",
										"src": "5925:280:7",
										"text": " @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"
									},
									"id": 2406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint176",
									"nameLocation": "6219:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2381,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6237:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2406,
												"src": "6229:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6229:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6228:15:7"
									},
									"returnParameters": {
										"id": 2385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2406,
												"src": "6267:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint176",
													"typeString": "uint176"
												},
												"typeName": {
													"id": 2383,
													"name": "uint176",
													"nodeType": "ElementaryTypeName",
													"src": "6267:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6266:9:7"
									},
									"scope": 3864,
									"src": "6210:218:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2433,
										"nodeType": "Block",
										"src": "6785:152:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2414,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2409,
														"src": "6799:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6812:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint168_$",
																		"typeString": "type(uint168)"
																	},
																	"typeName": {
																		"id": 2416,
																		"name": "uint168",
																		"nodeType": "ElementaryTypeName",
																		"src": "6812:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint168_$",
																		"typeString": "type(uint168)"
																	}
																],
																"id": 2415,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6807:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6807:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint168",
																"typeString": "type(uint168)"
															}
														},
														"id": 2419,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6821:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6807:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint168",
															"typeString": "uint168"
														}
													},
													"src": "6799:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2427,
												"nodeType": "IfStatement",
												"src": "6795:105:7",
												"trueBody": {
													"id": 2426,
													"nodeType": "Block",
													"src": "6826:74:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313638",
																		"id": 2422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6878:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		"value": "168"
																	},
																	{
																		"id": 2423,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2409,
																		"src": "6883:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2421,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "6847:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6847:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2425,
															"nodeType": "RevertStatement",
															"src": "6840:49:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2430,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2409,
															"src": "6924:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2429,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6916:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint168_$",
															"typeString": "type(uint168)"
														},
														"typeName": {
															"id": 2428,
															"name": "uint168",
															"nodeType": "ElementaryTypeName",
															"src": "6916:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 2431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6916:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"functionReturnParameters": 2413,
												"id": 2432,
												"nodeType": "Return",
												"src": "6909:21:7"
											}
										]
									},
									"documentation": {
										"id": 2407,
										"nodeType": "StructuredDocumentation",
										"src": "6434:280:7",
										"text": " @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"
									},
									"id": 2434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint168",
									"nameLocation": "6728:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2409,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6746:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2434,
												"src": "6738:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6738:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6737:15:7"
									},
									"returnParameters": {
										"id": 2413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2434,
												"src": "6776:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint168",
													"typeString": "uint168"
												},
												"typeName": {
													"id": 2411,
													"name": "uint168",
													"nodeType": "ElementaryTypeName",
													"src": "6776:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6775:9:7"
									},
									"scope": 3864,
									"src": "6719:218:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2461,
										"nodeType": "Block",
										"src": "7294:152:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2442,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2437,
														"src": "7308:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7321:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 2444,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "7321:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	}
																],
																"id": 2443,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7316:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7316:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint160",
																"typeString": "type(uint160)"
															}
														},
														"id": 2447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7330:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7316:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "7308:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2455,
												"nodeType": "IfStatement",
												"src": "7304:105:7",
												"trueBody": {
													"id": 2454,
													"nodeType": "Block",
													"src": "7335:74:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313630",
																		"id": 2450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7387:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	{
																		"id": 2451,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2437,
																		"src": "7392:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2449,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "7356:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7356:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2453,
															"nodeType": "RevertStatement",
															"src": "7349:49:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2458,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2437,
															"src": "7433:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2457,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7425:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 2456,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "7425:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 2459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7425:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"functionReturnParameters": 2441,
												"id": 2460,
												"nodeType": "Return",
												"src": "7418:21:7"
											}
										]
									},
									"documentation": {
										"id": 2435,
										"nodeType": "StructuredDocumentation",
										"src": "6943:280:7",
										"text": " @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"
									},
									"id": 2462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint160",
									"nameLocation": "7237:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2437,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7255:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2462,
												"src": "7247:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7247:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7246:15:7"
									},
									"returnParameters": {
										"id": 2441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2440,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2462,
												"src": "7285:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2439,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "7285:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7284:9:7"
									},
									"scope": 3864,
									"src": "7228:218:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2489,
										"nodeType": "Block",
										"src": "7803:152:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2470,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2465,
														"src": "7817:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7830:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint152_$",
																		"typeString": "type(uint152)"
																	},
																	"typeName": {
																		"id": 2472,
																		"name": "uint152",
																		"nodeType": "ElementaryTypeName",
																		"src": "7830:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint152_$",
																		"typeString": "type(uint152)"
																	}
																],
																"id": 2471,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7825:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7825:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint152",
																"typeString": "type(uint152)"
															}
														},
														"id": 2475,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7839:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7825:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint152",
															"typeString": "uint152"
														}
													},
													"src": "7817:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2483,
												"nodeType": "IfStatement",
												"src": "7813:105:7",
												"trueBody": {
													"id": 2482,
													"nodeType": "Block",
													"src": "7844:74:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313532",
																		"id": 2478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7896:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		"value": "152"
																	},
																	{
																		"id": 2479,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2465,
																		"src": "7901:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2477,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "7865:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7865:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2481,
															"nodeType": "RevertStatement",
															"src": "7858:49:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2486,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2465,
															"src": "7942:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2485,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7934:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint152_$",
															"typeString": "type(uint152)"
														},
														"typeName": {
															"id": 2484,
															"name": "uint152",
															"nodeType": "ElementaryTypeName",
															"src": "7934:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 2487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7934:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"functionReturnParameters": 2469,
												"id": 2488,
												"nodeType": "Return",
												"src": "7927:21:7"
											}
										]
									},
									"documentation": {
										"id": 2463,
										"nodeType": "StructuredDocumentation",
										"src": "7452:280:7",
										"text": " @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"
									},
									"id": 2490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint152",
									"nameLocation": "7746:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2465,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7764:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2490,
												"src": "7756:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7756:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7755:15:7"
									},
									"returnParameters": {
										"id": 2469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2490,
												"src": "7794:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint152",
													"typeString": "uint152"
												},
												"typeName": {
													"id": 2467,
													"name": "uint152",
													"nodeType": "ElementaryTypeName",
													"src": "7794:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7793:9:7"
									},
									"scope": 3864,
									"src": "7737:218:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2517,
										"nodeType": "Block",
										"src": "8312:152:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2498,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2493,
														"src": "8326:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8339:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint144_$",
																		"typeString": "type(uint144)"
																	},
																	"typeName": {
																		"id": 2500,
																		"name": "uint144",
																		"nodeType": "ElementaryTypeName",
																		"src": "8339:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint144_$",
																		"typeString": "type(uint144)"
																	}
																],
																"id": 2499,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8334:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8334:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint144",
																"typeString": "type(uint144)"
															}
														},
														"id": 2503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8348:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8334:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint144",
															"typeString": "uint144"
														}
													},
													"src": "8326:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2511,
												"nodeType": "IfStatement",
												"src": "8322:105:7",
												"trueBody": {
													"id": 2510,
													"nodeType": "Block",
													"src": "8353:74:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313434",
																		"id": 2506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8405:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		"value": "144"
																	},
																	{
																		"id": 2507,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2493,
																		"src": "8410:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2505,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "8374:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8374:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2509,
															"nodeType": "RevertStatement",
															"src": "8367:49:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2514,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2493,
															"src": "8451:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2513,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8443:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint144_$",
															"typeString": "type(uint144)"
														},
														"typeName": {
															"id": 2512,
															"name": "uint144",
															"nodeType": "ElementaryTypeName",
															"src": "8443:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 2515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8443:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"functionReturnParameters": 2497,
												"id": 2516,
												"nodeType": "Return",
												"src": "8436:21:7"
											}
										]
									},
									"documentation": {
										"id": 2491,
										"nodeType": "StructuredDocumentation",
										"src": "7961:280:7",
										"text": " @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"
									},
									"id": 2518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint144",
									"nameLocation": "8255:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2493,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8273:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "8265:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8265:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8264:15:7"
									},
									"returnParameters": {
										"id": 2497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "8303:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint144",
													"typeString": "uint144"
												},
												"typeName": {
													"id": 2495,
													"name": "uint144",
													"nodeType": "ElementaryTypeName",
													"src": "8303:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8302:9:7"
									},
									"scope": 3864,
									"src": "8246:218:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2545,
										"nodeType": "Block",
										"src": "8821:152:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2526,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2521,
														"src": "8835:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8848:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint136_$",
																		"typeString": "type(uint136)"
																	},
																	"typeName": {
																		"id": 2528,
																		"name": "uint136",
																		"nodeType": "ElementaryTypeName",
																		"src": "8848:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint136_$",
																		"typeString": "type(uint136)"
																	}
																],
																"id": 2527,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8843:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8843:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint136",
																"typeString": "type(uint136)"
															}
														},
														"id": 2531,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8857:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8843:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint136",
															"typeString": "uint136"
														}
													},
													"src": "8835:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2539,
												"nodeType": "IfStatement",
												"src": "8831:105:7",
												"trueBody": {
													"id": 2538,
													"nodeType": "Block",
													"src": "8862:74:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313336",
																		"id": 2534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8914:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		"value": "136"
																	},
																	{
																		"id": 2535,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2521,
																		"src": "8919:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2533,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "8883:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8883:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2537,
															"nodeType": "RevertStatement",
															"src": "8876:49:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2542,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2521,
															"src": "8960:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2541,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8952:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint136_$",
															"typeString": "type(uint136)"
														},
														"typeName": {
															"id": 2540,
															"name": "uint136",
															"nodeType": "ElementaryTypeName",
															"src": "8952:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 2543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8952:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"functionReturnParameters": 2525,
												"id": 2544,
												"nodeType": "Return",
												"src": "8945:21:7"
											}
										]
									},
									"documentation": {
										"id": 2519,
										"nodeType": "StructuredDocumentation",
										"src": "8470:280:7",
										"text": " @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"
									},
									"id": 2546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint136",
									"nameLocation": "8764:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2521,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8782:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2546,
												"src": "8774:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8774:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8773:15:7"
									},
									"returnParameters": {
										"id": 2525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2524,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2546,
												"src": "8812:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint136",
													"typeString": "uint136"
												},
												"typeName": {
													"id": 2523,
													"name": "uint136",
													"nodeType": "ElementaryTypeName",
													"src": "8812:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8811:9:7"
									},
									"scope": 3864,
									"src": "8755:218:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2573,
										"nodeType": "Block",
										"src": "9330:152:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2554,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2549,
														"src": "9344:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9357:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	},
																	"typeName": {
																		"id": 2556,
																		"name": "uint128",
																		"nodeType": "ElementaryTypeName",
																		"src": "9357:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	}
																],
																"id": 2555,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9352:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9352:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint128",
																"typeString": "type(uint128)"
															}
														},
														"id": 2559,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9366:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9352:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "9344:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2567,
												"nodeType": "IfStatement",
												"src": "9340:105:7",
												"trueBody": {
													"id": 2566,
													"nodeType": "Block",
													"src": "9371:74:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313238",
																		"id": 2562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9423:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	{
																		"id": 2563,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2549,
																		"src": "9428:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2561,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "9392:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9392:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2565,
															"nodeType": "RevertStatement",
															"src": "9385:49:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2570,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2549,
															"src": "9469:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9461:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														},
														"typeName": {
															"id": 2568,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "9461:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 2571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9461:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 2553,
												"id": 2572,
												"nodeType": "Return",
												"src": "9454:21:7"
											}
										]
									},
									"documentation": {
										"id": 2547,
										"nodeType": "StructuredDocumentation",
										"src": "8979:280:7",
										"text": " @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 2574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint128",
									"nameLocation": "9273:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9291:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2574,
												"src": "9283:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9283:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9282:15:7"
									},
									"returnParameters": {
										"id": 2553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2552,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2574,
												"src": "9321:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2551,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "9321:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9320:9:7"
									},
									"scope": 3864,
									"src": "9264:218:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2601,
										"nodeType": "Block",
										"src": "9839:152:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2582,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2577,
														"src": "9853:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9866:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint120_$",
																		"typeString": "type(uint120)"
																	},
																	"typeName": {
																		"id": 2584,
																		"name": "uint120",
																		"nodeType": "ElementaryTypeName",
																		"src": "9866:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint120_$",
																		"typeString": "type(uint120)"
																	}
																],
																"id": 2583,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9861:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9861:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint120",
																"typeString": "type(uint120)"
															}
														},
														"id": 2587,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9875:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9861:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint120",
															"typeString": "uint120"
														}
													},
													"src": "9853:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2595,
												"nodeType": "IfStatement",
												"src": "9849:105:7",
												"trueBody": {
													"id": 2594,
													"nodeType": "Block",
													"src": "9880:74:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313230",
																		"id": 2590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9932:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		"value": "120"
																	},
																	{
																		"id": 2591,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2577,
																		"src": "9937:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2589,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "9901:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9901:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2593,
															"nodeType": "RevertStatement",
															"src": "9894:49:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2598,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2577,
															"src": "9978:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2597,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9970:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint120_$",
															"typeString": "type(uint120)"
														},
														"typeName": {
															"id": 2596,
															"name": "uint120",
															"nodeType": "ElementaryTypeName",
															"src": "9970:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 2599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9970:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"functionReturnParameters": 2581,
												"id": 2600,
												"nodeType": "Return",
												"src": "9963:21:7"
											}
										]
									},
									"documentation": {
										"id": 2575,
										"nodeType": "StructuredDocumentation",
										"src": "9488:280:7",
										"text": " @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"
									},
									"id": 2602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint120",
									"nameLocation": "9782:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2577,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9800:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "9792:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9792:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9791:15:7"
									},
									"returnParameters": {
										"id": 2581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "9830:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint120",
													"typeString": "uint120"
												},
												"typeName": {
													"id": 2579,
													"name": "uint120",
													"nodeType": "ElementaryTypeName",
													"src": "9830:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9829:9:7"
									},
									"scope": 3864,
									"src": "9773:218:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2629,
										"nodeType": "Block",
										"src": "10348:152:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2610,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2605,
														"src": "10362:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10375:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	},
																	"typeName": {
																		"id": 2612,
																		"name": "uint112",
																		"nodeType": "ElementaryTypeName",
																		"src": "10375:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	}
																],
																"id": 2611,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10370:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10370:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint112",
																"typeString": "type(uint112)"
															}
														},
														"id": 2615,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10384:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10370:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "10362:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2623,
												"nodeType": "IfStatement",
												"src": "10358:105:7",
												"trueBody": {
													"id": 2622,
													"nodeType": "Block",
													"src": "10389:74:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313132",
																		"id": 2618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10441:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	{
																		"id": 2619,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2605,
																		"src": "10446:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2617,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "10410:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10410:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2621,
															"nodeType": "RevertStatement",
															"src": "10403:49:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2626,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2605,
															"src": "10487:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2625,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10479:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint112_$",
															"typeString": "type(uint112)"
														},
														"typeName": {
															"id": 2624,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "10479:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 2627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10479:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"functionReturnParameters": 2609,
												"id": 2628,
												"nodeType": "Return",
												"src": "10472:21:7"
											}
										]
									},
									"documentation": {
										"id": 2603,
										"nodeType": "StructuredDocumentation",
										"src": "9997:280:7",
										"text": " @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"
									},
									"id": 2630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint112",
									"nameLocation": "10291:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2605,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10309:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2630,
												"src": "10301:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10301:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10300:15:7"
									},
									"returnParameters": {
										"id": 2609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2630,
												"src": "10339:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2607,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "10339:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10338:9:7"
									},
									"scope": 3864,
									"src": "10282:218:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2657,
										"nodeType": "Block",
										"src": "10857:152:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2638,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2633,
														"src": "10871:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10884:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint104_$",
																		"typeString": "type(uint104)"
																	},
																	"typeName": {
																		"id": 2640,
																		"name": "uint104",
																		"nodeType": "ElementaryTypeName",
																		"src": "10884:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint104_$",
																		"typeString": "type(uint104)"
																	}
																],
																"id": 2639,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10879:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2642,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10879:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint104",
																"typeString": "type(uint104)"
															}
														},
														"id": 2643,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10893:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10879:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint104",
															"typeString": "uint104"
														}
													},
													"src": "10871:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2651,
												"nodeType": "IfStatement",
												"src": "10867:105:7",
												"trueBody": {
													"id": 2650,
													"nodeType": "Block",
													"src": "10898:74:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313034",
																		"id": 2646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10950:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		"value": "104"
																	},
																	{
																		"id": 2647,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2633,
																		"src": "10955:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2645,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "10919:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10919:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2649,
															"nodeType": "RevertStatement",
															"src": "10912:49:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2654,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2633,
															"src": "10996:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2653,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10988:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint104_$",
															"typeString": "type(uint104)"
														},
														"typeName": {
															"id": 2652,
															"name": "uint104",
															"nodeType": "ElementaryTypeName",
															"src": "10988:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 2655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10988:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"functionReturnParameters": 2637,
												"id": 2656,
												"nodeType": "Return",
												"src": "10981:21:7"
											}
										]
									},
									"documentation": {
										"id": 2631,
										"nodeType": "StructuredDocumentation",
										"src": "10506:280:7",
										"text": " @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"
									},
									"id": 2658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint104",
									"nameLocation": "10800:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2633,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10818:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2658,
												"src": "10810:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10810:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10809:15:7"
									},
									"returnParameters": {
										"id": 2637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2658,
												"src": "10848:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint104",
													"typeString": "uint104"
												},
												"typeName": {
													"id": 2635,
													"name": "uint104",
													"nodeType": "ElementaryTypeName",
													"src": "10848:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10847:9:7"
									},
									"scope": 3864,
									"src": "10791:218:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2685,
										"nodeType": "Block",
										"src": "11360:149:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2666,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2661,
														"src": "11374:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2669,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11387:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	},
																	"typeName": {
																		"id": 2668,
																		"name": "uint96",
																		"nodeType": "ElementaryTypeName",
																		"src": "11387:6:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	}
																],
																"id": 2667,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11382:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2670,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11382:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint96",
																"typeString": "type(uint96)"
															}
														},
														"id": 2671,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11395:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11382:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "11374:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2679,
												"nodeType": "IfStatement",
												"src": "11370:103:7",
												"trueBody": {
													"id": 2678,
													"nodeType": "Block",
													"src": "11400:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 2674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11452:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	{
																		"id": 2675,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2661,
																		"src": "11456:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2673,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "11421:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11421:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2677,
															"nodeType": "RevertStatement",
															"src": "11414:48:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2682,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2661,
															"src": "11496:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2681,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11489:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": {
															"id": 2680,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "11489:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 2683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11489:13:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 2665,
												"id": 2684,
												"nodeType": "Return",
												"src": "11482:20:7"
											}
										]
									},
									"documentation": {
										"id": 2659,
										"nodeType": "StructuredDocumentation",
										"src": "11015:276:7",
										"text": " @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 2686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint96",
									"nameLocation": "11305:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2661,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11322:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "11314:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11314:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11313:15:7"
									},
									"returnParameters": {
										"id": 2665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2664,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "11352:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 2663,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "11352:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11351:8:7"
									},
									"scope": 3864,
									"src": "11296:213:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2713,
										"nodeType": "Block",
										"src": "11860:149:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2694,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2689,
														"src": "11874:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11887:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint88_$",
																		"typeString": "type(uint88)"
																	},
																	"typeName": {
																		"id": 2696,
																		"name": "uint88",
																		"nodeType": "ElementaryTypeName",
																		"src": "11887:6:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint88_$",
																		"typeString": "type(uint88)"
																	}
																],
																"id": 2695,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11882:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11882:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint88",
																"typeString": "type(uint88)"
															}
														},
														"id": 2699,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11895:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11882:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint88",
															"typeString": "uint88"
														}
													},
													"src": "11874:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2707,
												"nodeType": "IfStatement",
												"src": "11870:103:7",
												"trueBody": {
													"id": 2706,
													"nodeType": "Block",
													"src": "11900:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3838",
																		"id": 2702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11952:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		"value": "88"
																	},
																	{
																		"id": 2703,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2689,
																		"src": "11956:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2701,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "11921:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11921:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2705,
															"nodeType": "RevertStatement",
															"src": "11914:48:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2710,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2689,
															"src": "11996:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2709,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11989:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint88_$",
															"typeString": "type(uint88)"
														},
														"typeName": {
															"id": 2708,
															"name": "uint88",
															"nodeType": "ElementaryTypeName",
															"src": "11989:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 2711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11989:13:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"functionReturnParameters": 2693,
												"id": 2712,
												"nodeType": "Return",
												"src": "11982:20:7"
											}
										]
									},
									"documentation": {
										"id": 2687,
										"nodeType": "StructuredDocumentation",
										"src": "11515:276:7",
										"text": " @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"
									},
									"id": 2714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint88",
									"nameLocation": "11805:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2689,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11822:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2714,
												"src": "11814:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11814:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11813:15:7"
									},
									"returnParameters": {
										"id": 2693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2692,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2714,
												"src": "11852:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint88",
													"typeString": "uint88"
												},
												"typeName": {
													"id": 2691,
													"name": "uint88",
													"nodeType": "ElementaryTypeName",
													"src": "11852:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11851:8:7"
									},
									"scope": 3864,
									"src": "11796:213:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2741,
										"nodeType": "Block",
										"src": "12360:149:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2722,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2717,
														"src": "12374:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12387:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	},
																	"typeName": {
																		"id": 2724,
																		"name": "uint80",
																		"nodeType": "ElementaryTypeName",
																		"src": "12387:6:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	}
																],
																"id": 2723,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12382:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2726,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12382:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint80",
																"typeString": "type(uint80)"
															}
														},
														"id": 2727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12395:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12382:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint80",
															"typeString": "uint80"
														}
													},
													"src": "12374:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2735,
												"nodeType": "IfStatement",
												"src": "12370:103:7",
												"trueBody": {
													"id": 2734,
													"nodeType": "Block",
													"src": "12400:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3830",
																		"id": 2730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12452:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	{
																		"id": 2731,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2717,
																		"src": "12456:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2729,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "12421:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12421:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2733,
															"nodeType": "RevertStatement",
															"src": "12414:48:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2738,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2717,
															"src": "12496:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2737,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12489:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint80_$",
															"typeString": "type(uint80)"
														},
														"typeName": {
															"id": 2736,
															"name": "uint80",
															"nodeType": "ElementaryTypeName",
															"src": "12489:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 2739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12489:13:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"functionReturnParameters": 2721,
												"id": 2740,
												"nodeType": "Return",
												"src": "12482:20:7"
											}
										]
									},
									"documentation": {
										"id": 2715,
										"nodeType": "StructuredDocumentation",
										"src": "12015:276:7",
										"text": " @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"
									},
									"id": 2742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint80",
									"nameLocation": "12305:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2717,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12322:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2742,
												"src": "12314:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12314:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12313:15:7"
									},
									"returnParameters": {
										"id": 2721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2742,
												"src": "12352:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 2719,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "12352:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12351:8:7"
									},
									"scope": 3864,
									"src": "12296:213:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2769,
										"nodeType": "Block",
										"src": "12860:149:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2750,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2745,
														"src": "12874:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12887:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint72_$",
																		"typeString": "type(uint72)"
																	},
																	"typeName": {
																		"id": 2752,
																		"name": "uint72",
																		"nodeType": "ElementaryTypeName",
																		"src": "12887:6:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint72_$",
																		"typeString": "type(uint72)"
																	}
																],
																"id": 2751,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12882:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2754,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12882:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint72",
																"typeString": "type(uint72)"
															}
														},
														"id": 2755,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12895:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12882:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint72",
															"typeString": "uint72"
														}
													},
													"src": "12874:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2763,
												"nodeType": "IfStatement",
												"src": "12870:103:7",
												"trueBody": {
													"id": 2762,
													"nodeType": "Block",
													"src": "12900:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3732",
																		"id": 2758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12952:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		"value": "72"
																	},
																	{
																		"id": 2759,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2745,
																		"src": "12956:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2757,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "12921:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12921:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2761,
															"nodeType": "RevertStatement",
															"src": "12914:48:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2766,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2745,
															"src": "12996:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2765,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12989:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint72_$",
															"typeString": "type(uint72)"
														},
														"typeName": {
															"id": 2764,
															"name": "uint72",
															"nodeType": "ElementaryTypeName",
															"src": "12989:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 2767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12989:13:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"functionReturnParameters": 2749,
												"id": 2768,
												"nodeType": "Return",
												"src": "12982:20:7"
											}
										]
									},
									"documentation": {
										"id": 2743,
										"nodeType": "StructuredDocumentation",
										"src": "12515:276:7",
										"text": " @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"
									},
									"id": 2770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint72",
									"nameLocation": "12805:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2745,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12822:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2770,
												"src": "12814:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12814:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12813:15:7"
									},
									"returnParameters": {
										"id": 2749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2748,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2770,
												"src": "12852:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint72",
													"typeString": "uint72"
												},
												"typeName": {
													"id": 2747,
													"name": "uint72",
													"nodeType": "ElementaryTypeName",
													"src": "12852:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12851:8:7"
									},
									"scope": 3864,
									"src": "12796:213:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2797,
										"nodeType": "Block",
										"src": "13360:149:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2778,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2773,
														"src": "13374:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13387:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 2780,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "13387:6:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 2779,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13382:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2782,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13382:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 2783,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13395:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13382:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "13374:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2791,
												"nodeType": "IfStatement",
												"src": "13370:103:7",
												"trueBody": {
													"id": 2790,
													"nodeType": "Block",
													"src": "13400:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3634",
																		"id": 2786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13452:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	{
																		"id": 2787,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2773,
																		"src": "13456:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2785,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "13421:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13421:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2789,
															"nodeType": "RevertStatement",
															"src": "13414:48:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2794,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2773,
															"src": "13496:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2793,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13489:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 2792,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "13489:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 2795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13489:13:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 2777,
												"id": 2796,
												"nodeType": "Return",
												"src": "13482:20:7"
											}
										]
									},
									"documentation": {
										"id": 2771,
										"nodeType": "StructuredDocumentation",
										"src": "13015:276:7",
										"text": " @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 2798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint64",
									"nameLocation": "13305:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2773,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13322:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2798,
												"src": "13314:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13314:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13313:15:7"
									},
									"returnParameters": {
										"id": 2777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2776,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2798,
												"src": "13352:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2775,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "13352:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13351:8:7"
									},
									"scope": 3864,
									"src": "13296:213:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2825,
										"nodeType": "Block",
										"src": "13860:149:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2806,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2801,
														"src": "13874:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13887:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint56_$",
																		"typeString": "type(uint56)"
																	},
																	"typeName": {
																		"id": 2808,
																		"name": "uint56",
																		"nodeType": "ElementaryTypeName",
																		"src": "13887:6:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint56_$",
																		"typeString": "type(uint56)"
																	}
																],
																"id": 2807,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13882:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2810,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13882:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint56",
																"typeString": "type(uint56)"
															}
														},
														"id": 2811,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13895:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13882:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint56",
															"typeString": "uint56"
														}
													},
													"src": "13874:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2819,
												"nodeType": "IfStatement",
												"src": "13870:103:7",
												"trueBody": {
													"id": 2818,
													"nodeType": "Block",
													"src": "13900:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3536",
																		"id": 2814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13952:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		"value": "56"
																	},
																	{
																		"id": 2815,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2801,
																		"src": "13956:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2813,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "13921:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2816,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13921:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2817,
															"nodeType": "RevertStatement",
															"src": "13914:48:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2822,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2801,
															"src": "13996:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2821,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13989:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint56_$",
															"typeString": "type(uint56)"
														},
														"typeName": {
															"id": 2820,
															"name": "uint56",
															"nodeType": "ElementaryTypeName",
															"src": "13989:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 2823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13989:13:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"functionReturnParameters": 2805,
												"id": 2824,
												"nodeType": "Return",
												"src": "13982:20:7"
											}
										]
									},
									"documentation": {
										"id": 2799,
										"nodeType": "StructuredDocumentation",
										"src": "13515:276:7",
										"text": " @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"
									},
									"id": 2826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint56",
									"nameLocation": "13805:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2801,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13822:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2826,
												"src": "13814:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13814:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13813:15:7"
									},
									"returnParameters": {
										"id": 2805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2804,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2826,
												"src": "13852:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint56",
													"typeString": "uint56"
												},
												"typeName": {
													"id": 2803,
													"name": "uint56",
													"nodeType": "ElementaryTypeName",
													"src": "13852:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13851:8:7"
									},
									"scope": 3864,
									"src": "13796:213:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2853,
										"nodeType": "Block",
										"src": "14360:149:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2834,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2829,
														"src": "14374:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14387:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	},
																	"typeName": {
																		"id": 2836,
																		"name": "uint48",
																		"nodeType": "ElementaryTypeName",
																		"src": "14387:6:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	}
																],
																"id": 2835,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14382:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2838,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14382:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint48",
																"typeString": "type(uint48)"
															}
														},
														"id": 2839,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14395:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14382:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"src": "14374:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2847,
												"nodeType": "IfStatement",
												"src": "14370:103:7",
												"trueBody": {
													"id": 2846,
													"nodeType": "Block",
													"src": "14400:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3438",
																		"id": 2842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14452:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	{
																		"id": 2843,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2829,
																		"src": "14456:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2841,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "14421:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14421:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2845,
															"nodeType": "RevertStatement",
															"src": "14414:48:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2850,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2829,
															"src": "14496:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2849,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14489:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint48_$",
															"typeString": "type(uint48)"
														},
														"typeName": {
															"id": 2848,
															"name": "uint48",
															"nodeType": "ElementaryTypeName",
															"src": "14489:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 2851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14489:13:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"functionReturnParameters": 2833,
												"id": 2852,
												"nodeType": "Return",
												"src": "14482:20:7"
											}
										]
									},
									"documentation": {
										"id": 2827,
										"nodeType": "StructuredDocumentation",
										"src": "14015:276:7",
										"text": " @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"
									},
									"id": 2854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint48",
									"nameLocation": "14305:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2829,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14322:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2854,
												"src": "14314:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14314:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14313:15:7"
									},
									"returnParameters": {
										"id": 2833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2854,
												"src": "14352:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 2831,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "14352:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14351:8:7"
									},
									"scope": 3864,
									"src": "14296:213:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2881,
										"nodeType": "Block",
										"src": "14860:149:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2862,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2857,
														"src": "14874:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14887:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint40_$",
																		"typeString": "type(uint40)"
																	},
																	"typeName": {
																		"id": 2864,
																		"name": "uint40",
																		"nodeType": "ElementaryTypeName",
																		"src": "14887:6:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint40_$",
																		"typeString": "type(uint40)"
																	}
																],
																"id": 2863,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14882:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2866,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14882:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint40",
																"typeString": "type(uint40)"
															}
														},
														"id": 2867,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14895:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14882:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint40",
															"typeString": "uint40"
														}
													},
													"src": "14874:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2875,
												"nodeType": "IfStatement",
												"src": "14870:103:7",
												"trueBody": {
													"id": 2874,
													"nodeType": "Block",
													"src": "14900:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3430",
																		"id": 2870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14952:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	{
																		"id": 2871,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2857,
																		"src": "14956:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2869,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "14921:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14921:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2873,
															"nodeType": "RevertStatement",
															"src": "14914:48:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2878,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2857,
															"src": "14996:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2877,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14989:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint40_$",
															"typeString": "type(uint40)"
														},
														"typeName": {
															"id": 2876,
															"name": "uint40",
															"nodeType": "ElementaryTypeName",
															"src": "14989:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 2879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14989:13:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"functionReturnParameters": 2861,
												"id": 2880,
												"nodeType": "Return",
												"src": "14982:20:7"
											}
										]
									},
									"documentation": {
										"id": 2855,
										"nodeType": "StructuredDocumentation",
										"src": "14515:276:7",
										"text": " @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"
									},
									"id": 2882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint40",
									"nameLocation": "14805:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2857,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14822:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2882,
												"src": "14814:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14814:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14813:15:7"
									},
									"returnParameters": {
										"id": 2861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2882,
												"src": "14852:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												},
												"typeName": {
													"id": 2859,
													"name": "uint40",
													"nodeType": "ElementaryTypeName",
													"src": "14852:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14851:8:7"
									},
									"scope": 3864,
									"src": "14796:213:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2909,
										"nodeType": "Block",
										"src": "15360:149:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2890,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2885,
														"src": "15374:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15387:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	},
																	"typeName": {
																		"id": 2892,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "15387:6:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	}
																],
																"id": 2891,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15382:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2894,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15382:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint32",
																"typeString": "type(uint32)"
															}
														},
														"id": 2895,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15395:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15382:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "15374:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2903,
												"nodeType": "IfStatement",
												"src": "15370:103:7",
												"trueBody": {
													"id": 2902,
													"nodeType": "Block",
													"src": "15400:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3332",
																		"id": 2898,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15452:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	{
																		"id": 2899,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2885,
																		"src": "15456:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2897,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "15421:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2900,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15421:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2901,
															"nodeType": "RevertStatement",
															"src": "15414:48:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2906,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2885,
															"src": "15496:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2905,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15489:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 2904,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "15489:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 2907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15489:13:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 2889,
												"id": 2908,
												"nodeType": "Return",
												"src": "15482:20:7"
											}
										]
									},
									"documentation": {
										"id": 2883,
										"nodeType": "StructuredDocumentation",
										"src": "15015:276:7",
										"text": " @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 2910,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint32",
									"nameLocation": "15305:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2885,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15322:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2910,
												"src": "15314:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15314:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15313:15:7"
									},
									"returnParameters": {
										"id": 2889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2910,
												"src": "15352:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2887,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "15352:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15351:8:7"
									},
									"scope": 3864,
									"src": "15296:213:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2937,
										"nodeType": "Block",
										"src": "15860:149:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2918,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2913,
														"src": "15874:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15887:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	},
																	"typeName": {
																		"id": 2920,
																		"name": "uint24",
																		"nodeType": "ElementaryTypeName",
																		"src": "15887:6:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	}
																],
																"id": 2919,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15882:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2922,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15882:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint24",
																"typeString": "type(uint24)"
															}
														},
														"id": 2923,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15895:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15882:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "15874:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2931,
												"nodeType": "IfStatement",
												"src": "15870:103:7",
												"trueBody": {
													"id": 2930,
													"nodeType": "Block",
													"src": "15900:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 2926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15952:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	{
																		"id": 2927,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2913,
																		"src": "15956:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2925,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "15921:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2928,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15921:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2929,
															"nodeType": "RevertStatement",
															"src": "15914:48:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2934,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2913,
															"src": "15996:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2933,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15989:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 2932,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "15989:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 2935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15989:13:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"functionReturnParameters": 2917,
												"id": 2936,
												"nodeType": "Return",
												"src": "15982:20:7"
											}
										]
									},
									"documentation": {
										"id": 2911,
										"nodeType": "StructuredDocumentation",
										"src": "15515:276:7",
										"text": " @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"
									},
									"id": 2938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint24",
									"nameLocation": "15805:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2913,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15822:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2938,
												"src": "15814:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15814:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15813:15:7"
									},
									"returnParameters": {
										"id": 2917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2916,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2938,
												"src": "15852:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2915,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "15852:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15851:8:7"
									},
									"scope": 3864,
									"src": "15796:213:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2965,
										"nodeType": "Block",
										"src": "16360:149:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2946,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2941,
														"src": "16374:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16387:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	},
																	"typeName": {
																		"id": 2948,
																		"name": "uint16",
																		"nodeType": "ElementaryTypeName",
																		"src": "16387:6:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	}
																],
																"id": 2947,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16382:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16382:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint16",
																"typeString": "type(uint16)"
															}
														},
														"id": 2951,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16395:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16382:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "16374:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2959,
												"nodeType": "IfStatement",
												"src": "16370:103:7",
												"trueBody": {
													"id": 2958,
													"nodeType": "Block",
													"src": "16400:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3136",
																		"id": 2954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16452:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	{
																		"id": 2955,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2941,
																		"src": "16456:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2953,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "16421:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16421:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2957,
															"nodeType": "RevertStatement",
															"src": "16414:48:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2962,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2941,
															"src": "16496:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2961,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16489:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint16_$",
															"typeString": "type(uint16)"
														},
														"typeName": {
															"id": 2960,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "16489:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 2963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16489:13:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 2945,
												"id": 2964,
												"nodeType": "Return",
												"src": "16482:20:7"
											}
										]
									},
									"documentation": {
										"id": 2939,
										"nodeType": "StructuredDocumentation",
										"src": "16015:276:7",
										"text": " @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 2966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint16",
									"nameLocation": "16305:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2941,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16322:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2966,
												"src": "16314:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16314:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16313:15:7"
									},
									"returnParameters": {
										"id": 2945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2944,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2966,
												"src": "16352:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2943,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "16352:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16351:8:7"
									},
									"scope": 3864,
									"src": "16296:213:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2993,
										"nodeType": "Block",
										"src": "16854:146:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2974,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2969,
														"src": "16868:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16881:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 2976,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "16881:5:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 2975,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16876:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2978,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16876:11:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 2979,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16888:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16876:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "16868:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2987,
												"nodeType": "IfStatement",
												"src": "16864:101:7",
												"trueBody": {
													"id": 2986,
													"nodeType": "Block",
													"src": "16893:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "38",
																		"id": 2982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16945:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	{
																		"id": 2983,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2969,
																		"src": "16948:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2981,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "16914:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16914:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2985,
															"nodeType": "RevertStatement",
															"src": "16907:47:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2990,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2969,
															"src": "16987:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2989,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16981:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 2988,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "16981:5:7",
															"typeDescriptions": {}
														}
													},
													"id": 2991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16981:12:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 2973,
												"id": 2992,
												"nodeType": "Return",
												"src": "16974:19:7"
											}
										]
									},
									"documentation": {
										"id": 2967,
										"nodeType": "StructuredDocumentation",
										"src": "16515:272:7",
										"text": " @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"
									},
									"id": 2994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint8",
									"nameLocation": "16801:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2969,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16817:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2994,
												"src": "16809:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16809:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16808:15:7"
									},
									"returnParameters": {
										"id": 2973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2972,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2994,
												"src": "16847:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2971,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "16847:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16846:7:7"
									},
									"scope": 3864,
									"src": "16792:208:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3016,
										"nodeType": "Block",
										"src": "17236:128:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3002,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2997,
														"src": "17250:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "30",
														"id": 3003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17258:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17250:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3010,
												"nodeType": "IfStatement",
												"src": "17246:81:7",
												"trueBody": {
													"id": 3009,
													"nodeType": "Block",
													"src": "17261:66:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3006,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2997,
																		"src": "17310:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3005,
																	"name": "SafeCastOverflowedIntToUint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2114,
																	"src": "17282:27:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_int256_$returns$_t_error_$",
																		"typeString": "function (int256) pure returns (error)"
																	}
																},
																"id": 3007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17282:34:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3008,
															"nodeType": "RevertStatement",
															"src": "17275:41:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3013,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2997,
															"src": "17351:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 3012,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17343:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 3011,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17343:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 3014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17343:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3001,
												"id": 3015,
												"nodeType": "Return",
												"src": "17336:21:7"
											}
										]
									},
									"documentation": {
										"id": 2995,
										"nodeType": "StructuredDocumentation",
										"src": "17006:160:7",
										"text": " @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."
									},
									"id": 3017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint256",
									"nameLocation": "17180:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2997,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17197:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 3017,
												"src": "17190:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2996,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17190:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17189:14:7"
									},
									"returnParameters": {
										"id": 3001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3000,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3017,
												"src": "17227:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17227:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17226:9:7"
									},
									"scope": 3864,
									"src": "17171:193:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3042,
										"nodeType": "Block",
										"src": "17761:150:7",
										"statements": [
											{
												"expression": {
													"id": 3030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3025,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3023,
														"src": "17771:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3028,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3020,
																"src": "17791:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3027,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17784:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int248_$",
																"typeString": "type(int248)"
															},
															"typeName": {
																"id": 3026,
																"name": "int248",
																"nodeType": "ElementaryTypeName",
																"src": "17784:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 3029,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17784:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"src": "17771:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int248",
														"typeString": "int248"
													}
												},
												"id": 3031,
												"nodeType": "ExpressionStatement",
												"src": "17771:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3032,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3023,
														"src": "17811:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3033,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3020,
														"src": "17825:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "17811:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3041,
												"nodeType": "IfStatement",
												"src": "17807:98:7",
												"trueBody": {
													"id": 3040,
													"nodeType": "Block",
													"src": "17832:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323438",
																		"id": 3036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17883:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		"value": "248"
																	},
																	{
																		"id": 3037,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3020,
																		"src": "17888:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3035,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "17853:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17853:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3039,
															"nodeType": "RevertStatement",
															"src": "17846:48:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3018,
										"nodeType": "StructuredDocumentation",
										"src": "17370:312:7",
										"text": " @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"
									},
									"id": 3043,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt248",
									"nameLocation": "17696:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3020,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17712:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 3043,
												"src": "17705:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3019,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17705:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17704:14:7"
									},
									"returnParameters": {
										"id": 3024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3023,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "17749:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 3043,
												"src": "17742:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int248",
													"typeString": "int248"
												},
												"typeName": {
													"id": 3022,
													"name": "int248",
													"nodeType": "ElementaryTypeName",
													"src": "17742:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int248",
														"typeString": "int248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17741:19:7"
									},
									"scope": 3864,
									"src": "17687:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3068,
										"nodeType": "Block",
										"src": "18308:150:7",
										"statements": [
											{
												"expression": {
													"id": 3056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3051,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3049,
														"src": "18318:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3054,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3046,
																"src": "18338:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3053,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18331:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int240_$",
																"typeString": "type(int240)"
															},
															"typeName": {
																"id": 3052,
																"name": "int240",
																"nodeType": "ElementaryTypeName",
																"src": "18331:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 3055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18331:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"src": "18318:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int240",
														"typeString": "int240"
													}
												},
												"id": 3057,
												"nodeType": "ExpressionStatement",
												"src": "18318:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3058,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3049,
														"src": "18358:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3059,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3046,
														"src": "18372:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18358:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3067,
												"nodeType": "IfStatement",
												"src": "18354:98:7",
												"trueBody": {
													"id": 3066,
													"nodeType": "Block",
													"src": "18379:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323430",
																		"id": 3062,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18430:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		"value": "240"
																	},
																	{
																		"id": 3063,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3046,
																		"src": "18435:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3061,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "18400:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18400:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3065,
															"nodeType": "RevertStatement",
															"src": "18393:48:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3044,
										"nodeType": "StructuredDocumentation",
										"src": "17917:312:7",
										"text": " @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"
									},
									"id": 3069,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt240",
									"nameLocation": "18243:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3046,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18259:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 3069,
												"src": "18252:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3045,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "18252:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18251:14:7"
									},
									"returnParameters": {
										"id": 3050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3049,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "18296:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 3069,
												"src": "18289:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int240",
													"typeString": "int240"
												},
												"typeName": {
													"id": 3048,
													"name": "int240",
													"nodeType": "ElementaryTypeName",
													"src": "18289:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int240",
														"typeString": "int240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18288:19:7"
									},
									"scope": 3864,
									"src": "18234:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3094,
										"nodeType": "Block",
										"src": "18855:150:7",
										"statements": [
											{
												"expression": {
													"id": 3082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3077,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3075,
														"src": "18865:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3080,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3072,
																"src": "18885:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3079,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18878:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int232_$",
																"typeString": "type(int232)"
															},
															"typeName": {
																"id": 3078,
																"name": "int232",
																"nodeType": "ElementaryTypeName",
																"src": "18878:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 3081,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18878:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"src": "18865:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int232",
														"typeString": "int232"
													}
												},
												"id": 3083,
												"nodeType": "ExpressionStatement",
												"src": "18865:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3084,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3075,
														"src": "18905:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3085,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3072,
														"src": "18919:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18905:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3093,
												"nodeType": "IfStatement",
												"src": "18901:98:7",
												"trueBody": {
													"id": 3092,
													"nodeType": "Block",
													"src": "18926:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323332",
																		"id": 3088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18977:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		"value": "232"
																	},
																	{
																		"id": 3089,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3072,
																		"src": "18982:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3087,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "18947:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3090,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18947:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3091,
															"nodeType": "RevertStatement",
															"src": "18940:48:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3070,
										"nodeType": "StructuredDocumentation",
										"src": "18464:312:7",
										"text": " @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"
									},
									"id": 3095,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt232",
									"nameLocation": "18790:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3072,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18806:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 3095,
												"src": "18799:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3071,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "18799:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18798:14:7"
									},
									"returnParameters": {
										"id": 3076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3075,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "18843:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 3095,
												"src": "18836:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int232",
													"typeString": "int232"
												},
												"typeName": {
													"id": 3074,
													"name": "int232",
													"nodeType": "ElementaryTypeName",
													"src": "18836:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int232",
														"typeString": "int232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18835:19:7"
									},
									"scope": 3864,
									"src": "18781:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3120,
										"nodeType": "Block",
										"src": "19402:150:7",
										"statements": [
											{
												"expression": {
													"id": 3108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3103,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3101,
														"src": "19412:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3106,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3098,
																"src": "19432:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19425:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int224_$",
																"typeString": "type(int224)"
															},
															"typeName": {
																"id": 3104,
																"name": "int224",
																"nodeType": "ElementaryTypeName",
																"src": "19425:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 3107,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19425:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"src": "19412:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int224",
														"typeString": "int224"
													}
												},
												"id": 3109,
												"nodeType": "ExpressionStatement",
												"src": "19412:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3110,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3101,
														"src": "19452:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3111,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3098,
														"src": "19466:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "19452:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3119,
												"nodeType": "IfStatement",
												"src": "19448:98:7",
												"trueBody": {
													"id": 3118,
													"nodeType": "Block",
													"src": "19473:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323234",
																		"id": 3114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19524:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "224"
																	},
																	{
																		"id": 3115,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3098,
																		"src": "19529:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3113,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "19494:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19494:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3117,
															"nodeType": "RevertStatement",
															"src": "19487:48:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3096,
										"nodeType": "StructuredDocumentation",
										"src": "19011:312:7",
										"text": " @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 3121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt224",
									"nameLocation": "19337:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3098,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19353:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 3121,
												"src": "19346:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3097,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19346:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19345:14:7"
									},
									"returnParameters": {
										"id": 3102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3101,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "19390:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 3121,
												"src": "19383:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int224",
													"typeString": "int224"
												},
												"typeName": {
													"id": 3100,
													"name": "int224",
													"nodeType": "ElementaryTypeName",
													"src": "19383:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int224",
														"typeString": "int224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19382:19:7"
									},
									"scope": 3864,
									"src": "19328:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3146,
										"nodeType": "Block",
										"src": "19949:150:7",
										"statements": [
											{
												"expression": {
													"id": 3134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3129,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3127,
														"src": "19959:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3132,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3124,
																"src": "19979:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19972:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int216_$",
																"typeString": "type(int216)"
															},
															"typeName": {
																"id": 3130,
																"name": "int216",
																"nodeType": "ElementaryTypeName",
																"src": "19972:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 3133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19972:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"src": "19959:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int216",
														"typeString": "int216"
													}
												},
												"id": 3135,
												"nodeType": "ExpressionStatement",
												"src": "19959:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3136,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3127,
														"src": "19999:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3137,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3124,
														"src": "20013:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "19999:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3145,
												"nodeType": "IfStatement",
												"src": "19995:98:7",
												"trueBody": {
													"id": 3144,
													"nodeType": "Block",
													"src": "20020:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323136",
																		"id": 3140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20071:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		"value": "216"
																	},
																	{
																		"id": 3141,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3124,
																		"src": "20076:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3139,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "20041:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20041:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3143,
															"nodeType": "RevertStatement",
															"src": "20034:48:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3122,
										"nodeType": "StructuredDocumentation",
										"src": "19558:312:7",
										"text": " @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"
									},
									"id": 3147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt216",
									"nameLocation": "19884:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3124,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19900:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 3147,
												"src": "19893:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3123,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19893:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19892:14:7"
									},
									"returnParameters": {
										"id": 3128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3127,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "19937:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 3147,
												"src": "19930:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int216",
													"typeString": "int216"
												},
												"typeName": {
													"id": 3126,
													"name": "int216",
													"nodeType": "ElementaryTypeName",
													"src": "19930:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int216",
														"typeString": "int216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19929:19:7"
									},
									"scope": 3864,
									"src": "19875:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3172,
										"nodeType": "Block",
										"src": "20496:150:7",
										"statements": [
											{
												"expression": {
													"id": 3160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3155,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3153,
														"src": "20506:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3158,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3150,
																"src": "20526:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3157,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20519:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int208_$",
																"typeString": "type(int208)"
															},
															"typeName": {
																"id": 3156,
																"name": "int208",
																"nodeType": "ElementaryTypeName",
																"src": "20519:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 3159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20519:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"src": "20506:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int208",
														"typeString": "int208"
													}
												},
												"id": 3161,
												"nodeType": "ExpressionStatement",
												"src": "20506:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3162,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3153,
														"src": "20546:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3163,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3150,
														"src": "20560:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "20546:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3171,
												"nodeType": "IfStatement",
												"src": "20542:98:7",
												"trueBody": {
													"id": 3170,
													"nodeType": "Block",
													"src": "20567:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323038",
																		"id": 3166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20618:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		"value": "208"
																	},
																	{
																		"id": 3167,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3150,
																		"src": "20623:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3165,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "20588:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20588:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3169,
															"nodeType": "RevertStatement",
															"src": "20581:48:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3148,
										"nodeType": "StructuredDocumentation",
										"src": "20105:312:7",
										"text": " @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"
									},
									"id": 3173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt208",
									"nameLocation": "20431:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3150,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20447:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 3173,
												"src": "20440:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3149,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20440:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20439:14:7"
									},
									"returnParameters": {
										"id": 3154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3153,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "20484:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 3173,
												"src": "20477:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int208",
													"typeString": "int208"
												},
												"typeName": {
													"id": 3152,
													"name": "int208",
													"nodeType": "ElementaryTypeName",
													"src": "20477:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int208",
														"typeString": "int208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20476:19:7"
									},
									"scope": 3864,
									"src": "20422:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3198,
										"nodeType": "Block",
										"src": "21043:150:7",
										"statements": [
											{
												"expression": {
													"id": 3186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3181,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3179,
														"src": "21053:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3184,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3176,
																"src": "21073:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21066:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int200_$",
																"typeString": "type(int200)"
															},
															"typeName": {
																"id": 3182,
																"name": "int200",
																"nodeType": "ElementaryTypeName",
																"src": "21066:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 3185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21066:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"src": "21053:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int200",
														"typeString": "int200"
													}
												},
												"id": 3187,
												"nodeType": "ExpressionStatement",
												"src": "21053:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3188,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3179,
														"src": "21093:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3189,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3176,
														"src": "21107:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "21093:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3197,
												"nodeType": "IfStatement",
												"src": "21089:98:7",
												"trueBody": {
													"id": 3196,
													"nodeType": "Block",
													"src": "21114:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323030",
																		"id": 3192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21165:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"id": 3193,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3176,
																		"src": "21170:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3191,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "21135:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21135:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3195,
															"nodeType": "RevertStatement",
															"src": "21128:48:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3174,
										"nodeType": "StructuredDocumentation",
										"src": "20652:312:7",
										"text": " @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"
									},
									"id": 3199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt200",
									"nameLocation": "20978:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3176,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20994:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 3199,
												"src": "20987:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3175,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20987:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20986:14:7"
									},
									"returnParameters": {
										"id": 3180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3179,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "21031:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 3199,
												"src": "21024:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int200",
													"typeString": "int200"
												},
												"typeName": {
													"id": 3178,
													"name": "int200",
													"nodeType": "ElementaryTypeName",
													"src": "21024:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int200",
														"typeString": "int200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21023:19:7"
									},
									"scope": 3864,
									"src": "20969:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3224,
										"nodeType": "Block",
										"src": "21590:150:7",
										"statements": [
											{
												"expression": {
													"id": 3212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3207,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3205,
														"src": "21600:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3210,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3202,
																"src": "21620:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21613:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int192_$",
																"typeString": "type(int192)"
															},
															"typeName": {
																"id": 3208,
																"name": "int192",
																"nodeType": "ElementaryTypeName",
																"src": "21613:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 3211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21613:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"src": "21600:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int192",
														"typeString": "int192"
													}
												},
												"id": 3213,
												"nodeType": "ExpressionStatement",
												"src": "21600:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3214,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3205,
														"src": "21640:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3215,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3202,
														"src": "21654:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "21640:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3223,
												"nodeType": "IfStatement",
												"src": "21636:98:7",
												"trueBody": {
													"id": 3222,
													"nodeType": "Block",
													"src": "21661:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313932",
																		"id": 3218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21712:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	{
																		"id": 3219,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3202,
																		"src": "21717:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3217,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "21682:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21682:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3221,
															"nodeType": "RevertStatement",
															"src": "21675:48:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3200,
										"nodeType": "StructuredDocumentation",
										"src": "21199:312:7",
										"text": " @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"
									},
									"id": 3225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt192",
									"nameLocation": "21525:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3202,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21541:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 3225,
												"src": "21534:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3201,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "21534:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21533:14:7"
									},
									"returnParameters": {
										"id": 3206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3205,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "21578:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 3225,
												"src": "21571:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int192",
													"typeString": "int192"
												},
												"typeName": {
													"id": 3204,
													"name": "int192",
													"nodeType": "ElementaryTypeName",
													"src": "21571:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int192",
														"typeString": "int192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21570:19:7"
									},
									"scope": 3864,
									"src": "21516:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3250,
										"nodeType": "Block",
										"src": "22137:150:7",
										"statements": [
											{
												"expression": {
													"id": 3238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3233,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3231,
														"src": "22147:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3236,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3228,
																"src": "22167:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22160:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int184_$",
																"typeString": "type(int184)"
															},
															"typeName": {
																"id": 3234,
																"name": "int184",
																"nodeType": "ElementaryTypeName",
																"src": "22160:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 3237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22160:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"src": "22147:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int184",
														"typeString": "int184"
													}
												},
												"id": 3239,
												"nodeType": "ExpressionStatement",
												"src": "22147:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3240,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3231,
														"src": "22187:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3241,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3228,
														"src": "22201:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "22187:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3249,
												"nodeType": "IfStatement",
												"src": "22183:98:7",
												"trueBody": {
													"id": 3248,
													"nodeType": "Block",
													"src": "22208:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313834",
																		"id": 3244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22259:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		"value": "184"
																	},
																	{
																		"id": 3245,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3228,
																		"src": "22264:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3243,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "22229:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22229:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3247,
															"nodeType": "RevertStatement",
															"src": "22222:48:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3226,
										"nodeType": "StructuredDocumentation",
										"src": "21746:312:7",
										"text": " @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"
									},
									"id": 3251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt184",
									"nameLocation": "22072:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3228,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22088:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 3251,
												"src": "22081:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3227,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22081:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22080:14:7"
									},
									"returnParameters": {
										"id": 3232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3231,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "22125:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 3251,
												"src": "22118:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int184",
													"typeString": "int184"
												},
												"typeName": {
													"id": 3230,
													"name": "int184",
													"nodeType": "ElementaryTypeName",
													"src": "22118:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int184",
														"typeString": "int184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22117:19:7"
									},
									"scope": 3864,
									"src": "22063:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3276,
										"nodeType": "Block",
										"src": "22684:150:7",
										"statements": [
											{
												"expression": {
													"id": 3264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3259,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3257,
														"src": "22694:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3262,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3254,
																"src": "22714:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22707:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int176_$",
																"typeString": "type(int176)"
															},
															"typeName": {
																"id": 3260,
																"name": "int176",
																"nodeType": "ElementaryTypeName",
																"src": "22707:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 3263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22707:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"src": "22694:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int176",
														"typeString": "int176"
													}
												},
												"id": 3265,
												"nodeType": "ExpressionStatement",
												"src": "22694:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3266,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3257,
														"src": "22734:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3267,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3254,
														"src": "22748:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "22734:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3275,
												"nodeType": "IfStatement",
												"src": "22730:98:7",
												"trueBody": {
													"id": 3274,
													"nodeType": "Block",
													"src": "22755:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313736",
																		"id": 3270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22806:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		"value": "176"
																	},
																	{
																		"id": 3271,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3254,
																		"src": "22811:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3269,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "22776:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22776:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3273,
															"nodeType": "RevertStatement",
															"src": "22769:48:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3252,
										"nodeType": "StructuredDocumentation",
										"src": "22293:312:7",
										"text": " @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"
									},
									"id": 3277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt176",
									"nameLocation": "22619:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3254,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22635:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 3277,
												"src": "22628:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3253,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22628:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22627:14:7"
									},
									"returnParameters": {
										"id": 3258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3257,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "22672:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 3277,
												"src": "22665:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int176",
													"typeString": "int176"
												},
												"typeName": {
													"id": 3256,
													"name": "int176",
													"nodeType": "ElementaryTypeName",
													"src": "22665:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int176",
														"typeString": "int176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22664:19:7"
									},
									"scope": 3864,
									"src": "22610:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3302,
										"nodeType": "Block",
										"src": "23231:150:7",
										"statements": [
											{
												"expression": {
													"id": 3290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3285,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3283,
														"src": "23241:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3288,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3280,
																"src": "23261:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23254:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int168_$",
																"typeString": "type(int168)"
															},
															"typeName": {
																"id": 3286,
																"name": "int168",
																"nodeType": "ElementaryTypeName",
																"src": "23254:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 3289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23254:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"src": "23241:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int168",
														"typeString": "int168"
													}
												},
												"id": 3291,
												"nodeType": "ExpressionStatement",
												"src": "23241:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3292,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3283,
														"src": "23281:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3293,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3280,
														"src": "23295:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "23281:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3301,
												"nodeType": "IfStatement",
												"src": "23277:98:7",
												"trueBody": {
													"id": 3300,
													"nodeType": "Block",
													"src": "23302:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313638",
																		"id": 3296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23353:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		"value": "168"
																	},
																	{
																		"id": 3297,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3280,
																		"src": "23358:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3295,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "23323:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23323:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3299,
															"nodeType": "RevertStatement",
															"src": "23316:48:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3278,
										"nodeType": "StructuredDocumentation",
										"src": "22840:312:7",
										"text": " @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"
									},
									"id": 3303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt168",
									"nameLocation": "23166:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3280,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23182:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 3303,
												"src": "23175:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3279,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "23175:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23174:14:7"
									},
									"returnParameters": {
										"id": 3284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3283,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "23219:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 3303,
												"src": "23212:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int168",
													"typeString": "int168"
												},
												"typeName": {
													"id": 3282,
													"name": "int168",
													"nodeType": "ElementaryTypeName",
													"src": "23212:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int168",
														"typeString": "int168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23211:19:7"
									},
									"scope": 3864,
									"src": "23157:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3328,
										"nodeType": "Block",
										"src": "23778:150:7",
										"statements": [
											{
												"expression": {
													"id": 3316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3311,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3309,
														"src": "23788:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3314,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3306,
																"src": "23808:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23801:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int160_$",
																"typeString": "type(int160)"
															},
															"typeName": {
																"id": 3312,
																"name": "int160",
																"nodeType": "ElementaryTypeName",
																"src": "23801:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 3315,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23801:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"src": "23788:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int160",
														"typeString": "int160"
													}
												},
												"id": 3317,
												"nodeType": "ExpressionStatement",
												"src": "23788:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3318,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3309,
														"src": "23828:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3319,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3306,
														"src": "23842:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "23828:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3327,
												"nodeType": "IfStatement",
												"src": "23824:98:7",
												"trueBody": {
													"id": 3326,
													"nodeType": "Block",
													"src": "23849:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313630",
																		"id": 3322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23900:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	{
																		"id": 3323,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3306,
																		"src": "23905:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3321,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "23870:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23870:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3325,
															"nodeType": "RevertStatement",
															"src": "23863:48:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3304,
										"nodeType": "StructuredDocumentation",
										"src": "23387:312:7",
										"text": " @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"
									},
									"id": 3329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt160",
									"nameLocation": "23713:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3306,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23729:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 3329,
												"src": "23722:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3305,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "23722:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23721:14:7"
									},
									"returnParameters": {
										"id": 3310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3309,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "23766:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 3329,
												"src": "23759:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int160",
													"typeString": "int160"
												},
												"typeName": {
													"id": 3308,
													"name": "int160",
													"nodeType": "ElementaryTypeName",
													"src": "23759:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int160",
														"typeString": "int160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23758:19:7"
									},
									"scope": 3864,
									"src": "23704:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3354,
										"nodeType": "Block",
										"src": "24325:150:7",
										"statements": [
											{
												"expression": {
													"id": 3342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3337,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3335,
														"src": "24335:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3340,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3332,
																"src": "24355:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3339,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24348:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int152_$",
																"typeString": "type(int152)"
															},
															"typeName": {
																"id": 3338,
																"name": "int152",
																"nodeType": "ElementaryTypeName",
																"src": "24348:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 3341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24348:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"src": "24335:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int152",
														"typeString": "int152"
													}
												},
												"id": 3343,
												"nodeType": "ExpressionStatement",
												"src": "24335:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3344,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3335,
														"src": "24375:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3345,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3332,
														"src": "24389:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24375:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3353,
												"nodeType": "IfStatement",
												"src": "24371:98:7",
												"trueBody": {
													"id": 3352,
													"nodeType": "Block",
													"src": "24396:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313532",
																		"id": 3348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24447:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		"value": "152"
																	},
																	{
																		"id": 3349,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3332,
																		"src": "24452:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3347,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "24417:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24417:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3351,
															"nodeType": "RevertStatement",
															"src": "24410:48:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3330,
										"nodeType": "StructuredDocumentation",
										"src": "23934:312:7",
										"text": " @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"
									},
									"id": 3355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt152",
									"nameLocation": "24260:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3332,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24276:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 3355,
												"src": "24269:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3331,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24269:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24268:14:7"
									},
									"returnParameters": {
										"id": 3336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3335,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "24313:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 3355,
												"src": "24306:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int152",
													"typeString": "int152"
												},
												"typeName": {
													"id": 3334,
													"name": "int152",
													"nodeType": "ElementaryTypeName",
													"src": "24306:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int152",
														"typeString": "int152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24305:19:7"
									},
									"scope": 3864,
									"src": "24251:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3380,
										"nodeType": "Block",
										"src": "24872:150:7",
										"statements": [
											{
												"expression": {
													"id": 3368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3363,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3361,
														"src": "24882:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3366,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3358,
																"src": "24902:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24895:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int144_$",
																"typeString": "type(int144)"
															},
															"typeName": {
																"id": 3364,
																"name": "int144",
																"nodeType": "ElementaryTypeName",
																"src": "24895:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 3367,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24895:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"src": "24882:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int144",
														"typeString": "int144"
													}
												},
												"id": 3369,
												"nodeType": "ExpressionStatement",
												"src": "24882:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3370,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3361,
														"src": "24922:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3371,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3358,
														"src": "24936:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24922:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3379,
												"nodeType": "IfStatement",
												"src": "24918:98:7",
												"trueBody": {
													"id": 3378,
													"nodeType": "Block",
													"src": "24943:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313434",
																		"id": 3374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24994:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		"value": "144"
																	},
																	{
																		"id": 3375,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3358,
																		"src": "24999:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3373,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "24964:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24964:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3377,
															"nodeType": "RevertStatement",
															"src": "24957:48:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3356,
										"nodeType": "StructuredDocumentation",
										"src": "24481:312:7",
										"text": " @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"
									},
									"id": 3381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt144",
									"nameLocation": "24807:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3358,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24823:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 3381,
												"src": "24816:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3357,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24816:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24815:14:7"
									},
									"returnParameters": {
										"id": 3362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3361,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "24860:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 3381,
												"src": "24853:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int144",
													"typeString": "int144"
												},
												"typeName": {
													"id": 3360,
													"name": "int144",
													"nodeType": "ElementaryTypeName",
													"src": "24853:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int144",
														"typeString": "int144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24852:19:7"
									},
									"scope": 3864,
									"src": "24798:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3406,
										"nodeType": "Block",
										"src": "25419:150:7",
										"statements": [
											{
												"expression": {
													"id": 3394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3389,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3387,
														"src": "25429:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3392,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3384,
																"src": "25449:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25442:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int136_$",
																"typeString": "type(int136)"
															},
															"typeName": {
																"id": 3390,
																"name": "int136",
																"nodeType": "ElementaryTypeName",
																"src": "25442:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 3393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25442:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"src": "25429:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int136",
														"typeString": "int136"
													}
												},
												"id": 3395,
												"nodeType": "ExpressionStatement",
												"src": "25429:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3396,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3387,
														"src": "25469:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3397,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3384,
														"src": "25483:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "25469:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3405,
												"nodeType": "IfStatement",
												"src": "25465:98:7",
												"trueBody": {
													"id": 3404,
													"nodeType": "Block",
													"src": "25490:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313336",
																		"id": 3400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25541:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		"value": "136"
																	},
																	{
																		"id": 3401,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3384,
																		"src": "25546:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3399,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "25511:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25511:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3403,
															"nodeType": "RevertStatement",
															"src": "25504:48:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3382,
										"nodeType": "StructuredDocumentation",
										"src": "25028:312:7",
										"text": " @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"
									},
									"id": 3407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt136",
									"nameLocation": "25354:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3384,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25370:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 3407,
												"src": "25363:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3383,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25363:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25362:14:7"
									},
									"returnParameters": {
										"id": 3388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3387,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "25407:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 3407,
												"src": "25400:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int136",
													"typeString": "int136"
												},
												"typeName": {
													"id": 3386,
													"name": "int136",
													"nodeType": "ElementaryTypeName",
													"src": "25400:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int136",
														"typeString": "int136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25399:19:7"
									},
									"scope": 3864,
									"src": "25345:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3432,
										"nodeType": "Block",
										"src": "25966:150:7",
										"statements": [
											{
												"expression": {
													"id": 3420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3415,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3413,
														"src": "25976:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3418,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3410,
																"src": "25996:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25989:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int128_$",
																"typeString": "type(int128)"
															},
															"typeName": {
																"id": 3416,
																"name": "int128",
																"nodeType": "ElementaryTypeName",
																"src": "25989:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 3419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25989:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"src": "25976:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"id": 3421,
												"nodeType": "ExpressionStatement",
												"src": "25976:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3422,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3413,
														"src": "26016:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3423,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3410,
														"src": "26030:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "26016:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3431,
												"nodeType": "IfStatement",
												"src": "26012:98:7",
												"trueBody": {
													"id": 3430,
													"nodeType": "Block",
													"src": "26037:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313238",
																		"id": 3426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26088:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	{
																		"id": 3427,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3410,
																		"src": "26093:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3425,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "26058:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26058:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3429,
															"nodeType": "RevertStatement",
															"src": "26051:48:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3408,
										"nodeType": "StructuredDocumentation",
										"src": "25575:312:7",
										"text": " @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 3433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt128",
									"nameLocation": "25901:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3410,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25917:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 3433,
												"src": "25910:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3409,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25910:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25909:14:7"
									},
									"returnParameters": {
										"id": 3414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3413,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "25954:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 3433,
												"src": "25947:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 3412,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "25947:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25946:19:7"
									},
									"scope": 3864,
									"src": "25892:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3458,
										"nodeType": "Block",
										"src": "26513:150:7",
										"statements": [
											{
												"expression": {
													"id": 3446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3441,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3439,
														"src": "26523:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3444,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3436,
																"src": "26543:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "26536:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int120_$",
																"typeString": "type(int120)"
															},
															"typeName": {
																"id": 3442,
																"name": "int120",
																"nodeType": "ElementaryTypeName",
																"src": "26536:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 3445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26536:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"src": "26523:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int120",
														"typeString": "int120"
													}
												},
												"id": 3447,
												"nodeType": "ExpressionStatement",
												"src": "26523:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3448,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3439,
														"src": "26563:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3449,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3436,
														"src": "26577:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "26563:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3457,
												"nodeType": "IfStatement",
												"src": "26559:98:7",
												"trueBody": {
													"id": 3456,
													"nodeType": "Block",
													"src": "26584:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313230",
																		"id": 3452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26635:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		"value": "120"
																	},
																	{
																		"id": 3453,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3436,
																		"src": "26640:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3451,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "26605:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26605:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3455,
															"nodeType": "RevertStatement",
															"src": "26598:48:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3434,
										"nodeType": "StructuredDocumentation",
										"src": "26122:312:7",
										"text": " @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"
									},
									"id": 3459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt120",
									"nameLocation": "26448:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3436,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26464:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 3459,
												"src": "26457:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3435,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "26457:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26456:14:7"
									},
									"returnParameters": {
										"id": 3440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3439,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "26501:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 3459,
												"src": "26494:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int120",
													"typeString": "int120"
												},
												"typeName": {
													"id": 3438,
													"name": "int120",
													"nodeType": "ElementaryTypeName",
													"src": "26494:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int120",
														"typeString": "int120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26493:19:7"
									},
									"scope": 3864,
									"src": "26439:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3484,
										"nodeType": "Block",
										"src": "27060:150:7",
										"statements": [
											{
												"expression": {
													"id": 3472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3467,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3465,
														"src": "27070:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3470,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3462,
																"src": "27090:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27083:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int112_$",
																"typeString": "type(int112)"
															},
															"typeName": {
																"id": 3468,
																"name": "int112",
																"nodeType": "ElementaryTypeName",
																"src": "27083:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 3471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27083:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"src": "27070:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int112",
														"typeString": "int112"
													}
												},
												"id": 3473,
												"nodeType": "ExpressionStatement",
												"src": "27070:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3474,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3465,
														"src": "27110:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3475,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3462,
														"src": "27124:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "27110:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3483,
												"nodeType": "IfStatement",
												"src": "27106:98:7",
												"trueBody": {
													"id": 3482,
													"nodeType": "Block",
													"src": "27131:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313132",
																		"id": 3478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27182:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	{
																		"id": 3479,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3462,
																		"src": "27187:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3477,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "27152:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27152:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3481,
															"nodeType": "RevertStatement",
															"src": "27145:48:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3460,
										"nodeType": "StructuredDocumentation",
										"src": "26669:312:7",
										"text": " @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"
									},
									"id": 3485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt112",
									"nameLocation": "26995:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3462,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27011:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 3485,
												"src": "27004:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3461,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "27004:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27003:14:7"
									},
									"returnParameters": {
										"id": 3466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3465,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "27048:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 3485,
												"src": "27041:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int112",
													"typeString": "int112"
												},
												"typeName": {
													"id": 3464,
													"name": "int112",
													"nodeType": "ElementaryTypeName",
													"src": "27041:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int112",
														"typeString": "int112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27040:19:7"
									},
									"scope": 3864,
									"src": "26986:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3510,
										"nodeType": "Block",
										"src": "27607:150:7",
										"statements": [
											{
												"expression": {
													"id": 3498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3493,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3491,
														"src": "27617:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3496,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3488,
																"src": "27637:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3495,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27630:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int104_$",
																"typeString": "type(int104)"
															},
															"typeName": {
																"id": 3494,
																"name": "int104",
																"nodeType": "ElementaryTypeName",
																"src": "27630:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 3497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27630:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"src": "27617:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int104",
														"typeString": "int104"
													}
												},
												"id": 3499,
												"nodeType": "ExpressionStatement",
												"src": "27617:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3500,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3491,
														"src": "27657:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3501,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3488,
														"src": "27671:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "27657:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3509,
												"nodeType": "IfStatement",
												"src": "27653:98:7",
												"trueBody": {
													"id": 3508,
													"nodeType": "Block",
													"src": "27678:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313034",
																		"id": 3504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27729:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		"value": "104"
																	},
																	{
																		"id": 3505,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3488,
																		"src": "27734:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3503,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "27699:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27699:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3507,
															"nodeType": "RevertStatement",
															"src": "27692:48:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3486,
										"nodeType": "StructuredDocumentation",
										"src": "27216:312:7",
										"text": " @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"
									},
									"id": 3511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt104",
									"nameLocation": "27542:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3488,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27558:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 3511,
												"src": "27551:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3487,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "27551:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27550:14:7"
									},
									"returnParameters": {
										"id": 3492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3491,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "27595:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 3511,
												"src": "27588:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int104",
													"typeString": "int104"
												},
												"typeName": {
													"id": 3490,
													"name": "int104",
													"nodeType": "ElementaryTypeName",
													"src": "27588:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int104",
														"typeString": "int104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27587:19:7"
									},
									"scope": 3864,
									"src": "27533:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3536,
										"nodeType": "Block",
										"src": "28147:148:7",
										"statements": [
											{
												"expression": {
													"id": 3524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3519,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3517,
														"src": "28157:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3522,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3514,
																"src": "28176:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3521,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28170:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int96_$",
																"typeString": "type(int96)"
															},
															"typeName": {
																"id": 3520,
																"name": "int96",
																"nodeType": "ElementaryTypeName",
																"src": "28170:5:7",
																"typeDescriptions": {}
															}
														},
														"id": 3523,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28170:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"src": "28157:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int96",
														"typeString": "int96"
													}
												},
												"id": 3525,
												"nodeType": "ExpressionStatement",
												"src": "28157:25:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3526,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3517,
														"src": "28196:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3527,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3514,
														"src": "28210:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "28196:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3535,
												"nodeType": "IfStatement",
												"src": "28192:97:7",
												"trueBody": {
													"id": 3534,
													"nodeType": "Block",
													"src": "28217:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 3530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28268:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	{
																		"id": 3531,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3514,
																		"src": "28272:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3529,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "28238:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28238:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3533,
															"nodeType": "RevertStatement",
															"src": "28231:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3512,
										"nodeType": "StructuredDocumentation",
										"src": "27763:307:7",
										"text": " @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 3537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt96",
									"nameLocation": "28084:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3514,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28099:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 3537,
												"src": "28092:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3513,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28092:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28091:14:7"
									},
									"returnParameters": {
										"id": 3518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3517,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "28135:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 3537,
												"src": "28129:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int96",
													"typeString": "int96"
												},
												"typeName": {
													"id": 3516,
													"name": "int96",
													"nodeType": "ElementaryTypeName",
													"src": "28129:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int96",
														"typeString": "int96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28128:18:7"
									},
									"scope": 3864,
									"src": "28075:220:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3562,
										"nodeType": "Block",
										"src": "28685:148:7",
										"statements": [
											{
												"expression": {
													"id": 3550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3545,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3543,
														"src": "28695:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3548,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3540,
																"src": "28714:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28708:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int88_$",
																"typeString": "type(int88)"
															},
															"typeName": {
																"id": 3546,
																"name": "int88",
																"nodeType": "ElementaryTypeName",
																"src": "28708:5:7",
																"typeDescriptions": {}
															}
														},
														"id": 3549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28708:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"src": "28695:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int88",
														"typeString": "int88"
													}
												},
												"id": 3551,
												"nodeType": "ExpressionStatement",
												"src": "28695:25:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3552,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3543,
														"src": "28734:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3553,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3540,
														"src": "28748:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "28734:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3561,
												"nodeType": "IfStatement",
												"src": "28730:97:7",
												"trueBody": {
													"id": 3560,
													"nodeType": "Block",
													"src": "28755:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3838",
																		"id": 3556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28806:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		"value": "88"
																	},
																	{
																		"id": 3557,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3540,
																		"src": "28810:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3555,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "28776:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28776:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3559,
															"nodeType": "RevertStatement",
															"src": "28769:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3538,
										"nodeType": "StructuredDocumentation",
										"src": "28301:307:7",
										"text": " @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"
									},
									"id": 3563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt88",
									"nameLocation": "28622:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3540,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28637:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 3563,
												"src": "28630:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3539,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28630:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28629:14:7"
									},
									"returnParameters": {
										"id": 3544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3543,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "28673:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 3563,
												"src": "28667:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int88",
													"typeString": "int88"
												},
												"typeName": {
													"id": 3542,
													"name": "int88",
													"nodeType": "ElementaryTypeName",
													"src": "28667:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int88",
														"typeString": "int88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28666:18:7"
									},
									"scope": 3864,
									"src": "28613:220:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3588,
										"nodeType": "Block",
										"src": "29223:148:7",
										"statements": [
											{
												"expression": {
													"id": 3576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3571,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3569,
														"src": "29233:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3574,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3566,
																"src": "29252:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29246:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int80_$",
																"typeString": "type(int80)"
															},
															"typeName": {
																"id": 3572,
																"name": "int80",
																"nodeType": "ElementaryTypeName",
																"src": "29246:5:7",
																"typeDescriptions": {}
															}
														},
														"id": 3575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29246:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"src": "29233:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int80",
														"typeString": "int80"
													}
												},
												"id": 3577,
												"nodeType": "ExpressionStatement",
												"src": "29233:25:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3578,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3569,
														"src": "29272:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3579,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3566,
														"src": "29286:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "29272:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3587,
												"nodeType": "IfStatement",
												"src": "29268:97:7",
												"trueBody": {
													"id": 3586,
													"nodeType": "Block",
													"src": "29293:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3830",
																		"id": 3582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29344:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	{
																		"id": 3583,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3566,
																		"src": "29348:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3581,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "29314:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29314:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3585,
															"nodeType": "RevertStatement",
															"src": "29307:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3564,
										"nodeType": "StructuredDocumentation",
										"src": "28839:307:7",
										"text": " @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"
									},
									"id": 3589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt80",
									"nameLocation": "29160:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3566,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29175:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 3589,
												"src": "29168:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3565,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29168:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29167:14:7"
									},
									"returnParameters": {
										"id": 3570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3569,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "29211:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 3589,
												"src": "29205:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int80",
													"typeString": "int80"
												},
												"typeName": {
													"id": 3568,
													"name": "int80",
													"nodeType": "ElementaryTypeName",
													"src": "29205:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int80",
														"typeString": "int80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29204:18:7"
									},
									"scope": 3864,
									"src": "29151:220:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3614,
										"nodeType": "Block",
										"src": "29761:148:7",
										"statements": [
											{
												"expression": {
													"id": 3602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3597,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3595,
														"src": "29771:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3600,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3592,
																"src": "29790:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29784:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int72_$",
																"typeString": "type(int72)"
															},
															"typeName": {
																"id": 3598,
																"name": "int72",
																"nodeType": "ElementaryTypeName",
																"src": "29784:5:7",
																"typeDescriptions": {}
															}
														},
														"id": 3601,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29784:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"src": "29771:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int72",
														"typeString": "int72"
													}
												},
												"id": 3603,
												"nodeType": "ExpressionStatement",
												"src": "29771:25:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3604,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3595,
														"src": "29810:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3605,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3592,
														"src": "29824:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "29810:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3613,
												"nodeType": "IfStatement",
												"src": "29806:97:7",
												"trueBody": {
													"id": 3612,
													"nodeType": "Block",
													"src": "29831:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3732",
																		"id": 3608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29882:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		"value": "72"
																	},
																	{
																		"id": 3609,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3592,
																		"src": "29886:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3607,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "29852:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3610,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29852:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3611,
															"nodeType": "RevertStatement",
															"src": "29845:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3590,
										"nodeType": "StructuredDocumentation",
										"src": "29377:307:7",
										"text": " @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"
									},
									"id": 3615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt72",
									"nameLocation": "29698:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3592,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29713:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 3615,
												"src": "29706:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3591,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29706:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29705:14:7"
									},
									"returnParameters": {
										"id": 3596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3595,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "29749:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 3615,
												"src": "29743:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int72",
													"typeString": "int72"
												},
												"typeName": {
													"id": 3594,
													"name": "int72",
													"nodeType": "ElementaryTypeName",
													"src": "29743:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int72",
														"typeString": "int72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29742:18:7"
									},
									"scope": 3864,
									"src": "29689:220:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3640,
										"nodeType": "Block",
										"src": "30299:148:7",
										"statements": [
											{
												"expression": {
													"id": 3628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3623,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3621,
														"src": "30309:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3626,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3618,
																"src": "30328:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3625,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30322:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int64_$",
																"typeString": "type(int64)"
															},
															"typeName": {
																"id": 3624,
																"name": "int64",
																"nodeType": "ElementaryTypeName",
																"src": "30322:5:7",
																"typeDescriptions": {}
															}
														},
														"id": 3627,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30322:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"src": "30309:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"id": 3629,
												"nodeType": "ExpressionStatement",
												"src": "30309:25:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3630,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3621,
														"src": "30348:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3631,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3618,
														"src": "30362:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "30348:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3639,
												"nodeType": "IfStatement",
												"src": "30344:97:7",
												"trueBody": {
													"id": 3638,
													"nodeType": "Block",
													"src": "30369:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3634",
																		"id": 3634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30420:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	{
																		"id": 3635,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3618,
																		"src": "30424:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3633,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "30390:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30390:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3637,
															"nodeType": "RevertStatement",
															"src": "30383:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3616,
										"nodeType": "StructuredDocumentation",
										"src": "29915:307:7",
										"text": " @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 3641,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt64",
									"nameLocation": "30236:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3618,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30251:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 3641,
												"src": "30244:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3617,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30244:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30243:14:7"
									},
									"returnParameters": {
										"id": 3622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3621,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "30287:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 3641,
												"src": "30281:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 3620,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "30281:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30280:18:7"
									},
									"scope": 3864,
									"src": "30227:220:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3666,
										"nodeType": "Block",
										"src": "30837:148:7",
										"statements": [
											{
												"expression": {
													"id": 3654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3649,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3647,
														"src": "30847:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3652,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3644,
																"src": "30866:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3651,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30860:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int56_$",
																"typeString": "type(int56)"
															},
															"typeName": {
																"id": 3650,
																"name": "int56",
																"nodeType": "ElementaryTypeName",
																"src": "30860:5:7",
																"typeDescriptions": {}
															}
														},
														"id": 3653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30860:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"src": "30847:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"id": 3655,
												"nodeType": "ExpressionStatement",
												"src": "30847:25:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3656,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3647,
														"src": "30886:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3657,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3644,
														"src": "30900:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "30886:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3665,
												"nodeType": "IfStatement",
												"src": "30882:97:7",
												"trueBody": {
													"id": 3664,
													"nodeType": "Block",
													"src": "30907:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3536",
																		"id": 3660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30958:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		"value": "56"
																	},
																	{
																		"id": 3661,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3644,
																		"src": "30962:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3659,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "30928:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30928:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3663,
															"nodeType": "RevertStatement",
															"src": "30921:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3642,
										"nodeType": "StructuredDocumentation",
										"src": "30453:307:7",
										"text": " @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"
									},
									"id": 3667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt56",
									"nameLocation": "30774:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30789:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 3667,
												"src": "30782:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3643,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30782:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30781:14:7"
									},
									"returnParameters": {
										"id": 3648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3647,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "30825:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 3667,
												"src": "30819:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 3646,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "30819:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30818:18:7"
									},
									"scope": 3864,
									"src": "30765:220:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3692,
										"nodeType": "Block",
										"src": "31375:148:7",
										"statements": [
											{
												"expression": {
													"id": 3680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3675,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3673,
														"src": "31385:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3678,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3670,
																"src": "31404:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3677,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31398:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int48_$",
																"typeString": "type(int48)"
															},
															"typeName": {
																"id": 3676,
																"name": "int48",
																"nodeType": "ElementaryTypeName",
																"src": "31398:5:7",
																"typeDescriptions": {}
															}
														},
														"id": 3679,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31398:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"src": "31385:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int48",
														"typeString": "int48"
													}
												},
												"id": 3681,
												"nodeType": "ExpressionStatement",
												"src": "31385:25:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3682,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3673,
														"src": "31424:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3683,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3670,
														"src": "31438:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31424:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3691,
												"nodeType": "IfStatement",
												"src": "31420:97:7",
												"trueBody": {
													"id": 3690,
													"nodeType": "Block",
													"src": "31445:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3438",
																		"id": 3686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31496:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	{
																		"id": 3687,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3670,
																		"src": "31500:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3685,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "31466:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31466:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3689,
															"nodeType": "RevertStatement",
															"src": "31459:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3668,
										"nodeType": "StructuredDocumentation",
										"src": "30991:307:7",
										"text": " @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"
									},
									"id": 3693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt48",
									"nameLocation": "31312:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3670,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31327:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 3693,
												"src": "31320:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3669,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31320:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31319:14:7"
									},
									"returnParameters": {
										"id": 3674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3673,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "31363:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 3693,
												"src": "31357:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int48",
													"typeString": "int48"
												},
												"typeName": {
													"id": 3672,
													"name": "int48",
													"nodeType": "ElementaryTypeName",
													"src": "31357:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int48",
														"typeString": "int48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31356:18:7"
									},
									"scope": 3864,
									"src": "31303:220:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3718,
										"nodeType": "Block",
										"src": "31913:148:7",
										"statements": [
											{
												"expression": {
													"id": 3706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3701,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3699,
														"src": "31923:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3704,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3696,
																"src": "31942:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3703,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31936:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int40_$",
																"typeString": "type(int40)"
															},
															"typeName": {
																"id": 3702,
																"name": "int40",
																"nodeType": "ElementaryTypeName",
																"src": "31936:5:7",
																"typeDescriptions": {}
															}
														},
														"id": 3705,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31936:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"src": "31923:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int40",
														"typeString": "int40"
													}
												},
												"id": 3707,
												"nodeType": "ExpressionStatement",
												"src": "31923:25:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3708,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3699,
														"src": "31962:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3709,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3696,
														"src": "31976:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31962:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3717,
												"nodeType": "IfStatement",
												"src": "31958:97:7",
												"trueBody": {
													"id": 3716,
													"nodeType": "Block",
													"src": "31983:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3430",
																		"id": 3712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32034:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	{
																		"id": 3713,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3696,
																		"src": "32038:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3711,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "32004:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32004:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3715,
															"nodeType": "RevertStatement",
															"src": "31997:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3694,
										"nodeType": "StructuredDocumentation",
										"src": "31529:307:7",
										"text": " @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"
									},
									"id": 3719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt40",
									"nameLocation": "31850:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3696,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31865:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 3719,
												"src": "31858:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3695,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31858:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31857:14:7"
									},
									"returnParameters": {
										"id": 3700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3699,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "31901:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 3719,
												"src": "31895:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int40",
													"typeString": "int40"
												},
												"typeName": {
													"id": 3698,
													"name": "int40",
													"nodeType": "ElementaryTypeName",
													"src": "31895:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int40",
														"typeString": "int40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31894:18:7"
									},
									"scope": 3864,
									"src": "31841:220:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3744,
										"nodeType": "Block",
										"src": "32451:148:7",
										"statements": [
											{
												"expression": {
													"id": 3732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3727,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3725,
														"src": "32461:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3730,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3722,
																"src": "32480:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3729,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32474:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int32_$",
																"typeString": "type(int32)"
															},
															"typeName": {
																"id": 3728,
																"name": "int32",
																"nodeType": "ElementaryTypeName",
																"src": "32474:5:7",
																"typeDescriptions": {}
															}
														},
														"id": 3731,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32474:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"src": "32461:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"id": 3733,
												"nodeType": "ExpressionStatement",
												"src": "32461:25:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3734,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3725,
														"src": "32500:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3735,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3722,
														"src": "32514:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "32500:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3743,
												"nodeType": "IfStatement",
												"src": "32496:97:7",
												"trueBody": {
													"id": 3742,
													"nodeType": "Block",
													"src": "32521:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3332",
																		"id": 3738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32572:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	{
																		"id": 3739,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3722,
																		"src": "32576:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3737,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "32542:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32542:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3741,
															"nodeType": "RevertStatement",
															"src": "32535:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3720,
										"nodeType": "StructuredDocumentation",
										"src": "32067:307:7",
										"text": " @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 3745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt32",
									"nameLocation": "32388:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3722,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32403:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 3745,
												"src": "32396:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3721,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "32396:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32395:14:7"
									},
									"returnParameters": {
										"id": 3726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3725,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "32439:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 3745,
												"src": "32433:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int32",
													"typeString": "int32"
												},
												"typeName": {
													"id": 3724,
													"name": "int32",
													"nodeType": "ElementaryTypeName",
													"src": "32433:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32432:18:7"
									},
									"scope": 3864,
									"src": "32379:220:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3770,
										"nodeType": "Block",
										"src": "32989:148:7",
										"statements": [
											{
												"expression": {
													"id": 3758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3753,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3751,
														"src": "32999:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3756,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3748,
																"src": "33018:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3755,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33012:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int24_$",
																"typeString": "type(int24)"
															},
															"typeName": {
																"id": 3754,
																"name": "int24",
																"nodeType": "ElementaryTypeName",
																"src": "33012:5:7",
																"typeDescriptions": {}
															}
														},
														"id": 3757,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33012:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "32999:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 3759,
												"nodeType": "ExpressionStatement",
												"src": "32999:25:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3760,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3751,
														"src": "33038:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3761,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3748,
														"src": "33052:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "33038:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3769,
												"nodeType": "IfStatement",
												"src": "33034:97:7",
												"trueBody": {
													"id": 3768,
													"nodeType": "Block",
													"src": "33059:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 3764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33110:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	{
																		"id": 3765,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3748,
																		"src": "33114:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3763,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "33080:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33080:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3767,
															"nodeType": "RevertStatement",
															"src": "33073:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3746,
										"nodeType": "StructuredDocumentation",
										"src": "32605:307:7",
										"text": " @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"
									},
									"id": 3771,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt24",
									"nameLocation": "32926:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3748,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32941:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 3771,
												"src": "32934:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3747,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "32934:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32933:14:7"
									},
									"returnParameters": {
										"id": 3752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3751,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "32977:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 3771,
												"src": "32971:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 3750,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "32971:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32970:18:7"
									},
									"scope": 3864,
									"src": "32917:220:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3796,
										"nodeType": "Block",
										"src": "33527:148:7",
										"statements": [
											{
												"expression": {
													"id": 3784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3779,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3777,
														"src": "33537:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3782,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3774,
																"src": "33556:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3781,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33550:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int16_$",
																"typeString": "type(int16)"
															},
															"typeName": {
																"id": 3780,
																"name": "int16",
																"nodeType": "ElementaryTypeName",
																"src": "33550:5:7",
																"typeDescriptions": {}
															}
														},
														"id": 3783,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33550:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"src": "33537:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"id": 3785,
												"nodeType": "ExpressionStatement",
												"src": "33537:25:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3786,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3777,
														"src": "33576:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3787,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3774,
														"src": "33590:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "33576:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3795,
												"nodeType": "IfStatement",
												"src": "33572:97:7",
												"trueBody": {
													"id": 3794,
													"nodeType": "Block",
													"src": "33597:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3136",
																		"id": 3790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33648:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	{
																		"id": 3791,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3774,
																		"src": "33652:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3789,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "33618:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3792,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33618:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3793,
															"nodeType": "RevertStatement",
															"src": "33611:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3772,
										"nodeType": "StructuredDocumentation",
										"src": "33143:307:7",
										"text": " @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 3797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt16",
									"nameLocation": "33464:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3774,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "33479:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 3797,
												"src": "33472:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3773,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "33472:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33471:14:7"
									},
									"returnParameters": {
										"id": 3778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3777,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "33515:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 3797,
												"src": "33509:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 3776,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "33509:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33508:18:7"
									},
									"scope": 3864,
									"src": "33455:220:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3822,
										"nodeType": "Block",
										"src": "34058:146:7",
										"statements": [
											{
												"expression": {
													"id": 3810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3805,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3803,
														"src": "34068:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3808,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3800,
																"src": "34086:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3807,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34081:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int8_$",
																"typeString": "type(int8)"
															},
															"typeName": {
																"id": 3806,
																"name": "int8",
																"nodeType": "ElementaryTypeName",
																"src": "34081:4:7",
																"typeDescriptions": {}
															}
														},
														"id": 3809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34081:11:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"src": "34068:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"id": 3811,
												"nodeType": "ExpressionStatement",
												"src": "34068:24:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3812,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3803,
														"src": "34106:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3813,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3800,
														"src": "34120:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "34106:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3821,
												"nodeType": "IfStatement",
												"src": "34102:96:7",
												"trueBody": {
													"id": 3820,
													"nodeType": "Block",
													"src": "34127:71:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "38",
																		"id": 3816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34178:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	{
																		"id": 3817,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3800,
																		"src": "34181:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3815,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "34148:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34148:39:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3819,
															"nodeType": "RevertStatement",
															"src": "34141:46:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3798,
										"nodeType": "StructuredDocumentation",
										"src": "33681:302:7",
										"text": " @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"
									},
									"id": 3823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt8",
									"nameLocation": "33997:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3800,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34011:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 3823,
												"src": "34004:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3799,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34004:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34003:14:7"
									},
									"returnParameters": {
										"id": 3804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3803,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "34046:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 3823,
												"src": "34041:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int8",
													"typeString": "int8"
												},
												"typeName": {
													"id": 3802,
													"name": "int8",
													"nodeType": "ElementaryTypeName",
													"src": "34041:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34040:17:7"
									},
									"scope": 3864,
									"src": "33988:216:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3852,
										"nodeType": "Block",
										"src": "34444:250:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3831,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3826,
														"src": "34557:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 3836,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "34578:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			},
																			"typeName": {
																				"id": 3835,
																				"name": "int256",
																				"nodeType": "ElementaryTypeName",
																				"src": "34578:6:7",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			}
																		],
																		"id": 3834,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "34573:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 3837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34573:12:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_int256",
																		"typeString": "type(int256)"
																	}
																},
																"id": 3838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "34586:3:7",
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "34573:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3833,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34565:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 3832,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "34565:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 3839,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34565:25:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34557:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3846,
												"nodeType": "IfStatement",
												"src": "34553:105:7",
												"trueBody": {
													"id": 3845,
													"nodeType": "Block",
													"src": "34592:66:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3842,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3826,
																		"src": "34641:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3841,
																	"name": "SafeCastOverflowedUintToInt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2126,
																	"src": "34613:27:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 3843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34613:34:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3844,
															"nodeType": "RevertStatement",
															"src": "34606:41:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3849,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3826,
															"src": "34681:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3848,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "34674:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 3847,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "34674:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 3850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34674:13:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3830,
												"id": 3851,
												"nodeType": "Return",
												"src": "34667:20:7"
											}
										]
									},
									"documentation": {
										"id": 3824,
										"nodeType": "StructuredDocumentation",
										"src": "34210:165:7",
										"text": " @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."
									},
									"id": 3853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256",
									"nameLocation": "34389:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3826,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34406:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 3853,
												"src": "34398:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34398:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34397:15:7"
									},
									"returnParameters": {
										"id": 3830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3853,
												"src": "34436:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3828,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34436:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34435:8:7"
									},
									"scope": 3864,
									"src": "34380:314:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3862,
										"nodeType": "Block",
										"src": "34853:87:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "34888:46:7",
													"nodeType": "YulBlock",
													"src": "34888:46:7",
													"statements": [
														{
															"nativeSrc": "34902:22:7",
															"nodeType": "YulAssignment",
															"src": "34902:22:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "b",
																				"nativeSrc": "34921:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "34921:1:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "34914:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "34914:6:7"
																		},
																		"nativeSrc": "34914:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "34914:9:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "34907:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "34907:6:7"
																},
																"nativeSrc": "34907:17:7",
																"nodeType": "YulFunctionCall",
																"src": "34907:17:7"
															},
															"variableNames": [
																{
																	"name": "u",
																	"nativeSrc": "34902:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "34902:1:7"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 3856,
														"isOffset": false,
														"isSlot": false,
														"src": "34921:1:7",
														"valueSize": 1
													},
													{
														"declaration": 3859,
														"isOffset": false,
														"isSlot": false,
														"src": "34902:1:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 3861,
												"nodeType": "InlineAssembly",
												"src": "34863:71:7"
											}
										]
									},
									"documentation": {
										"id": 3854,
										"nodeType": "StructuredDocumentation",
										"src": "34700:90:7",
										"text": " @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."
									},
									"id": 3863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint",
									"nameLocation": "34804:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3856,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "34816:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 3863,
												"src": "34811:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3855,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34811:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34810:8:7"
									},
									"returnParameters": {
										"id": 3860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3859,
												"mutability": "mutable",
												"name": "u",
												"nameLocation": "34850:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 3863,
												"src": "34842:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34842:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34841:11:7"
									},
									"scope": 3864,
									"src": "34795:145:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3865,
							"src": "769:34173:7",
							"usedErrors": [
								2109,
								2114,
								2121,
								2126
							],
							"usedEvents": []
						}
					],
					"src": "192:34751:7"
				},
				"id": 7
			},
			"token/TokenVesting.sol": {
				"ast": {
					"absolutePath": "token/TokenVesting.sol",
					"exportedSymbols": {
						"Context": [
							255
						],
						"IERC20": [
							225
						],
						"Math": [
							2099
						],
						"Ownable": [
							147
						],
						"Panic": [
							307
						],
						"Pausable": [
							424
						],
						"ReentrancyGuard": [
							493
						],
						"SafeCast": [
							3864
						],
						"TokenVesting": [
							4575
						]
					},
					"id": 4576,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3866,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 3867,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4576,
							"sourceUnit": 226,
							"src": "58:56:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 3868,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4576,
							"sourceUnit": 148,
							"src": "115:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"id": 3869,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4576,
							"sourceUnit": 494,
							"src": "168:59:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
							"file": "@openzeppelin/contracts/utils/Pausable.sol",
							"id": 3870,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4576,
							"sourceUnit": 425,
							"src": "228:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "@openzeppelin/contracts/utils/math/Math.sol",
							"id": 3871,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4576,
							"sourceUnit": 2100,
							"src": "281:53:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3873,
										"name": "Ownable",
										"nameLocations": [
											"528:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "528:7:8"
									},
									"id": 3874,
									"nodeType": "InheritanceSpecifier",
									"src": "528:7:8"
								},
								{
									"baseName": {
										"id": 3875,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"537:15:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 493,
										"src": "537:15:8"
									},
									"id": 3876,
									"nodeType": "InheritanceSpecifier",
									"src": "537:15:8"
								},
								{
									"baseName": {
										"id": 3877,
										"name": "Pausable",
										"nameLocations": [
											"554:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 424,
										"src": "554:8:8"
									},
									"id": 3878,
									"nodeType": "InheritanceSpecifier",
									"src": "554:8:8"
								}
							],
							"canonicalName": "TokenVesting",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3872,
								"nodeType": "StructuredDocumentation",
								"src": "336:166:8",
								"text": " @title TokenVesting\n @notice Manages token vesting schedules for CipherZeroToken\n @dev Supports multiple beneficiaries with different vesting schedules"
							},
							"fullyImplemented": true,
							"id": 4575,
							"linearizedBaseContracts": [
								4575,
								424,
								493,
								147,
								255
							],
							"name": "TokenVesting",
							"nameLocation": "512:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 3881,
									"libraryName": {
										"id": 3879,
										"name": "Math",
										"nameLocations": [
											"575:4:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2099,
										"src": "575:4:8"
									},
									"nodeType": "UsingForDirective",
									"src": "569:23:8",
									"typeName": {
										"id": 3880,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "584:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "TokenVesting.VestingSchedule",
									"id": 3898,
									"members": [
										{
											"constant": false,
											"id": 3883,
											"mutability": "mutable",
											"name": "totalAmount",
											"nameLocation": "673:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 3898,
											"src": "665:19:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3882,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "665:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3885,
											"mutability": "mutable",
											"name": "releasedAmount",
											"nameLocation": "740:14:8",
											"nodeType": "VariableDeclaration",
											"scope": 3898,
											"src": "732:22:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3884,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "732:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3887,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "809:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 3898,
											"src": "801:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3886,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "801:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3889,
											"mutability": "mutable",
											"name": "duration",
											"nameLocation": "878:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 3898,
											"src": "870:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3888,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "870:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3891,
											"mutability": "mutable",
											"name": "cliffDuration",
											"nameLocation": "945:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 3898,
											"src": "937:21:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3890,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "937:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3893,
											"mutability": "mutable",
											"name": "slicePeriod",
											"nameLocation": "1003:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 3898,
											"src": "995:19:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3892,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "995:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3895,
											"mutability": "mutable",
											"name": "revocable",
											"nameLocation": "1068:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 3898,
											"src": "1063:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3894,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1063:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3897,
											"mutability": "mutable",
											"name": "revoked",
											"nameLocation": "1139:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 3898,
											"src": "1134:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3896,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1134:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "VestingSchedule",
									"nameLocation": "639:15:8",
									"nodeType": "StructDefinition",
									"scope": 4575,
									"src": "632:572:8",
									"visibility": "public"
								},
								{
									"canonicalName": "TokenVesting.ScheduleType",
									"id": 3904,
									"members": [
										{
											"id": 3899,
											"name": "TEAM",
											"nameLocation": "1260:4:8",
											"nodeType": "EnumValue",
											"src": "1260:4:8"
										},
										{
											"id": 3900,
											"name": "ECOSYSTEM",
											"nameLocation": "1305:9:8",
											"nodeType": "EnumValue",
											"src": "1305:9:8"
										},
										{
											"id": 3901,
											"name": "COMMUNITY",
											"nameLocation": "1354:9:8",
											"nodeType": "EnumValue",
											"src": "1354:9:8"
										},
										{
											"id": 3902,
											"name": "PRIVATE_SALE",
											"nameLocation": "1399:12:8",
											"nodeType": "EnumValue",
											"src": "1399:12:8"
										},
										{
											"id": 3903,
											"name": "PUBLIC_SALE",
											"nameLocation": "1452:11:8",
											"nodeType": "EnumValue",
											"src": "1452:11:8"
										}
									],
									"name": "ScheduleType",
									"nameLocation": "1237:12:8",
									"nodeType": "EnumDefinition",
									"src": "1232:269:8"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 3907,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "1544:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 4575,
									"src": "1530:19:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$225",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 3906,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3905,
											"name": "IERC20",
											"nameLocations": [
												"1530:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "1530:6:8"
										},
										"referencedDeclaration": 225,
										"src": "1530:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "45626bd6",
									"id": 3913,
									"mutability": "mutable",
									"name": "vestingSchedules",
									"nameLocation": "1605:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 4575,
									"src": "1560:61:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_VestingSchedule_$3898_storage_$dyn_storage_$",
										"typeString": "mapping(address => struct TokenVesting.VestingSchedule[])"
									},
									"typeName": {
										"id": 3912,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3908,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1568:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1560:37:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_VestingSchedule_$3898_storage_$dyn_storage_$",
											"typeString": "mapping(address => struct TokenVesting.VestingSchedule[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 3910,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 3909,
													"name": "VestingSchedule",
													"nameLocations": [
														"1579:15:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 3898,
													"src": "1579:15:8"
												},
												"referencedDeclaration": 3898,
												"src": "1579:15:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_VestingSchedule_$3898_storage_ptr",
													"typeString": "struct TokenVesting.VestingSchedule"
												}
											},
											"id": 3911,
											"nodeType": "ArrayTypeName",
											"src": "1579:17:8",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_VestingSchedule_$3898_storage_$dyn_storage_ptr",
												"typeString": "struct TokenVesting.VestingSchedule[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a9bb5c4c",
									"id": 3917,
									"mutability": "mutable",
									"name": "vestingScheduleCount",
									"nameLocation": "1662:20:8",
									"nodeType": "VariableDeclaration",
									"scope": 4575,
									"src": "1627:55:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 3916,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3914,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1635:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1627:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3915,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1646:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "02f622d2",
									"id": 3922,
									"mutability": "mutable",
									"name": "totalVestedByType",
									"nameLocation": "1728:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 4575,
									"src": "1688:57:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_enum$_ScheduleType_$3904_$_t_uint256_$",
										"typeString": "mapping(enum TokenVesting.ScheduleType => uint256)"
									},
									"typeName": {
										"id": 3921,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3919,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3918,
												"name": "ScheduleType",
												"nameLocations": [
													"1696:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3904,
												"src": "1696:12:8"
											},
											"referencedDeclaration": 3904,
											"src": "1696:12:8",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_ScheduleType_$3904",
												"typeString": "enum TokenVesting.ScheduleType"
											}
										},
										"nodeType": "Mapping",
										"src": "1688:32:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_enum$_ScheduleType_$3904_$_t_uint256_$",
											"typeString": "mapping(enum TokenVesting.ScheduleType => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3920,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1712:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "406a99af",
									"id": 3927,
									"mutability": "mutable",
									"name": "maxVestingByType",
									"nameLocation": "1791:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 4575,
									"src": "1751:56:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_enum$_ScheduleType_$3904_$_t_uint256_$",
										"typeString": "mapping(enum TokenVesting.ScheduleType => uint256)"
									},
									"typeName": {
										"id": 3926,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3924,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3923,
												"name": "ScheduleType",
												"nameLocations": [
													"1759:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3904,
												"src": "1759:12:8"
											},
											"referencedDeclaration": 3904,
											"src": "1759:12:8",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_ScheduleType_$3904",
												"typeString": "enum TokenVesting.ScheduleType"
											}
										},
										"nodeType": "Mapping",
										"src": "1751:32:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_enum$_ScheduleType_$3904_$_t_uint256_$",
											"typeString": "mapping(enum TokenVesting.ScheduleType => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3925,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1775:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c741d92f",
									"id": 3929,
									"mutability": "mutable",
									"name": "vestingSchedulesCount",
									"nameLocation": "1833:21:8",
									"nodeType": "VariableDeclaration",
									"scope": 4575,
									"src": "1818:36:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3928,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1818:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "61d027b3",
									"id": 3931,
									"mutability": "mutable",
									"name": "treasury",
									"nameLocation": "1875:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 4575,
									"src": "1860:23:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3930,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1860:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "95b841d5d108f82fdbc6acd22e5cc30bf7a7c9ddb0ddfb615d3ee5adc61b0967",
									"id": 3942,
									"name": "VestingScheduleCreated",
									"nameLocation": "1910:22:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3933,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "1958:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 3942,
												"src": "1942:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1942:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3935,
												"indexed": true,
												"mutability": "mutable",
												"name": "scheduleId",
												"nameLocation": "1995:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3942,
												"src": "1979:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1979:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3938,
												"indexed": false,
												"mutability": "mutable",
												"name": "scheduleType",
												"nameLocation": "2028:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 3942,
												"src": "2015:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_ScheduleType_$3904",
													"typeString": "enum TokenVesting.ScheduleType"
												},
												"typeName": {
													"id": 3937,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3936,
														"name": "ScheduleType",
														"nameLocations": [
															"2015:12:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3904,
														"src": "2015:12:8"
													},
													"referencedDeclaration": 3904,
													"src": "2015:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ScheduleType_$3904",
														"typeString": "enum TokenVesting.ScheduleType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3940,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2058:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 3942,
												"src": "2050:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2050:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1932:138:8"
									},
									"src": "1904:167:8"
								},
								{
									"anonymous": false,
									"eventSelector": "5369437781e041afe7013c48748bcb5985473926a60448846c64d514908aa8fc",
									"id": 3950,
									"name": "VestingScheduleRevoked",
									"nameLocation": "2083:22:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3944,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "2131:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 3950,
												"src": "2115:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2115:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3946,
												"indexed": true,
												"mutability": "mutable",
												"name": "scheduleId",
												"nameLocation": "2168:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3950,
												"src": "2152:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2152:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3948,
												"indexed": false,
												"mutability": "mutable",
												"name": "refundAmount",
												"nameLocation": "2196:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 3950,
												"src": "2188:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2188:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2105:109:8"
									},
									"src": "2077:138:8"
								},
								{
									"anonymous": false,
									"eventSelector": "c5c52c2a9175470464d5ea4429889e7df2ea88630a3d32f4d0d3d2d448656210",
									"id": 3958,
									"name": "TokensReleased",
									"nameLocation": "2227:14:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3952,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "2267:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 3958,
												"src": "2251:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2251:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3954,
												"indexed": true,
												"mutability": "mutable",
												"name": "scheduleId",
												"nameLocation": "2304:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3958,
												"src": "2288:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2288:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3956,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2332:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 3958,
												"src": "2324:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2241:103:8"
									},
									"src": "2221:124:8"
								},
								{
									"anonymous": false,
									"eventSelector": "4ab5be82436d353e61ca18726e984e561f5c1cc7c6d38b29d2553c790434705a",
									"id": 3964,
									"name": "TreasuryUpdated",
									"nameLocation": "2357:15:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3960,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldTreasury",
												"nameLocation": "2398:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 3964,
												"src": "2382:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2382:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3962,
												"indexed": true,
												"mutability": "mutable",
												"name": "newTreasury",
												"nameLocation": "2435:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 3964,
												"src": "2419:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2419:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2372:80:8"
									},
									"src": "2351:102:8"
								},
								{
									"body": {
										"id": 4062,
										"nodeType": "Block",
										"src": "2758:674:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3978,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3969,
																"src": "2776:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3981,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2794:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3980,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2786:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3979,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2786:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 3982,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2786:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2776:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e2061646472657373",
															"id": 3984,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2798:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															},
															"value": "Invalid token address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															}
														],
														"id": 3977,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2768:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2768:54:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3986,
												"nodeType": "ExpressionStatement",
												"src": "2768:54:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3988,
																"name": "_treasury",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3971,
																"src": "2840:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3991,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2861:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2853:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3989,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2853:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 3992,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2853:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2840:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642074726561737572792061646472657373",
															"id": 3994,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2865:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f",
																"typeString": "literal_string \"Invalid treasury address\""
															},
															"value": "Invalid treasury address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f",
																"typeString": "literal_string \"Invalid treasury address\""
															}
														],
														"id": 3987,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2832:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2832:60:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3996,
												"nodeType": "ExpressionStatement",
												"src": "2832:60:8"
											},
											{
												"expression": {
													"id": 4001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3997,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3907,
														"src": "2911:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3999,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3969,
																"src": "2926:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3998,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "2919:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 4000,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2919:14:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"src": "2911:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"id": 4002,
												"nodeType": "ExpressionStatement",
												"src": "2911:22:8"
											},
											{
												"expression": {
													"id": 4005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4003,
														"name": "treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3931,
														"src": "2943:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4004,
														"name": "_treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3971,
														"src": "2954:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2943:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 4006,
												"nodeType": "ExpressionStatement",
												"src": "2943:20:8"
											},
											{
												"expression": {
													"id": 4016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 4007,
															"name": "maxVestingByType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3927,
															"src": "3024:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_ScheduleType_$3904_$_t_uint256_$",
																"typeString": "mapping(enum TokenVesting.ScheduleType => uint256)"
															}
														},
														"id": 4010,
														"indexExpression": {
															"expression": {
																"id": 4008,
																"name": "ScheduleType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3904,
																"src": "3041:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_ScheduleType_$3904_$",
																	"typeString": "type(enum TokenVesting.ScheduleType)"
																}
															},
															"id": 4009,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3054:4:8",
															"memberName": "TEAM",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3899,
															"src": "3041:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_ScheduleType_$3904",
																"typeString": "enum TokenVesting.ScheduleType"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3024:35:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_150000000000000000000000000_by_1",
															"typeString": "int_const 150000000000000000000000000"
														},
														"id": 4015,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3135305f3030305f303030",
															"id": 4011,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3062:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_150000000_by_1",
																"typeString": "int_const 150000000"
															},
															"value": "150_000_000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 4014,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 4012,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3076:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 4013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3080:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "3076:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "3062:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_150000000000000000000000000_by_1",
															"typeString": "int_const 150000000000000000000000000"
														}
													},
													"src": "3024:58:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4017,
												"nodeType": "ExpressionStatement",
												"src": "3024:58:8"
											},
											{
												"expression": {
													"id": 4027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 4018,
															"name": "maxVestingByType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3927,
															"src": "3106:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_ScheduleType_$3904_$_t_uint256_$",
																"typeString": "mapping(enum TokenVesting.ScheduleType => uint256)"
															}
														},
														"id": 4021,
														"indexExpression": {
															"expression": {
																"id": 4019,
																"name": "ScheduleType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3904,
																"src": "3123:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_ScheduleType_$3904_$",
																	"typeString": "type(enum TokenVesting.ScheduleType)"
																}
															},
															"id": 4020,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3136:9:8",
															"memberName": "ECOSYSTEM",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3900,
															"src": "3123:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_ScheduleType_$3904",
																"typeString": "enum TokenVesting.ScheduleType"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3106:40:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_250000000000000000000000000_by_1",
															"typeString": "int_const 250000000000000000000000000"
														},
														"id": 4026,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3235305f3030305f303030",
															"id": 4022,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3149:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_250000000_by_1",
																"typeString": "int_const 250000000"
															},
															"value": "250_000_000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 4025,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 4023,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3163:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 4024,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3167:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "3163:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "3149:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_250000000000000000000000000_by_1",
															"typeString": "int_const 250000000000000000000000000"
														}
													},
													"src": "3106:63:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4028,
												"nodeType": "ExpressionStatement",
												"src": "3106:63:8"
											},
											{
												"expression": {
													"id": 4038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 4029,
															"name": "maxVestingByType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3927,
															"src": "3188:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_ScheduleType_$3904_$_t_uint256_$",
																"typeString": "mapping(enum TokenVesting.ScheduleType => uint256)"
															}
														},
														"id": 4032,
														"indexExpression": {
															"expression": {
																"id": 4030,
																"name": "ScheduleType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3904,
																"src": "3205:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_ScheduleType_$3904_$",
																	"typeString": "type(enum TokenVesting.ScheduleType)"
																}
															},
															"id": 4031,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3218:9:8",
															"memberName": "COMMUNITY",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3901,
															"src": "3205:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_ScheduleType_$3904",
																"typeString": "enum TokenVesting.ScheduleType"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3188:40:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_50000000000000000000000000_by_1",
															"typeString": "int_const 50000000000000000000000000"
														},
														"id": 4037,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "35305f3030305f303030",
															"id": 4033,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3231:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_50000000_by_1",
																"typeString": "int_const 50000000"
															},
															"value": "50_000_000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 4036,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 4034,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3244:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 4035,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3248:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "3244:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "3231:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_50000000000000000000000000_by_1",
															"typeString": "int_const 50000000000000000000000000"
														}
													},
													"src": "3188:62:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4039,
												"nodeType": "ExpressionStatement",
												"src": "3188:62:8"
											},
											{
												"expression": {
													"id": 4049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 4040,
															"name": "maxVestingByType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3927,
															"src": "3269:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_ScheduleType_$3904_$_t_uint256_$",
																"typeString": "mapping(enum TokenVesting.ScheduleType => uint256)"
															}
														},
														"id": 4043,
														"indexExpression": {
															"expression": {
																"id": 4041,
																"name": "ScheduleType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3904,
																"src": "3286:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_ScheduleType_$3904_$",
																	"typeString": "type(enum TokenVesting.ScheduleType)"
																}
															},
															"id": 4042,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3299:12:8",
															"memberName": "PRIVATE_SALE",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3902,
															"src": "3286:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_ScheduleType_$3904",
																"typeString": "enum TokenVesting.ScheduleType"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3269:43:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_200000000000000000000000000_by_1",
															"typeString": "int_const 200000000000000000000000000"
														},
														"id": 4048,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3230305f3030305f303030",
															"id": 4044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3315:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_200000000_by_1",
																"typeString": "int_const 200000000"
															},
															"value": "200_000_000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 4047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 4045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3329:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 4046,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3333:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "3329:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "3315:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_200000000000000000000000000_by_1",
															"typeString": "int_const 200000000000000000000000000"
														}
													},
													"src": "3269:66:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4050,
												"nodeType": "ExpressionStatement",
												"src": "3269:66:8"
											},
											{
												"expression": {
													"id": 4060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 4051,
															"name": "maxVestingByType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3927,
															"src": "3352:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_ScheduleType_$3904_$_t_uint256_$",
																"typeString": "mapping(enum TokenVesting.ScheduleType => uint256)"
															}
														},
														"id": 4054,
														"indexExpression": {
															"expression": {
																"id": 4052,
																"name": "ScheduleType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3904,
																"src": "3369:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_ScheduleType_$3904_$",
																	"typeString": "type(enum TokenVesting.ScheduleType)"
																}
															},
															"id": 4053,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3382:11:8",
															"memberName": "PUBLIC_SALE",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3903,
															"src": "3369:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_ScheduleType_$3904",
																"typeString": "enum TokenVesting.ScheduleType"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3352:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_200000000000000000000000000_by_1",
															"typeString": "int_const 200000000000000000000000000"
														},
														"id": 4059,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3230305f3030305f303030",
															"id": 4055,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3397:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_200000000_by_1",
																"typeString": "int_const 200000000"
															},
															"value": "200_000_000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 4058,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 4056,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3411:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 4057,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3415:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "3411:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "3397:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_200000000000000000000000000_by_1",
															"typeString": "int_const 200000000000000000000000000"
														}
													},
													"src": "3352:65:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4061,
												"nodeType": "ExpressionStatement",
												"src": "3352:65:8"
											}
										]
									},
									"documentation": {
										"id": 3965,
										"nodeType": "StructuredDocumentation",
										"src": "2459:173:8",
										"text": " @notice Constructor\n @param initialOwner Initial owner address\n @param _token CipherZeroToken address\n @param _treasury Treasury address"
									},
									"id": 4063,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3974,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3967,
													"src": "2744:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3975,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3973,
												"name": "Ownable",
												"nameLocations": [
													"2736:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2736:7:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2736:21:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3967,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2666:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 4063,
												"src": "2658:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2658:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3969,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "2696:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 4063,
												"src": "2688:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2688:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3971,
												"mutability": "mutable",
												"name": "_treasury",
												"nameLocation": "2720:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 4063,
												"src": "2712:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2648:87:8"
									},
									"returnParameters": {
										"id": 3976,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2758:0:8"
									},
									"scope": 4575,
									"src": "2637:795:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4204,
										"nodeType": "Block",
										"src": "3780:1474:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 4092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4087,
																"name": "beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4066,
																"src": "3798:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 4090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3821:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 4089,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3813:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 4088,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3813:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 4091,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3813:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3798:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642062656e6566696369617279",
															"id": 4093,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3825:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_86f5acfc12d2804bcf816c0b4c171086bf03352ff286fda75ac8ea27fcfb10a6",
																"typeString": "literal_string \"Invalid beneficiary\""
															},
															"value": "Invalid beneficiary"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_86f5acfc12d2804bcf816c0b4c171086bf03352ff286fda75ac8ea27fcfb10a6",
																"typeString": "literal_string \"Invalid beneficiary\""
															}
														],
														"id": 4086,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3790:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3790:57:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4095,
												"nodeType": "ExpressionStatement",
												"src": "3790:57:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4097,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4071,
																"src": "3865:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 4098,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3874:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3865:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265203e2030",
															"id": 4100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3877:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															},
															"value": "Amount must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															}
														],
														"id": 4096,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3857:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3857:41:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4102,
												"nodeType": "ExpressionStatement",
												"src": "3857:41:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4104,
																"name": "duration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4075,
																"src": "3916:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 4105,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3927:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3916:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4475726174696f6e206d757374206265203e2030",
															"id": 4107,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3930:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e11b6d2923bf8c6b9080d06aaf81f8e74ef4ded2c8e4af3b95302a90884a4cd",
																"typeString": "literal_string \"Duration must be > 0\""
															},
															"value": "Duration must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e11b6d2923bf8c6b9080d06aaf81f8e74ef4ded2c8e4af3b95302a90884a4cd",
																"typeString": "literal_string \"Duration must be > 0\""
															}
														],
														"id": 4103,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3908:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3908:45:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4109,
												"nodeType": "ExpressionStatement",
												"src": "3908:45:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4111,
																"name": "slicePeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4079,
																"src": "3971:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 4112,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3985:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3971:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536c69636520706572696f64206d757374206265203e2030",
															"id": 4114,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3988:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d1c2f089122507431dd9d494d2cf4fefdf06d00288bbafa96c6a6e2065fe14eb",
																"typeString": "literal_string \"Slice period must be > 0\""
															},
															"value": "Slice period must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d1c2f089122507431dd9d494d2cf4fefdf06d00288bbafa96c6a6e2065fe14eb",
																"typeString": "literal_string \"Slice period must be > 0\""
															}
														],
														"id": 4110,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3963:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3963:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4116,
												"nodeType": "ExpressionStatement",
												"src": "3963:52:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4118,
																"name": "duration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4075,
																"src": "4033:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 4119,
																"name": "cliffDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4077,
																"src": "4045:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4033:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420636c696666",
															"id": 4121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4060:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7609fdeb66ef185b0ab9b10cb3ae60da48e9f5646a1e7f7a361af9ccee074fe8",
																"typeString": "literal_string \"Invalid cliff\""
															},
															"value": "Invalid cliff"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7609fdeb66ef185b0ab9b10cb3ae60da48e9f5646a1e7f7a361af9ccee074fe8",
																"typeString": "literal_string \"Invalid cliff\""
															}
														],
														"id": 4117,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4025:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4123,
												"nodeType": "ExpressionStatement",
												"src": "4025:51:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4125,
																"name": "startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4073,
																"src": "4094:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 4126,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4107:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 4127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4113:9:8",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4107:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4094:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53746172742074696d65203c206e6f77",
															"id": 4129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4124:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5eaaf55bf9d9f97938479748e848dd6476dc31a543a1019ebd0759947c618e8e",
																"typeString": "literal_string \"Start time < now\""
															},
															"value": "Start time < now"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5eaaf55bf9d9f97938479748e848dd6476dc31a543a1019ebd0759947c618e8e",
																"typeString": "literal_string \"Start time < now\""
															}
														],
														"id": 4124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4086:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4086:57:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4131,
												"nodeType": "ExpressionStatement",
												"src": "4086:57:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 4133,
																		"name": "totalVestedByType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3922,
																		"src": "4230:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_enum$_ScheduleType_$3904_$_t_uint256_$",
																			"typeString": "mapping(enum TokenVesting.ScheduleType => uint256)"
																		}
																	},
																	"id": 4135,
																	"indexExpression": {
																		"id": 4134,
																		"name": "scheduleType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4069,
																		"src": "4248:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_ScheduleType_$3904",
																			"typeString": "enum TokenVesting.ScheduleType"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4230:31:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 4136,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4071,
																	"src": "4264:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4230:40:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 4138,
																	"name": "maxVestingByType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3927,
																	"src": "4274:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_enum$_ScheduleType_$3904_$_t_uint256_$",
																		"typeString": "mapping(enum TokenVesting.ScheduleType => uint256)"
																	}
																},
																"id": 4140,
																"indexExpression": {
																	"id": 4139,
																	"name": "scheduleType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4069,
																	"src": "4291:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_ScheduleType_$3904",
																		"typeString": "enum TokenVesting.ScheduleType"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4274:30:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4230:74:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45786365656473206d61782076657374696e67",
															"id": 4142,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4318:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6fe28c5722971779f2b977be3122d0195d3bb5faa8ea279e735f59ae57aaad2f",
																"typeString": "literal_string \"Exceeds max vesting\""
															},
															"value": "Exceeds max vesting"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6fe28c5722971779f2b977be3122d0195d3bb5faa8ea279e735f59ae57aaad2f",
																"typeString": "literal_string \"Exceeds max vesting\""
															}
														],
														"id": 4132,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4209:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4209:140:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4144,
												"nodeType": "ExpressionStatement",
												"src": "4209:140:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 4148,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4439:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 4149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4443:6:8",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4439:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 4152,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4459:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_TokenVesting_$4575",
																				"typeString": "contract TokenVesting"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_TokenVesting_$4575",
																				"typeString": "contract TokenVesting"
																			}
																		],
																		"id": 4151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4451:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 4150,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4451:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4451:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 4154,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4071,
																	"src": "4466:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 4146,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3907,
																	"src": "4420:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 4147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4426:12:8",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 224,
																"src": "4420:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 4155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4420:53:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 4156,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4487:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 4145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4399:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4399:115:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4158,
												"nodeType": "ExpressionStatement",
												"src": "4399:115:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 4164,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4071,
																	"src": "4630:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 4165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4666:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"id": 4166,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4073,
																	"src": "4692:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 4167,
																	"name": "duration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4075,
																	"src": "4725:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 4168,
																	"name": "cliffDuration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4077,
																	"src": "4762:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 4169,
																	"name": "slicePeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4079,
																	"src": "4802:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 4170,
																	"name": "revocable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4081,
																	"src": "4838:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "66616c7365",
																	"id": 4171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4870:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 4163,
																"name": "VestingSchedule",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3898,
																"src": "4587:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_VestingSchedule_$3898_storage_ptr_$",
																	"typeString": "type(struct TokenVesting.VestingSchedule storage pointer)"
																}
															},
															"id": 4172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"4617:11:8",
																"4650:14:8",
																"4681:9:8",
																"4715:8:8",
																"4747:13:8",
																"4789:11:8",
																"4827:9:8",
																"4861:7:8"
															],
															"names": [
																"totalAmount",
																"releasedAmount",
																"startTime",
																"duration",
																"cliffDuration",
																"slicePeriod",
																"revocable",
																"revoked"
															],
															"nodeType": "FunctionCall",
															"src": "4587:299:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VestingSchedule_$3898_memory_ptr",
																"typeString": "struct TokenVesting.VestingSchedule memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_VestingSchedule_$3898_memory_ptr",
																"typeString": "struct TokenVesting.VestingSchedule memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 4159,
																"name": "vestingSchedules",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3913,
																"src": "4552:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_VestingSchedule_$3898_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct TokenVesting.VestingSchedule storage ref[] storage ref)"
																}
															},
															"id": 4161,
															"indexExpression": {
																"id": 4160,
																"name": "beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4066,
																"src": "4569:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4552:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_VestingSchedule_$3898_storage_$dyn_storage",
																"typeString": "struct TokenVesting.VestingSchedule storage ref[] storage ref"
															}
														},
														"id": 4162,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4582:4:8",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "4552:34:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_VestingSchedule_$3898_storage_$dyn_storage_ptr_$_t_struct$_VestingSchedule_$3898_storage_$returns$__$attached_to$_t_array$_t_struct$_VestingSchedule_$3898_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct TokenVesting.VestingSchedule storage ref[] storage pointer,struct TokenVesting.VestingSchedule storage ref)"
														}
													},
													"id": 4173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4552:335:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4174,
												"nodeType": "ExpressionStatement",
												"src": "4552:335:8"
											},
											{
												"expression": {
													"id": 4178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "4925:35:8",
													"subExpression": {
														"baseExpression": {
															"id": 4175,
															"name": "vestingScheduleCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3917,
															"src": "4925:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 4177,
														"indexExpression": {
															"id": 4176,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4066,
															"src": "4946:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4925:33:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4179,
												"nodeType": "ExpressionStatement",
												"src": "4925:35:8"
											},
											{
												"expression": {
													"id": 4181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "4970:23:8",
													"subExpression": {
														"id": 4180,
														"name": "vestingSchedulesCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3929,
														"src": "4970:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4182,
												"nodeType": "ExpressionStatement",
												"src": "4970:23:8"
											},
											{
												"expression": {
													"id": 4191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 4183,
															"name": "totalVestedByType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3922,
															"src": "5003:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_ScheduleType_$3904_$_t_uint256_$",
																"typeString": "mapping(enum TokenVesting.ScheduleType => uint256)"
															}
														},
														"id": 4185,
														"indexExpression": {
															"id": 4184,
															"name": "scheduleType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4069,
															"src": "5021:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_ScheduleType_$3904",
																"typeString": "enum TokenVesting.ScheduleType"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5003:31:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 4186,
																"name": "totalVestedByType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3922,
																"src": "5037:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_enum$_ScheduleType_$3904_$_t_uint256_$",
																	"typeString": "mapping(enum TokenVesting.ScheduleType => uint256)"
																}
															},
															"id": 4188,
															"indexExpression": {
																"id": 4187,
																"name": "scheduleType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4069,
																"src": "5055:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_ScheduleType_$3904",
																	"typeString": "enum TokenVesting.ScheduleType"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5037:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 4189,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4071,
															"src": "5071:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5037:40:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5003:74:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4192,
												"nodeType": "ExpressionStatement",
												"src": "5003:74:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 4194,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4066,
															"src": "5129:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 4195,
																	"name": "vestingScheduleCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3917,
																	"src": "5154:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 4197,
																"indexExpression": {
																	"id": 4196,
																	"name": "beneficiary",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4066,
																	"src": "5175:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5154:33:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 4198,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5190:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "5154:37:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 4200,
															"name": "scheduleType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4069,
															"src": "5205:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_ScheduleType_$3904",
																"typeString": "enum TokenVesting.ScheduleType"
															}
														},
														{
															"id": 4201,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4071,
															"src": "5231:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_enum$_ScheduleType_$3904",
																"typeString": "enum TokenVesting.ScheduleType"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4193,
														"name": "VestingScheduleCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3942,
														"src": "5093:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_enum$_ScheduleType_$3904_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,enum TokenVesting.ScheduleType,uint256)"
														}
													},
													"id": 4202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5093:154:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4203,
												"nodeType": "EmitStatement",
												"src": "5088:159:8"
											}
										]
									},
									"documentation": {
										"id": 4064,
										"nodeType": "StructuredDocumentation",
										"src": "3438:56:8",
										"text": " @notice Create a new vesting schedule"
									},
									"functionSelector": "4f86f440",
									"id": 4205,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4084,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4083,
												"name": "onlyOwner",
												"nameLocations": [
													"3770:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3770:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3770:9:8"
										}
									],
									"name": "createVestingSchedule",
									"nameLocation": "3508:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4066,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "3547:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 4205,
												"src": "3539:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4069,
												"mutability": "mutable",
												"name": "scheduleType",
												"nameLocation": "3581:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 4205,
												"src": "3568:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_ScheduleType_$3904",
													"typeString": "enum TokenVesting.ScheduleType"
												},
												"typeName": {
													"id": 4068,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4067,
														"name": "ScheduleType",
														"nameLocations": [
															"3568:12:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3904,
														"src": "3568:12:8"
													},
													"referencedDeclaration": 3904,
													"src": "3568:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ScheduleType_$3904",
														"typeString": "enum TokenVesting.ScheduleType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4071,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3611:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 4205,
												"src": "3603:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3603:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4073,
												"mutability": "mutable",
												"name": "startTime",
												"nameLocation": "3635:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 4205,
												"src": "3627:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3627:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4075,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "3662:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 4205,
												"src": "3654:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3654:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4077,
												"mutability": "mutable",
												"name": "cliffDuration",
												"nameLocation": "3688:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 4205,
												"src": "3680:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3680:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4079,
												"mutability": "mutable",
												"name": "slicePeriod",
												"nameLocation": "3719:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 4205,
												"src": "3711:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3711:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4081,
												"mutability": "mutable",
												"name": "revocable",
												"nameLocation": "3745:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 4205,
												"src": "3740:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4080,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3740:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3529:231:8"
									},
									"returnParameters": {
										"id": 4085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3780:0:8"
									},
									"scope": 4575,
									"src": "3499:1755:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 4284,
										"nodeType": "Block",
										"src": "5387:742:8",
										"statements": [
											{
												"assignments": [
													4215
												],
												"declarations": [
													{
														"constant": false,
														"id": 4215,
														"mutability": "mutable",
														"name": "schedule",
														"nameLocation": "5421:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 4284,
														"src": "5397:32:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VestingSchedule_$3898_storage_ptr",
															"typeString": "struct TokenVesting.VestingSchedule"
														},
														"typeName": {
															"id": 4214,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 4213,
																"name": "VestingSchedule",
																"nameLocations": [
																	"5397:15:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 3898,
																"src": "5397:15:8"
															},
															"referencedDeclaration": 3898,
															"src": "5397:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VestingSchedule_$3898_storage_ptr",
																"typeString": "struct TokenVesting.VestingSchedule"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4222,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 4216,
															"name": "vestingSchedules",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3913,
															"src": "5432:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_VestingSchedule_$3898_storage_$dyn_storage_$",
																"typeString": "mapping(address => struct TokenVesting.VestingSchedule storage ref[] storage ref)"
															}
														},
														"id": 4219,
														"indexExpression": {
															"expression": {
																"id": 4217,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5449:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5453:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5449:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5432:28:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_VestingSchedule_$3898_storage_$dyn_storage",
															"typeString": "struct TokenVesting.VestingSchedule storage ref[] storage ref"
														}
													},
													"id": 4221,
													"indexExpression": {
														"id": 4220,
														"name": "scheduleId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4208,
														"src": "5461:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5432:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VestingSchedule_$3898_storage",
														"typeString": "struct TokenVesting.VestingSchedule storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5397:75:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 4224,
																	"name": "schedule",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4215,
																	"src": "5490:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_VestingSchedule_$3898_storage_ptr",
																		"typeString": "struct TokenVesting.VestingSchedule storage pointer"
																	}
																},
																"id": 4225,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5499:11:8",
																"memberName": "totalAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3883,
																"src": "5490:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 4226,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5513:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5490:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2073756368207363686564756c65",
															"id": 4228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5516:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d4a284eb2ad24c8d181edd202519e12da1302159cff115aa7f2a0b89fe640b6b",
																"typeString": "literal_string \"No such schedule\""
															},
															"value": "No such schedule"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d4a284eb2ad24c8d181edd202519e12da1302159cff115aa7f2a0b89fe640b6b",
																"typeString": "literal_string \"No such schedule\""
															}
														],
														"id": 4223,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5482:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5482:53:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4230,
												"nodeType": "ExpressionStatement",
												"src": "5482:53:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5553:17:8",
															"subExpression": {
																"expression": {
																	"id": 4232,
																	"name": "schedule",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4215,
																	"src": "5554:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_VestingSchedule_$3898_storage_ptr",
																		"typeString": "struct TokenVesting.VestingSchedule storage pointer"
																	}
																},
																"id": 4233,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5563:7:8",
																"memberName": "revoked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3897,
																"src": "5554:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5363686564756c65207265766f6b6564",
															"id": 4235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5572:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7dd278aa17797342e944a43d303dc8e5144706eff3594a9fda0ea14806aeeeaf",
																"typeString": "literal_string \"Schedule revoked\""
															},
															"value": "Schedule revoked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7dd278aa17797342e944a43d303dc8e5144706eff3594a9fda0ea14806aeeeaf",
																"typeString": "literal_string \"Schedule revoked\""
															}
														],
														"id": 4231,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5545:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5545:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4237,
												"nodeType": "ExpressionStatement",
												"src": "5545:46:8"
											},
											{
												"assignments": [
													4239
												],
												"declarations": [
													{
														"constant": false,
														"id": 4239,
														"mutability": "mutable",
														"name": "vestedAmount",
														"nameLocation": "5610:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 4284,
														"src": "5602:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4238,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5602:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4243,
												"initialValue": {
													"arguments": [
														{
															"id": 4241,
															"name": "schedule",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4215,
															"src": "5646:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VestingSchedule_$3898_storage_ptr",
																"typeString": "struct TokenVesting.VestingSchedule storage pointer"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_VestingSchedule_$3898_storage_ptr",
																"typeString": "struct TokenVesting.VestingSchedule storage pointer"
															}
														],
														"id": 4240,
														"name": "_computeVestedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4447,
														"src": "5625:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_VestingSchedule_$3898_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct TokenVesting.VestingSchedule memory) view returns (uint256)"
														}
													},
													"id": 4242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5625:30:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5602:53:8"
											},
											{
												"assignments": [
													4245
												],
												"declarations": [
													{
														"constant": false,
														"id": 4245,
														"mutability": "mutable",
														"name": "releasableAmount",
														"nameLocation": "5673:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 4284,
														"src": "5665:24:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4244,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5665:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4250,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4246,
														"name": "vestedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4239,
														"src": "5692:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 4247,
															"name": "schedule",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4215,
															"src": "5707:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VestingSchedule_$3898_storage_ptr",
																"typeString": "struct TokenVesting.VestingSchedule storage pointer"
															}
														},
														"id": 4248,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5716:14:8",
														"memberName": "releasedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3885,
														"src": "5707:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5692:38:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5665:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4252,
																"name": "releasableAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4245,
																"src": "5748:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 4253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5767:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5748:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e7320746f2072656c65617365",
															"id": 4255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5770:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914",
																"typeString": "literal_string \"No tokens to release\""
															},
															"value": "No tokens to release"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914",
																"typeString": "literal_string \"No tokens to release\""
															}
														],
														"id": 4251,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5740:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5740:53:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4257,
												"nodeType": "ExpressionStatement",
												"src": "5740:53:8"
											},
											{
												"expression": {
													"id": 4265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4258,
															"name": "schedule",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4215,
															"src": "5838:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VestingSchedule_$3898_storage_ptr",
																"typeString": "struct TokenVesting.VestingSchedule storage pointer"
															}
														},
														"id": 4260,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5847:14:8",
														"memberName": "releasedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3885,
														"src": "5838:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 4261,
																"name": "schedule",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4215,
																"src": "5864:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VestingSchedule_$3898_storage_ptr",
																	"typeString": "struct TokenVesting.VestingSchedule storage pointer"
																}
															},
															"id": 4262,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5873:14:8",
															"memberName": "releasedAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3885,
															"src": "5864:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 4263,
															"name": "releasableAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4245,
															"src": "5890:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5864:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5838:68:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4266,
												"nodeType": "ExpressionStatement",
												"src": "5838:68:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 4270,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5980:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 4271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5984:6:8",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5980:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 4272,
																	"name": "releasableAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4245,
																	"src": "5992:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 4268,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3907,
																	"src": "5965:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 4269,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5971:8:8",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 192,
																"src": "5965:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 4273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5965:44:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 4274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6023:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 4267,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5944:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5944:106:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4276,
												"nodeType": "ExpressionStatement",
												"src": "5944:106:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 4278,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6081:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6085:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6081:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4280,
															"name": "scheduleId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4208,
															"src": "6093:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 4281,
															"name": "releasableAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4245,
															"src": "6105:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4277,
														"name": "TokensReleased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3958,
														"src": "6066:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 4282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6066:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4283,
												"nodeType": "EmitStatement",
												"src": "6061:61:8"
											}
										]
									},
									"documentation": {
										"id": 4206,
										"nodeType": "StructuredDocumentation",
										"src": "5260:63:8",
										"text": " @notice Release vested tokens for a schedule"
									},
									"functionSelector": "37bdc99b",
									"id": 4285,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4211,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4210,
												"name": "nonReentrant",
												"nameLocations": [
													"5374:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 457,
												"src": "5374:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5374:12:8"
										}
									],
									"name": "release",
									"nameLocation": "5337:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4208,
												"mutability": "mutable",
												"name": "scheduleId",
												"nameLocation": "5353:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 4285,
												"src": "5345:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5345:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5344:20:8"
									},
									"returnParameters": {
										"id": 4212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5387:0:8"
									},
									"scope": 4575,
									"src": "5328:801:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 4364,
										"nodeType": "Block",
										"src": "6290:806:8",
										"statements": [
											{
												"assignments": [
													4297
												],
												"declarations": [
													{
														"constant": false,
														"id": 4297,
														"mutability": "mutable",
														"name": "schedule",
														"nameLocation": "6324:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 4364,
														"src": "6300:32:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VestingSchedule_$3898_storage_ptr",
															"typeString": "struct TokenVesting.VestingSchedule"
														},
														"typeName": {
															"id": 4296,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 4295,
																"name": "VestingSchedule",
																"nameLocations": [
																	"6300:15:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 3898,
																"src": "6300:15:8"
															},
															"referencedDeclaration": 3898,
															"src": "6300:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VestingSchedule_$3898_storage_ptr",
																"typeString": "struct TokenVesting.VestingSchedule"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4303,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 4298,
															"name": "vestingSchedules",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3913,
															"src": "6335:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_VestingSchedule_$3898_storage_$dyn_storage_$",
																"typeString": "mapping(address => struct TokenVesting.VestingSchedule storage ref[] storage ref)"
															}
														},
														"id": 4300,
														"indexExpression": {
															"id": 4299,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4288,
															"src": "6352:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6335:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_VestingSchedule_$3898_storage_$dyn_storage",
															"typeString": "struct TokenVesting.VestingSchedule storage ref[] storage ref"
														}
													},
													"id": 4302,
													"indexExpression": {
														"id": 4301,
														"name": "scheduleId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4290,
														"src": "6365:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6335:41:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VestingSchedule_$3898_storage",
														"typeString": "struct TokenVesting.VestingSchedule storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6300:76:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 4305,
																	"name": "schedule",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4297,
																	"src": "6394:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_VestingSchedule_$3898_storage_ptr",
																		"typeString": "struct TokenVesting.VestingSchedule storage pointer"
																	}
																},
																"id": 4306,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6403:11:8",
																"memberName": "totalAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3883,
																"src": "6394:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 4307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6417:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6394:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2073756368207363686564756c65",
															"id": 4309,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6420:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d4a284eb2ad24c8d181edd202519e12da1302159cff115aa7f2a0b89fe640b6b",
																"typeString": "literal_string \"No such schedule\""
															},
															"value": "No such schedule"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d4a284eb2ad24c8d181edd202519e12da1302159cff115aa7f2a0b89fe640b6b",
																"typeString": "literal_string \"No such schedule\""
															}
														],
														"id": 4304,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6386:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6386:53:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4311,
												"nodeType": "ExpressionStatement",
												"src": "6386:53:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 4313,
																"name": "schedule",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4297,
																"src": "6457:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VestingSchedule_$3898_storage_ptr",
																	"typeString": "struct TokenVesting.VestingSchedule storage pointer"
																}
															},
															"id": 4314,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6466:9:8",
															"memberName": "revocable",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3895,
															"src": "6457:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74207265766f6361626c65",
															"id": 4315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6477:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64647ace897cb78bcca4304ab6d973e351886063fea5beb49e3bdcaa10dcf429",
																"typeString": "literal_string \"Not revocable\""
															},
															"value": "Not revocable"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_64647ace897cb78bcca4304ab6d973e351886063fea5beb49e3bdcaa10dcf429",
																"typeString": "literal_string \"Not revocable\""
															}
														],
														"id": 4312,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6449:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6449:44:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4317,
												"nodeType": "ExpressionStatement",
												"src": "6449:44:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6511:17:8",
															"subExpression": {
																"expression": {
																	"id": 4319,
																	"name": "schedule",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4297,
																	"src": "6512:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_VestingSchedule_$3898_storage_ptr",
																		"typeString": "struct TokenVesting.VestingSchedule storage pointer"
																	}
																},
																"id": 4320,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6521:7:8",
																"memberName": "revoked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3897,
																"src": "6512:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c7265616479207265766f6b6564",
															"id": 4322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6530:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ff30964d1d2e395450954287443a47ce4b7aeb0e55cf0d440f942617fe7e784c",
																"typeString": "literal_string \"Already revoked\""
															},
															"value": "Already revoked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ff30964d1d2e395450954287443a47ce4b7aeb0e55cf0d440f942617fe7e784c",
																"typeString": "literal_string \"Already revoked\""
															}
														],
														"id": 4318,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6503:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6503:45:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4324,
												"nodeType": "ExpressionStatement",
												"src": "6503:45:8"
											},
											{
												"assignments": [
													4326
												],
												"declarations": [
													{
														"constant": false,
														"id": 4326,
														"mutability": "mutable",
														"name": "vestedAmount",
														"nameLocation": "6620:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 4364,
														"src": "6612:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4325,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6612:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4330,
												"initialValue": {
													"arguments": [
														{
															"id": 4328,
															"name": "schedule",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4297,
															"src": "6656:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VestingSchedule_$3898_storage_ptr",
																"typeString": "struct TokenVesting.VestingSchedule storage pointer"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_VestingSchedule_$3898_storage_ptr",
																"typeString": "struct TokenVesting.VestingSchedule storage pointer"
															}
														],
														"id": 4327,
														"name": "_computeVestedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4447,
														"src": "6635:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_VestingSchedule_$3898_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct TokenVesting.VestingSchedule memory) view returns (uint256)"
														}
													},
													"id": 4329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6635:30:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6612:53:8"
											},
											{
												"assignments": [
													4332
												],
												"declarations": [
													{
														"constant": false,
														"id": 4332,
														"mutability": "mutable",
														"name": "refundAmount",
														"nameLocation": "6683:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 4364,
														"src": "6675:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4331,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6675:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4337,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 4333,
															"name": "schedule",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4297,
															"src": "6698:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VestingSchedule_$3898_storage_ptr",
																"typeString": "struct TokenVesting.VestingSchedule storage pointer"
															}
														},
														"id": 4334,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6707:11:8",
														"memberName": "totalAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3883,
														"src": "6698:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 4335,
														"name": "vestedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4326,
														"src": "6721:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6698:35:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6675:58:8"
											},
											{
												"expression": {
													"id": 4342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4338,
															"name": "schedule",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4297,
															"src": "6771:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VestingSchedule_$3898_storage_ptr",
																"typeString": "struct TokenVesting.VestingSchedule storage pointer"
															}
														},
														"id": 4340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6780:7:8",
														"memberName": "revoked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3897,
														"src": "6771:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 4341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6790:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6771:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4343,
												"nodeType": "ExpressionStatement",
												"src": "6771:23:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4344,
														"name": "refundAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4332,
														"src": "6858:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 4345,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6873:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6858:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4357,
												"nodeType": "IfStatement",
												"src": "6854:159:8",
												"trueBody": {
													"id": 4356,
													"nodeType": "Block",
													"src": "6876:137:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 4350,
																				"name": "treasury",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3931,
																				"src": "6930:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 4351,
																				"name": "refundAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4332,
																				"src": "6940:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 4348,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3907,
																				"src": "6915:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$225",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 4349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6921:8:8",
																			"memberName": "transfer",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 192,
																			"src": "6915:14:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (address,uint256) external returns (bool)"
																			}
																		},
																		"id": 4352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6915:38:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"id": 4353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6971:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																			"typeString": "literal_string \"Transfer failed\""
																		},
																		"value": "Transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																			"typeString": "literal_string \"Transfer failed\""
																		}
																	],
																	"id": 4347,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6890:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 4354,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6890:112:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4355,
															"nodeType": "ExpressionStatement",
															"src": "6890:112:8"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 4359,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4288,
															"src": "7051:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4360,
															"name": "scheduleId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4290,
															"src": "7064:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 4361,
															"name": "refundAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4332,
															"src": "7076:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4358,
														"name": "VestingScheduleRevoked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3950,
														"src": "7028:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 4362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7028:61:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4363,
												"nodeType": "EmitStatement",
												"src": "7023:66:8"
											}
										]
									},
									"documentation": {
										"id": 4286,
										"nodeType": "StructuredDocumentation",
										"src": "6135:52:8",
										"text": " @notice Revoke a vesting schedule"
									},
									"functionSelector": "eac449d9",
									"id": 4365,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4293,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4292,
												"name": "onlyOwner",
												"nameLocations": [
													"6280:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6280:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "6280:9:8"
										}
									],
									"name": "revoke",
									"nameLocation": "6201:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4288,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "6225:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 4365,
												"src": "6217:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6217:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4290,
												"mutability": "mutable",
												"name": "scheduleId",
												"nameLocation": "6254:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 4365,
												"src": "6246:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6246:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6207:63:8"
									},
									"returnParameters": {
										"id": 4294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6290:0:8"
									},
									"scope": 4575,
									"src": "6192:904:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 4446,
										"nodeType": "Block",
										"src": "7279:703:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 4374,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7293:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 4375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7299:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7293:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 4376,
															"name": "schedule",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4369,
															"src": "7311:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VestingSchedule_$3898_memory_ptr",
																"typeString": "struct TokenVesting.VestingSchedule memory"
															}
														},
														"id": 4377,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7320:9:8",
														"memberName": "startTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3887,
														"src": "7311:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7293:36:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4382,
												"nodeType": "IfStatement",
												"src": "7289:75:8",
												"trueBody": {
													"id": 4381,
													"nodeType": "Block",
													"src": "7331:33:8",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 4379,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7352:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 4373,
															"id": 4380,
															"nodeType": "Return",
															"src": "7345:8:8"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 4383,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7378:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 4384,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7384:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7378:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 4385,
																"name": "schedule",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4369,
																"src": "7396:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VestingSchedule_$3898_memory_ptr",
																	"typeString": "struct TokenVesting.VestingSchedule memory"
																}
															},
															"id": 4386,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7405:9:8",
															"memberName": "startTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3887,
															"src": "7396:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"expression": {
																"id": 4387,
																"name": "schedule",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4369,
																"src": "7417:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VestingSchedule_$3898_memory_ptr",
																	"typeString": "struct TokenVesting.VestingSchedule memory"
																}
															},
															"id": 4388,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7426:13:8",
															"memberName": "cliffDuration",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3891,
															"src": "7417:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7396:43:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7378:61:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4394,
												"nodeType": "IfStatement",
												"src": "7374:100:8",
												"trueBody": {
													"id": 4393,
													"nodeType": "Block",
													"src": "7441:33:8",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 4391,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7462:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 4373,
															"id": 4392,
															"nodeType": "Return",
															"src": "7455:8:8"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 4395,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7488:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 4396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7494:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7488:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 4397,
																"name": "schedule",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4369,
																"src": "7507:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VestingSchedule_$3898_memory_ptr",
																	"typeString": "struct TokenVesting.VestingSchedule memory"
																}
															},
															"id": 4398,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7516:9:8",
															"memberName": "startTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3887,
															"src": "7507:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"expression": {
																"id": 4399,
																"name": "schedule",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4369,
																"src": "7528:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VestingSchedule_$3898_memory_ptr",
																	"typeString": "struct TokenVesting.VestingSchedule memory"
																}
															},
															"id": 4400,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7537:8:8",
															"memberName": "duration",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3889,
															"src": "7528:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7507:38:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7488:57:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4407,
												"nodeType": "IfStatement",
												"src": "7484:115:8",
												"trueBody": {
													"id": 4406,
													"nodeType": "Block",
													"src": "7547:52:8",
													"statements": [
														{
															"expression": {
																"expression": {
																	"id": 4403,
																	"name": "schedule",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4369,
																	"src": "7568:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_VestingSchedule_$3898_memory_ptr",
																		"typeString": "struct TokenVesting.VestingSchedule memory"
																	}
																},
																"id": 4404,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7577:11:8",
																"memberName": "totalAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3883,
																"src": "7568:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 4373,
															"id": 4405,
															"nodeType": "Return",
															"src": "7561:27:8"
														}
													]
												}
											},
											{
												"assignments": [
													4409
												],
												"declarations": [
													{
														"constant": false,
														"id": 4409,
														"mutability": "mutable",
														"name": "timeFromStart",
														"nameLocation": "7617:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 4446,
														"src": "7609:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4408,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7609:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4415,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 4410,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7633:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 4411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7639:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7633:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 4412,
															"name": "schedule",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4369,
															"src": "7651:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VestingSchedule_$3898_memory_ptr",
																"typeString": "struct TokenVesting.VestingSchedule memory"
															}
														},
														"id": 4413,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7660:9:8",
														"memberName": "startTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3887,
														"src": "7651:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7633:36:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7609:60:8"
											},
											{
												"assignments": [
													4417
												],
												"declarations": [
													{
														"constant": false,
														"id": 4417,
														"mutability": "mutable",
														"name": "secondsPerSlice",
														"nameLocation": "7687:15:8",
														"nodeType": "VariableDeclaration",
														"scope": 4446,
														"src": "7679:23:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4416,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7679:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4420,
												"initialValue": {
													"expression": {
														"id": 4418,
														"name": "schedule",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4369,
														"src": "7705:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VestingSchedule_$3898_memory_ptr",
															"typeString": "struct TokenVesting.VestingSchedule memory"
														}
													},
													"id": 4419,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7714:11:8",
													"memberName": "slicePeriod",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3893,
													"src": "7705:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7679:46:8"
											},
											{
												"assignments": [
													4422
												],
												"declarations": [
													{
														"constant": false,
														"id": 4422,
														"mutability": "mutable",
														"name": "vestedSlices",
														"nameLocation": "7743:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 4446,
														"src": "7735:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4421,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7735:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4426,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4423,
														"name": "timeFromStart",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4409,
														"src": "7758:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 4424,
														"name": "secondsPerSlice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4417,
														"src": "7774:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7758:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7735:54:8"
											},
											{
												"assignments": [
													4428
												],
												"declarations": [
													{
														"constant": false,
														"id": 4428,
														"mutability": "mutable",
														"name": "vestedSeconds",
														"nameLocation": "7807:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 4446,
														"src": "7799:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4427,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7799:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4432,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4429,
														"name": "vestedSlices",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4422,
														"src": "7823:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 4430,
														"name": "secondsPerSlice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4417,
														"src": "7838:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7823:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7799:54:8"
											},
											{
												"assignments": [
													4434
												],
												"declarations": [
													{
														"constant": false,
														"id": 4434,
														"mutability": "mutable",
														"name": "vestedAmount",
														"nameLocation": "7872:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 4446,
														"src": "7864:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4433,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7864:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4443,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 4435,
																		"name": "schedule",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4369,
																		"src": "7888:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_VestingSchedule_$3898_memory_ptr",
																			"typeString": "struct TokenVesting.VestingSchedule memory"
																		}
																	},
																	"id": 4436,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7897:11:8",
																	"memberName": "totalAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3883,
																	"src": "7888:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 4437,
																	"name": "vestedSeconds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4428,
																	"src": "7911:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7888:36:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 4439,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7887:38:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"expression": {
															"id": 4440,
															"name": "schedule",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4369,
															"src": "7928:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VestingSchedule_$3898_memory_ptr",
																"typeString": "struct TokenVesting.VestingSchedule memory"
															}
														},
														"id": 4441,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7937:8:8",
														"memberName": "duration",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3889,
														"src": "7928:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7887:58:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7864:81:8"
											},
											{
												"expression": {
													"id": 4444,
													"name": "vestedAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4434,
													"src": "7963:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4373,
												"id": 4445,
												"nodeType": "Return",
												"src": "7956:19:8"
											}
										]
									},
									"documentation": {
										"id": 4366,
										"nodeType": "StructuredDocumentation",
										"src": "7102:63:8",
										"text": " @notice Compute vested amount for a schedule"
									},
									"id": 4447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_computeVestedAmount",
									"nameLocation": "7179:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4369,
												"mutability": "mutable",
												"name": "schedule",
												"nameLocation": "7232:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 4447,
												"src": "7209:31:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_VestingSchedule_$3898_memory_ptr",
													"typeString": "struct TokenVesting.VestingSchedule"
												},
												"typeName": {
													"id": 4368,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4367,
														"name": "VestingSchedule",
														"nameLocations": [
															"7209:15:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3898,
														"src": "7209:15:8"
													},
													"referencedDeclaration": 3898,
													"src": "7209:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VestingSchedule_$3898_storage_ptr",
														"typeString": "struct TokenVesting.VestingSchedule"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7199:47:8"
									},
									"returnParameters": {
										"id": 4373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4447,
												"src": "7270:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7270:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7269:9:8"
									},
									"scope": 4575,
									"src": "7170:812:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4497,
										"nodeType": "Block",
										"src": "8370:385:8",
										"statements": [
											{
												"assignments": [
													4472
												],
												"declarations": [
													{
														"constant": false,
														"id": 4472,
														"mutability": "mutable",
														"name": "schedule",
														"nameLocation": "8403:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 4497,
														"src": "8380:31:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VestingSchedule_$3898_memory_ptr",
															"typeString": "struct TokenVesting.VestingSchedule"
														},
														"typeName": {
															"id": 4471,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 4470,
																"name": "VestingSchedule",
																"nameLocations": [
																	"8380:15:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 3898,
																"src": "8380:15:8"
															},
															"referencedDeclaration": 3898,
															"src": "8380:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VestingSchedule_$3898_storage_ptr",
																"typeString": "struct TokenVesting.VestingSchedule"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4478,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 4473,
															"name": "vestingSchedules",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3913,
															"src": "8414:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_VestingSchedule_$3898_storage_$dyn_storage_$",
																"typeString": "mapping(address => struct TokenVesting.VestingSchedule storage ref[] storage ref)"
															}
														},
														"id": 4475,
														"indexExpression": {
															"id": 4474,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4449,
															"src": "8431:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8414:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_VestingSchedule_$3898_storage_$dyn_storage",
															"typeString": "struct TokenVesting.VestingSchedule storage ref[] storage ref"
														}
													},
													"id": 4477,
													"indexExpression": {
														"id": 4476,
														"name": "scheduleId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4451,
														"src": "8444:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8414:41:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VestingSchedule_$3898_storage",
														"typeString": "struct TokenVesting.VestingSchedule storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8380:75:8"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 4479,
																"name": "schedule",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4472,
																"src": "8486:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VestingSchedule_$3898_memory_ptr",
																	"typeString": "struct TokenVesting.VestingSchedule memory"
																}
															},
															"id": 4480,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8495:11:8",
															"memberName": "totalAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3883,
															"src": "8486:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 4481,
																"name": "schedule",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4472,
																"src": "8520:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VestingSchedule_$3898_memory_ptr",
																	"typeString": "struct TokenVesting.VestingSchedule memory"
																}
															},
															"id": 4482,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8529:14:8",
															"memberName": "releasedAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3885,
															"src": "8520:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 4483,
																"name": "schedule",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4472,
																"src": "8557:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VestingSchedule_$3898_memory_ptr",
																	"typeString": "struct TokenVesting.VestingSchedule memory"
																}
															},
															"id": 4484,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8566:9:8",
															"memberName": "startTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3887,
															"src": "8557:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 4485,
																"name": "schedule",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4472,
																"src": "8589:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VestingSchedule_$3898_memory_ptr",
																	"typeString": "struct TokenVesting.VestingSchedule memory"
																}
															},
															"id": 4486,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8598:8:8",
															"memberName": "duration",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3889,
															"src": "8589:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 4487,
																"name": "schedule",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4472,
																"src": "8620:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VestingSchedule_$3898_memory_ptr",
																	"typeString": "struct TokenVesting.VestingSchedule memory"
																}
															},
															"id": 4488,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8629:13:8",
															"memberName": "cliffDuration",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3891,
															"src": "8620:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 4489,
																"name": "schedule",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4472,
																"src": "8656:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VestingSchedule_$3898_memory_ptr",
																	"typeString": "struct TokenVesting.VestingSchedule memory"
																}
															},
															"id": 4490,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8665:11:8",
															"memberName": "slicePeriod",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3893,
															"src": "8656:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 4491,
																"name": "schedule",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4472,
																"src": "8690:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VestingSchedule_$3898_memory_ptr",
																	"typeString": "struct TokenVesting.VestingSchedule memory"
																}
															},
															"id": 4492,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8699:9:8",
															"memberName": "revocable",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3895,
															"src": "8690:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 4493,
																"name": "schedule",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4472,
																"src": "8722:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VestingSchedule_$3898_memory_ptr",
																	"typeString": "struct TokenVesting.VestingSchedule memory"
																}
															},
															"id": 4494,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8731:7:8",
															"memberName": "revoked",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3897,
															"src": "8722:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 4495,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "8472:276:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$_t_bool_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256,uint256,uint256,bool,bool)"
													}
												},
												"functionReturnParameters": 4469,
												"id": 4496,
												"nodeType": "Return",
												"src": "8465:283:8"
											}
										]
									},
									"functionSelector": "bed9757e",
									"id": 4498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getVestingSchedule",
									"nameLocation": "8039:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4449,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "8075:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 4498,
												"src": "8067:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4451,
												"mutability": "mutable",
												"name": "scheduleId",
												"nameLocation": "8104:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 4498,
												"src": "8096:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8096:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8057:63:8"
									},
									"returnParameters": {
										"id": 4469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4454,
												"mutability": "mutable",
												"name": "totalAmount",
												"nameLocation": "8161:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 4498,
												"src": "8153:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8153:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4456,
												"mutability": "mutable",
												"name": "releasedAmount",
												"nameLocation": "8190:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 4498,
												"src": "8182:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8182:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4458,
												"mutability": "mutable",
												"name": "startTime",
												"nameLocation": "8222:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 4498,
												"src": "8214:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8214:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4460,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "8249:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 4498,
												"src": "8241:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8241:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4462,
												"mutability": "mutable",
												"name": "cliffDuration",
												"nameLocation": "8275:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 4498,
												"src": "8267:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8267:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4464,
												"mutability": "mutable",
												"name": "slicePeriod",
												"nameLocation": "8306:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 4498,
												"src": "8298:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8298:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4466,
												"mutability": "mutable",
												"name": "revocable",
												"nameLocation": "8332:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 4498,
												"src": "8327:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4465,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8327:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4468,
												"mutability": "mutable",
												"name": "revoked",
												"nameLocation": "8356:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 4498,
												"src": "8351:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4467,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8351:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8143:226:8"
									},
									"scope": 4575,
									"src": "8030:725:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 4523,
										"nodeType": "Block",
										"src": "8889:165:8",
										"statements": [
											{
												"assignments": [
													4509
												],
												"declarations": [
													{
														"constant": false,
														"id": 4509,
														"mutability": "mutable",
														"name": "schedule",
														"nameLocation": "8922:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 4523,
														"src": "8899:31:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VestingSchedule_$3898_memory_ptr",
															"typeString": "struct TokenVesting.VestingSchedule"
														},
														"typeName": {
															"id": 4508,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 4507,
																"name": "VestingSchedule",
																"nameLocations": [
																	"8899:15:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 3898,
																"src": "8899:15:8"
															},
															"referencedDeclaration": 3898,
															"src": "8899:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VestingSchedule_$3898_storage_ptr",
																"typeString": "struct TokenVesting.VestingSchedule"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4515,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 4510,
															"name": "vestingSchedules",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3913,
															"src": "8933:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_VestingSchedule_$3898_storage_$dyn_storage_$",
																"typeString": "mapping(address => struct TokenVesting.VestingSchedule storage ref[] storage ref)"
															}
														},
														"id": 4512,
														"indexExpression": {
															"id": 4511,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4500,
															"src": "8950:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8933:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_VestingSchedule_$3898_storage_$dyn_storage",
															"typeString": "struct TokenVesting.VestingSchedule storage ref[] storage ref"
														}
													},
													"id": 4514,
													"indexExpression": {
														"id": 4513,
														"name": "scheduleId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4502,
														"src": "8963:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8933:41:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VestingSchedule_$3898_storage",
														"typeString": "struct TokenVesting.VestingSchedule storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8899:75:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 4517,
																"name": "schedule",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4509,
																"src": "9012:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VestingSchedule_$3898_memory_ptr",
																	"typeString": "struct TokenVesting.VestingSchedule memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_VestingSchedule_$3898_memory_ptr",
																	"typeString": "struct TokenVesting.VestingSchedule memory"
																}
															],
															"id": 4516,
															"name": "_computeVestedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4447,
															"src": "8991:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_VestingSchedule_$3898_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct TokenVesting.VestingSchedule memory) view returns (uint256)"
															}
														},
														"id": 4518,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8991:30:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 4519,
															"name": "schedule",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4509,
															"src": "9024:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VestingSchedule_$3898_memory_ptr",
																"typeString": "struct TokenVesting.VestingSchedule memory"
															}
														},
														"id": 4520,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9033:14:8",
														"memberName": "releasedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3885,
														"src": "9024:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8991:56:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4506,
												"id": 4522,
												"nodeType": "Return",
												"src": "8984:63:8"
											}
										]
									},
									"functionSelector": "fc76977f",
									"id": 4524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeReleasableAmount",
									"nameLocation": "8770:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4500,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "8811:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 4524,
												"src": "8803:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8803:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4502,
												"mutability": "mutable",
												"name": "scheduleId",
												"nameLocation": "8840:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 4524,
												"src": "8832:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8832:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8793:63:8"
									},
									"returnParameters": {
										"id": 4506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4505,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4524,
												"src": "8880:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8880:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8879:9:8"
									},
									"scope": 4575,
									"src": "8761:293:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 4555,
										"nodeType": "Block",
										"src": "9179:198:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 4538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4533,
																"name": "newTreasury",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4527,
																"src": "9197:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 4536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9220:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 4535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9212:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 4534,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9212:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 4537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9212:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9197:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 4539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9224:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 4532,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9189:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9189:53:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4541,
												"nodeType": "ExpressionStatement",
												"src": "9189:53:8"
											},
											{
												"assignments": [
													4543
												],
												"declarations": [
													{
														"constant": false,
														"id": 4543,
														"mutability": "mutable",
														"name": "oldTreasury",
														"nameLocation": "9260:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 4555,
														"src": "9252:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 4542,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9252:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4545,
												"initialValue": {
													"id": 4544,
													"name": "treasury",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3931,
													"src": "9274:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9252:30:8"
											},
											{
												"expression": {
													"id": 4548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4546,
														"name": "treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3931,
														"src": "9292:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4547,
														"name": "newTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4527,
														"src": "9303:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9292:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 4549,
												"nodeType": "ExpressionStatement",
												"src": "9292:22:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 4551,
															"name": "oldTreasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4543,
															"src": "9345:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4552,
															"name": "newTreasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4527,
															"src": "9358:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 4550,
														"name": "TreasuryUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3964,
														"src": "9329:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 4553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9329:41:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4554,
												"nodeType": "EmitStatement",
												"src": "9324:46:8"
											}
										]
									},
									"documentation": {
										"id": 4525,
										"nodeType": "StructuredDocumentation",
										"src": "9060:50:8",
										"text": " @notice Update treasury address"
									},
									"functionSelector": "7f51bb1f",
									"id": 4556,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4530,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4529,
												"name": "onlyOwner",
												"nameLocations": [
													"9169:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "9169:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "9169:9:8"
										}
									],
									"name": "updateTreasury",
									"nameLocation": "9124:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4527,
												"mutability": "mutable",
												"name": "newTreasury",
												"nameLocation": "9147:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 4556,
												"src": "9139:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9139:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9138:21:8"
									},
									"returnParameters": {
										"id": 4531,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9179:0:8"
									},
									"scope": 4575,
									"src": "9115:262:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 4564,
										"nodeType": "Block",
										"src": "9446:25:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 4561,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "9456:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 4562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9456:8:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4563,
												"nodeType": "ExpressionStatement",
												"src": "9456:8:8"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 4565,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4559,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4558,
												"name": "onlyOwner",
												"nameLocations": [
													"9436:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "9436:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "9436:9:8"
										}
									],
									"name": "pause",
									"nameLocation": "9419:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9424:2:8"
									},
									"returnParameters": {
										"id": 4560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9446:0:8"
									},
									"scope": 4575,
									"src": "9410:61:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 4573,
										"nodeType": "Block",
										"src": "9515:27:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 4570,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "9525:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 4571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9525:10:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4572,
												"nodeType": "ExpressionStatement",
												"src": "9525:10:8"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 4574,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4568,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4567,
												"name": "onlyOwner",
												"nameLocations": [
													"9505:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "9505:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "9505:9:8"
										}
									],
									"name": "unpause",
									"nameLocation": "9486:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9493:2:8"
									},
									"returnParameters": {
										"id": 4569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9515:0:8"
									},
									"scope": 4575,
									"src": "9477:65:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 4576,
							"src": "503:9041:8",
							"usedErrors": [
								13,
								18,
								329,
								332,
								438
							],
							"usedEvents": [
								24,
								321,
								326,
								3942,
								3950,
								3958,
								3964
							]
						}
					],
					"src": "32:9512:8"
				},
				"id": 8
			}
		}
	}
}